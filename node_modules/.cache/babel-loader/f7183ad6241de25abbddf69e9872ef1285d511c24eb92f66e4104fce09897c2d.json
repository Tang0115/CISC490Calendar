{"ast":null,"code":"var _jsxFileName = \"/home/tang0115/cisc490/calendar/CISC-490-Calendar/src/components/DayDetails.js\",\n  _s = $RefreshSig$();\nimport React, { useMemo, useState, useEffect } from 'react';\nimport RecurringOptionsModal from './RecurringOptionsModal';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst getLocalDateString = date => {\n  const d = new Date(date);\n  const year = d.getFullYear();\n  const month = String(d.getMonth() + 1).padStart(2, '0');\n  const day = String(d.getDate()).padStart(2, '0');\n  return `${year}-${month}-${day}`;\n};\nconst generateRecurringDates = (startDate, recurringOptions) => {\n  const dates = [];\n  const start = new Date(startDate);\n  const end = new Date(recurringOptions.endDate);\n  let currentDate = new Date(start);\n\n  // Validate dates\n  if (isNaN(start.getTime()) || isNaN(end.getTime())) {\n    console.error('Invalid start or end date');\n    return dates;\n  }\n\n  // Ensure interval is valid\n  const interval = Math.max(1, parseInt(recurringOptions.interval) || 1);\n  while (currentDate <= end) {\n    if (recurringOptions.frequency === 'daily') {\n      dates.push(new Date(currentDate));\n      currentDate.setDate(currentDate.getDate() + interval);\n    } else if (recurringOptions.frequency === 'weekly') {\n      // Ensure weekDays is an array of valid day numbers (0-6)\n      const validWeekDays = recurringOptions.weekDays.map(day => parseInt(day)).filter(day => !isNaN(day) && day >= 0 && day <= 6);\n      if (validWeekDays.includes(currentDate.getDay())) {\n        dates.push(new Date(currentDate));\n      }\n      currentDate.setDate(currentDate.getDate() + 1);\n\n      // If we've completed a week and have an interval > 1, skip ahead\n      if (currentDate.getDay() === 0 && interval > 1) {\n        currentDate.setDate(currentDate.getDate() + (interval - 1) * 7);\n      }\n    } else if (recurringOptions.frequency === 'monthly') {\n      dates.push(new Date(currentDate));\n      const oldMonth = currentDate.getMonth();\n      currentDate.setMonth(currentDate.getMonth() + interval);\n\n      // Handle month skipping (e.g., Jan 31 to Feb 31 should go to Feb 28)\n      if (currentDate.getMonth() > (oldMonth + interval) % 12) {\n        currentDate.setDate(0); // Set to last day of previous month\n      }\n    } else if (recurringOptions.frequency === 'yearly') {\n      dates.push(new Date(currentDate));\n      currentDate.setFullYear(currentDate.getFullYear() + interval);\n    }\n\n    // Safety check to prevent infinite loops\n    if (dates.length > 1000) {\n      console.warn('Too many recurring dates generated, truncating to 1000');\n      break;\n    }\n  }\n  return dates;\n};\nfunction DayDetails({\n  selectedDate,\n  setSelectedDate,\n  events,\n  setEvents\n}) {\n  _s();\n  const [newTask, setNewTask] = useState({\n    title: '',\n    description: '',\n    startTime: '',\n    endTime: '',\n    category: 'Work',\n    priority: 'Medium',\n    recurring: false\n  });\n  const [recurringModalOpen, setRecurringModalOpen] = useState(false);\n  const [recurringOptions, setRecurringOptions] = useState({\n    frequency: 'daily',\n    weekDays: [],\n    endDate: '',\n    interval: 1\n  });\n  const [editModalOpen, setEditModalOpen] = useState(false);\n  const [selectedTask, setSelectedTask] = useState(null);\n  const [confirmModalOpen, setConfirmModalOpen] = useState(false);\n  const [confirmAction, setConfirmAction] = useState(null);\n  const [confirmMessage, setConfirmMessage] = useState('');\n  const [pendingTask, setPendingTask] = useState(null);\n  const [lastAction, setLastAction] = useState(null);\n  const [showUndo, setShowUndo] = useState(false);\n  const [errors, setErrors] = useState({});\n  const [deletedTasks, setDeletedTasks] = useState([]);\n  const [showUndoNotification, setShowUndoNotification] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n  const [errorMessage, setErrorMessage] = useState('');\n  const categories = useMemo(() => ['Work', 'Personal', 'School'], []);\n  const priorities = ['Low', 'Medium', 'High', 'Critical'];\n  const months = useMemo(() => ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'], []);\n  const years = useMemo(() => {\n    const currentYear = new Date().getFullYear();\n    return Array.from({\n      length: 20\n    }, (_, i) => currentYear - 10 + i);\n  }, []);\n  const handleRecurringChange = checked => {\n    if (selectedTask) {\n      setSelectedTask({\n        ...selectedTask,\n        recurring: checked\n      });\n      if (checked) {\n        setRecurringModalOpen(true);\n      }\n    } else {\n      setNewTask({\n        ...newTask,\n        recurring: checked\n      });\n      if (checked) {\n        setRecurringModalOpen(true);\n      }\n    }\n  };\n  const handleRecurringOptionsSave = options => {\n    if (selectedTask) {\n      setSelectedTask({\n        ...selectedTask,\n        recurringOptions: options\n      });\n    } else {\n      setNewTask({\n        ...newTask,\n        recurringOptions: options\n      });\n    }\n  };\n  const validateTimeInputs = (startTime, endTime) => {\n    const errors = {};\n\n    // Check if times are provided\n    if (!startTime) {\n      errors.startTime = 'Start time is required';\n    }\n    if (!endTime) {\n      errors.endTime = 'End time is required';\n    }\n\n    // Validate time format\n    const timeRegex = /^([01]?[0-9]|2[0-3]):[0-5][0-9]$/;\n    if (startTime && !timeRegex.test(startTime)) {\n      errors.startTime = 'Invalid time format';\n    }\n    if (endTime && !timeRegex.test(endTime)) {\n      errors.endTime = 'Invalid time format';\n    }\n    if (startTime && endTime && timeRegex.test(startTime) && timeRegex.test(endTime)) {\n      const [startHour, startMinute] = startTime.split(':').map(Number);\n      const [endHour, endMinute] = endTime.split(':').map(Number);\n      const startMinutes = startHour * 60 + startMinute;\n      const endMinutes = endHour * 60 + endMinute;\n\n      // Handle events spanning midnight\n      if (endMinutes <= startMinutes && endMinutes !== 0) {\n        errors.endTime = 'End time must be after start time';\n      }\n    }\n    return errors;\n  };\n  const checkForOverlappingEvents = (startTime, endTime, taskId = null, date = null) => {\n    if (!startTime || !endTime) return false;\n    const [startHour, startMinute] = startTime.split(':').map(Number);\n    const [endHour, endMinute] = endTime.split(':').map(Number);\n    const newStartMinutes = startHour * 60 + startMinute;\n    const newEndMinutes = endHour * 60 + endMinute;\n    const targetDate = date || getLocalDateString(selectedDate);\n    return events.some(task => {\n      // Skip self when editing\n      if (taskId && task.taskId === taskId) return false;\n\n      // Only check events on the same day\n      if (task.date !== targetDate) return false;\n      const [taskStartHour, taskStartMinute] = task.startTime.split(':').map(Number);\n      const [taskEndHour, taskEndMinute] = task.endTime.split(':').map(Number);\n      const taskStartMinutes = taskStartHour * 60 + taskStartMinute;\n      const taskEndMinutes = taskEndHour * 60 + taskEndMinute;\n\n      // Handle events spanning midnight\n      const normalizedNewEnd = newEndMinutes < newStartMinutes ? newEndMinutes + 1440 : newEndMinutes;\n      const normalizedTaskEnd = taskEndMinutes < taskStartMinutes ? taskEndMinutes + 1440 : taskEndMinutes;\n\n      // Check if events overlap\n      const overlaps = newStartMinutes < normalizedTaskEnd && normalizedNewEnd > taskStartMinutes || newStartMinutes === taskStartMinutes && normalizedNewEnd === normalizedTaskEnd;\n      if (overlaps) {\n        console.log('Overlap detected:', {\n          new: {\n            start: startTime,\n            end: endTime\n          },\n          existing: {\n            start: task.startTime,\n            end: task.endTime\n          }\n        });\n      }\n      return overlaps;\n    });\n  };\n  const handleAddTask = async () => {\n    try {\n      var _newTask$title, _newTask$recurringOpt, _newTask$description;\n      setIsLoading(true);\n      setErrorMessage('');\n\n      // Validate required fields\n      if (!((_newTask$title = newTask.title) !== null && _newTask$title !== void 0 && _newTask$title.trim())) {\n        setErrors({\n          title: 'Title is required'\n        });\n        return;\n      }\n      const timeErrors = validateTimeInputs(newTask.startTime, newTask.endTime);\n      if (Object.keys(timeErrors).length > 0) {\n        setErrors(timeErrors);\n        return;\n      }\n      if (checkForOverlappingEvents(newTask.startTime, newTask.endTime)) {\n        setErrors({\n          overlap: 'This event overlaps with an existing event'\n        });\n        return;\n      }\n\n      // Validate recurring options if task is recurring\n      if (newTask.recurring && (!((_newTask$recurringOpt = newTask.recurringOptions) !== null && _newTask$recurringOpt !== void 0 && _newTask$recurringOpt.endDate) || newTask.recurringOptions.frequency === 'weekly' && (!newTask.recurringOptions.weekDays || newTask.recurringOptions.weekDays.length === 0))) {\n        setErrors({\n          recurring: 'Please complete recurring event settings'\n        });\n        return;\n      }\n      setErrors({});\n      const taskData = {\n        taskId: Date.now().toString(),\n        title: newTask.title.trim(),\n        description: ((_newTask$description = newTask.description) === null || _newTask$description === void 0 ? void 0 : _newTask$description.trim()) || '',\n        startTime: newTask.startTime,\n        endTime: newTask.endTime,\n        category: newTask.category || 'Work',\n        priority: newTask.priority || 'Medium',\n        recurring: newTask.recurring,\n        recurringOptions: newTask.recurring ? {\n          ...newTask.recurringOptions,\n          interval: Math.max(1, parseInt(newTask.recurringOptions.interval) || 1)\n        } : null,\n        metadata: {\n          createdBy: 'CurrentUser',\n          createdAt: new Date().toISOString(),\n          lastUpdated: new Date().toISOString()\n        },\n        date: getLocalDateString(selectedDate)\n      };\n      let tasksToAdd = [taskData];\n      if (taskData.recurring && taskData.recurringOptions) {\n        try {\n          const recurringDates = generateRecurringDates(new Date(`${taskData.date}T${taskData.startTime}`), taskData.recurringOptions);\n          if (recurringDates.length === 0) {\n            setErrors({\n              recurring: 'No valid recurring dates were generated'\n            });\n            return;\n          }\n          tasksToAdd = recurringDates.map((date, index) => {\n            const startTime = date.toTimeString().slice(0, 5);\n            const durationMs = new Date(`1970/01/01 ${taskData.endTime}`).getTime() - new Date(`1970/01/01 ${taskData.startTime}`).getTime();\n            const endTime = new Date(date.getTime() + durationMs).toTimeString().slice(0, 5);\n            return {\n              ...taskData,\n              taskId: `${taskData.taskId}-${index}`,\n              date: getLocalDateString(date),\n              startTime,\n              endTime,\n              metadata: {\n                ...taskData.metadata,\n                recurringGroupId: taskData.taskId\n              }\n            };\n          });\n        } catch (error) {\n          console.error('Error generating recurring dates:', error);\n          setErrors({\n            recurring: 'Error generating recurring dates'\n          });\n          return;\n        }\n      }\n\n      // Check storage limit before saving\n      try {\n        const updatedEvents = [...events, ...tasksToAdd];\n        const eventsJson = JSON.stringify(updatedEvents);\n        if (eventsJson.length > 5242880) {\n          // 5MB limit\n          setErrorMessage('Storage limit exceeded. Please delete some tasks.');\n          return;\n        }\n        localStorage.setItem('tasks', eventsJson);\n      } catch (e) {\n        if (e.name === 'QuotaExceededError') {\n          setErrorMessage('Storage limit exceeded. Please delete some tasks.');\n          return;\n        }\n        throw e;\n      }\n      setLastAction({\n        type: 'add',\n        tasks: tasksToAdd,\n        previousEvents: [...events]\n      });\n      setEvents(prevEvents => [...prevEvents, ...tasksToAdd]);\n      setShowUndo(true);\n      setTimeout(() => setShowUndo(false), 5000);\n\n      // Reset form\n      setNewTask({\n        title: '',\n        description: '',\n        startTime: '',\n        endTime: '',\n        category: 'Work',\n        priority: 'Medium',\n        recurring: false\n      });\n      setRecurringOptions({\n        frequency: 'daily',\n        weekDays: [],\n        endDate: '',\n        interval: 1\n      });\n    } catch (error) {\n      console.error('Error adding task:', error);\n      setErrorMessage('An error occurred while adding the task. Please try again.');\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  const handleUpdateTask = (taskId, updatedTask) => {\n    setEvents(prevEvents => prevEvents.map(task => task.taskId === taskId ? {\n      ...task,\n      ...updatedTask,\n      metadata: {\n        ...task.metadata,\n        lastUpdated: new Date().toISOString()\n      }\n    } : task));\n  };\n  const handleEditTask = task => {\n    const timeErrors = validateTimeInputs(task.startTime, task.endTime);\n    if (Object.keys(timeErrors).length > 0) {\n      setErrors(timeErrors);\n      return;\n    }\n    if (checkForOverlappingEvents(task.startTime, task.endTime, task.taskId, task.date)) {\n      setErrors({\n        overlap: 'This event overlaps with an existing event'\n      });\n      return;\n    }\n    setErrors({});\n    if (task.recurring) {\n      setConfirmMessage('This is a recurring event. Would you like to edit all instances or just this one?');\n      setConfirmAction('edit');\n      setPendingTask(task);\n      setConfirmModalOpen(true);\n    } else {\n      setSelectedTask(task);\n      setEditModalOpen(true);\n    }\n  };\n  const handleDeleteTask = task => {\n    if (!task) return;\n    if (task.recurring) {\n      setConfirmMessage('This is a recurring event. Would you like to delete all instances or just this one?');\n      setConfirmAction('delete');\n      setPendingTask(task);\n      setConfirmModalOpen(true);\n    } else {\n      const updatedEvents = events.filter(e => e.taskId !== task.taskId);\n      try {\n        // Save to localStorage before updating state\n        localStorage.setItem('tasks', JSON.stringify(updatedEvents));\n\n        // Store the action for undo\n        setLastAction({\n          type: 'delete',\n          tasks: [task],\n          previousEvents: [...events]\n        });\n        setEvents(updatedEvents);\n        setShowUndo(true);\n        setTimeout(() => setShowUndo(false), 5000);\n      } catch (error) {\n        console.error('Error deleting task:', error);\n        setErrorMessage('Failed to delete task. Please try again.');\n      }\n    }\n  };\n  const handleDeleteRecurring = action => {\n    if (!pendingTask) return;\n    try {\n      let updatedEvents;\n      let deletedTasks;\n      if (action === 'all') {\n        // For recurring events, match the base taskId (before the hyphen)\n        const baseTaskId = pendingTask.taskId.split('-')[0];\n        deletedTasks = events.filter(event => {\n          var _event$metadata;\n          return event.taskId === pendingTask.taskId || ((_event$metadata = event.metadata) === null || _event$metadata === void 0 ? void 0 : _event$metadata.recurringGroupId) === baseTaskId;\n        });\n        updatedEvents = events.filter(event => {\n          var _event$metadata2;\n          return event.taskId !== pendingTask.taskId && ((_event$metadata2 = event.metadata) === null || _event$metadata2 === void 0 ? void 0 : _event$metadata2.recurringGroupId) !== baseTaskId;\n        });\n      } else {\n        // Delete only the selected instance\n        deletedTasks = [pendingTask];\n        updatedEvents = events.filter(event => event.taskId !== pendingTask.taskId);\n      }\n\n      // Save to localStorage before updating state\n      localStorage.setItem('tasks', JSON.stringify(updatedEvents));\n\n      // Store the action for undo\n      setLastAction({\n        type: 'delete',\n        tasks: deletedTasks,\n        previousEvents: [...events]\n      });\n      setEvents(updatedEvents);\n      setShowUndo(true);\n      setTimeout(() => setShowUndo(false), 5000);\n    } catch (error) {\n      console.error('Error deleting recurring task:', error);\n      setErrorMessage('Failed to delete recurring task. Please try again.');\n    } finally {\n      setConfirmModalOpen(false);\n      setPendingTask(null);\n    }\n  };\n  const handleConfirmAction = action => {\n    if (action === 'cancel') {\n      setConfirmModalOpen(false);\n      setPendingTask(null);\n      return;\n    }\n    if (confirmAction === 'edit') {\n      if (pendingTask) {\n        if (action === 'all') {\n          setSelectedTask(pendingTask);\n          setEditModalOpen(true);\n        } else if (action === 'single') {\n          setSelectedTask(pendingTask);\n          setEditModalOpen(true);\n        }\n      }\n    } else if (confirmAction === 'delete') {\n      if (pendingTask) {\n        if (action === 'all' && pendingTask.recurringOptions) {\n          // Delete all instances of the recurring event by matching the base taskId\n          const baseTaskId = pendingTask.taskId.split('-')[0];\n          setEvents(prevEvents => prevEvents.filter(task => !task.taskId.startsWith(baseTaskId)));\n        } else if (action === 'single') {\n          // Delete only this instance\n          setEvents(prevEvents => prevEvents.filter(task => task.taskId !== pendingTask.taskId));\n        }\n      }\n    }\n    setConfirmModalOpen(false);\n    setPendingTask(null);\n  };\n  const dayTasks = useMemo(() => {\n    const filteredTasks = events.filter(task => task.date === getLocalDateString(selectedDate)).sort((a, b) => new Date(`1970/01/01 ${a.startTime}`) - new Date(`1970/01/01 ${b.startTime}`));\n    return filteredTasks;\n  }, [events, selectedDate]);\n  useEffect(() => {\n    console.log('DayDetails selectedDate:', selectedDate, 'Normalized:', getLocalDateString(selectedDate));\n    console.log('DayDetails events:', events);\n    console.log('DayDetails dayTasks:', dayTasks);\n  }, [selectedDate, events, dayTasks]);\n  const getPriorityColor = priority => {\n    switch (priority) {\n      case 'Low':\n        return '#A8CCDC';\n      case 'Medium':\n        return '#DDA853';\n      case 'High':\n        return '#164046';\n      case 'Critical':\n        return '#FF0000';\n      default:\n        return '#FFFFFF';\n    }\n  };\n  const toggleTask = taskId => {\n    const task = events.find(t => t.taskId === taskId);\n    if (task) {\n      const updatedTask = {\n        ...task,\n        completed: !task.completed,\n        metadata: {\n          ...task.metadata,\n          lastUpdated: new Date().toISOString()\n        }\n      };\n      handleUpdateTask(taskId, updatedTask);\n    }\n  };\n  const handlePreviousDay = () => {\n    const prevDate = new Date(selectedDate);\n    prevDate.setDate(prevDate.getDate() - 1);\n    setSelectedDate(prevDate);\n  };\n  const handleNextDay = () => {\n    const nextDate = new Date(selectedDate);\n    nextDate.setDate(nextDate.getDate() + 1);\n    setSelectedDate(nextDate);\n  };\n  const handleToday = () => {\n    setSelectedDate(new Date());\n  };\n  const handleDateChange = (year, month, day) => {\n    const newDate = new Date(year, month, day);\n    if (!isNaN(newDate.getTime())) {\n      setSelectedDate(newDate);\n    }\n  };\n  const handleInputChange = (field, value) => {\n    setNewTask(prev => ({\n      ...prev,\n      [field]: value\n    }));\n  };\n  const formatTime12Hour = time => {\n    const [hours, minutes] = time.split(':').map(Number);\n    const period = hours >= 12 ? 'PM' : 'AM';\n    const adjustedHours = hours % 12 || 12;\n    return `${adjustedHours}:${minutes.toString().padStart(2, '0')} ${period}`;\n  };\n  const handleSaveEdit = () => {\n    var _selectedTask$descrip;\n    if (!selectedTask) return;\n    const timeErrors = validateTimeInputs(selectedTask.startTime, selectedTask.endTime);\n    if (Object.keys(timeErrors).length > 0) {\n      setErrors(timeErrors);\n      return;\n    }\n    if (checkForOverlappingEvents(selectedTask.startTime, selectedTask.endTime, selectedTask.taskId, selectedTask.date)) {\n      setErrors({\n        overlap: 'This event overlaps with an existing event'\n      });\n      return;\n    }\n    if (!selectedTask.title.trim()) {\n      setErrors({\n        title: 'Title is required'\n      });\n      return;\n    }\n    const updatedTask = {\n      ...selectedTask,\n      title: selectedTask.title.trim(),\n      description: ((_selectedTask$descrip = selectedTask.description) === null || _selectedTask$descrip === void 0 ? void 0 : _selectedTask$descrip.trim()) || '',\n      metadata: {\n        ...selectedTask.metadata,\n        lastUpdated: new Date().toISOString()\n      }\n    };\n    handleUpdateTask(selectedTask.taskId, updatedTask);\n    setEditModalOpen(false);\n    setSelectedTask(null);\n    setErrors({});\n  };\n  const handleUndo = () => {\n    if (!lastAction) return;\n    try {\n      let updatedEvents;\n      if (lastAction.type === 'add') {\n        // Undo add by restoring previous events\n        updatedEvents = [...lastAction.previousEvents];\n      } else if (lastAction.type === 'delete') {\n        // Undo delete by adding back deleted tasks\n        updatedEvents = [...events, ...lastAction.tasks];\n      } else if (lastAction.type === 'edit') {\n        // Undo edit by restoring previous version of tasks\n        updatedEvents = events.map(event => {\n          const previousVersion = lastAction.previousEvents.find(e => e.taskId === event.taskId);\n          return previousVersion || event;\n        });\n      }\n\n      // Save to localStorage\n      localStorage.setItem('tasks', JSON.stringify(updatedEvents));\n      setEvents(updatedEvents);\n      setShowUndo(false);\n      setLastAction(null);\n    } catch (error) {\n      console.error('Error undoing action:', error);\n      setErrorMessage('Failed to undo last action. Please try again.');\n    }\n  };\n  const handleUndoDelete = () => {\n    const lastDeletedTask = deletedTasks[deletedTasks.length - 1];\n    if (lastDeletedTask) {\n      setEvents(prevEvents => [...prevEvents, lastDeletedTask]);\n      setDeletedTasks(prev => prev.filter(task => task.taskId !== lastDeletedTask.taskId));\n      setShowUndoNotification(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"day-details\",\n    children: [errorMessage && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error-banner\",\n      role: \"alert\",\n      children: [errorMessage, /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setErrorMessage(''),\n        \"aria-label\": \"Dismiss error\",\n        children: \"\\xD7\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 641,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 639,\n      columnNumber: 9\n    }, this), isLoading && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading-overlay\",\n      role: \"status\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loading-spinner\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 648,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"visually-hidden\",\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 649,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 647,\n      columnNumber: 9\n    }, this), showUndo && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"undo-notification\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: [\"Task \", (lastAction === null || lastAction === void 0 ? void 0 : lastAction.type) === 'add' ? 'added' : 'deleted']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 654,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleUndo,\n        children: \"Undo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 655,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 653,\n      columnNumber: 9\n    }, this), showUndoNotification && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"undo-notification\",\n      role: \"alert\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"Task deleted\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 660,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleUndoDelete,\n        children: \"Undo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 661,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 659,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Details for \", selectedDate.toLocaleDateString('en-US', {\n        weekday: 'long',\n        month: 'long',\n        day: 'numeric'\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 664,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"date-navigation\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handlePreviousDay,\n        children: \"Previous Day\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 666,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleToday,\n        children: \"Today\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 667,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleNextDay,\n        children: \"Next Day\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 668,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"date-selector\",\n        children: [/*#__PURE__*/_jsxDEV(\"select\", {\n          value: selectedDate.getFullYear(),\n          onChange: e => handleDateChange(parseInt(e.target.value), selectedDate.getMonth(), selectedDate.getDate()),\n          children: years.map(year => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: year,\n            children: year\n          }, year, false, {\n            fileName: _jsxFileName,\n            lineNumber: 675,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 670,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          value: selectedDate.getMonth(),\n          onChange: e => handleDateChange(selectedDate.getFullYear(), parseInt(e.target.value), selectedDate.getDate()),\n          children: months.map((month, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: index,\n            children: month\n          }, month, false, {\n            fileName: _jsxFileName,\n            lineNumber: 683,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 678,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          value: selectedDate.getDate(),\n          onChange: e => handleDateChange(selectedDate.getFullYear(), selectedDate.getMonth(), parseInt(e.target.value)),\n          children: Array.from({\n            length: new Date(selectedDate.getFullYear(), selectedDate.getMonth() + 1, 0).getDate()\n          }, (_, i) => i + 1).map(day => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: day,\n            children: day\n          }, day, false, {\n            fileName: _jsxFileName,\n            lineNumber: 691,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 686,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 669,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 665,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"details-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"timeline-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Today's Timeline\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 698,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"timeline\",\n          children: dayTasks.map(task => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `timeline-item ${task.completed ? 'completed' : ''}`,\n            style: {\n              borderLeft: `5px solid ${getPriorityColor(task.priority)}`\n            },\n            onClick: () => toggleTask(task.taskId),\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"task-content\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"task-title\",\n                children: [task.title, task.recurring && /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"recurring-badge\",\n                  children: \"\\uD83D\\uDD04\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 710,\n                  columnNumber: 40\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 708,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"task-time\",\n                children: [formatTime12Hour(task.startTime), \" - \", formatTime12Hour(task.endTime)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 712,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"task-category\",\n                children: task.category\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 715,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"task-priority\",\n                children: [\"Priority: \", task.priority]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 718,\n                columnNumber: 19\n              }, this), task.description && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"task-description\",\n                children: task.description\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 722,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 707,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"task-actions\",\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"edit-button\",\n                onClick: e => {\n                  e.stopPropagation();\n                  handleEditTask(task);\n                },\n                children: \"Edit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 728,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"delete-button\",\n                onClick: e => {\n                  e.stopPropagation();\n                  handleDeleteTask(task);\n                },\n                children: \"Delete\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 732,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 727,\n              columnNumber: 17\n            }, this)]\n          }, task.taskId, true, {\n            fileName: _jsxFileName,\n            lineNumber: 701,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 699,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 697,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"right-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Add Task\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 742,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"schedule-section\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"task-input-complex\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"input-row\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"Task Category:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 746,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                value: newTask.category,\n                onChange: e => handleInputChange('category', e.target.value),\n                children: categories.map(cat => /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: cat,\n                  children: cat\n                }, cat, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 749,\n                  columnNumber: 21\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 747,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 745,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"input-row\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"task-title\",\n                children: \"Task Title:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 754,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                id: \"task-title\",\n                type: \"text\",\n                value: newTask.title,\n                onChange: e => handleInputChange('title', e.target.value),\n                placeholder: \"Enter task title\",\n                \"aria-invalid\": errors.title ? 'true' : 'false',\n                \"aria-describedby\": errors.title ? 'title-error' : undefined\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 755,\n                columnNumber: 17\n              }, this), errors.title && /*#__PURE__*/_jsxDEV(\"span\", {\n                id: \"title-error\",\n                className: \"error-message\",\n                children: errors.title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 764,\n                columnNumber: 34\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 753,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"input-row\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"Task Description:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 767,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                value: newTask.description,\n                onChange: e => handleInputChange('description', e.target.value),\n                placeholder: \"Enter Task Description...\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 768,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 766,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"input-row\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"start-time\",\n                children: \"Starting Time:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 776,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                id: \"start-time\",\n                type: \"time\",\n                value: newTask.startTime,\n                onChange: e => handleInputChange('startTime', e.target.value),\n                \"aria-invalid\": errors.startTime ? 'true' : 'false',\n                \"aria-describedby\": errors.startTime ? 'start-time-error' : undefined\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 777,\n                columnNumber: 17\n              }, this), errors.startTime && /*#__PURE__*/_jsxDEV(\"span\", {\n                id: \"start-time-error\",\n                className: \"error-message\",\n                children: errors.startTime\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 785,\n                columnNumber: 38\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 775,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"input-row\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"end-time\",\n                children: \"Ending Time:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 788,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                id: \"end-time\",\n                type: \"time\",\n                value: newTask.endTime,\n                onChange: e => handleInputChange('endTime', e.target.value),\n                \"aria-invalid\": errors.endTime ? 'true' : 'false',\n                \"aria-describedby\": errors.endTime ? 'end-time-error' : undefined\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 789,\n                columnNumber: 17\n              }, this), errors.endTime && /*#__PURE__*/_jsxDEV(\"span\", {\n                id: \"end-time-error\",\n                className: \"error-message\",\n                children: errors.endTime\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 797,\n                columnNumber: 36\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 787,\n              columnNumber: 15\n            }, this), errors.overlap && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"overlap-warning-popup\",\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                children: \"Schedule Conflict\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 801,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: errors.overlap\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 802,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"close-button\",\n                onClick: () => setErrors({}),\n                children: \"Close\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 803,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 800,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"input-row\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"Priority:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 809,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                value: newTask.priority,\n                onChange: e => handleInputChange('priority', e.target.value),\n                children: priorities.map(p => /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: p,\n                  children: [p, \" Priority\"]\n                }, p, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 812,\n                  columnNumber: 21\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 810,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 808,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"input-row\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"Recurring Task:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 817,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"checkbox\",\n                checked: newTask.recurring,\n                onChange: e => handleRecurringChange(e.target.checked)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 818,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 816,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"input-row\",\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: handleAddTask,\n                children: \"Add\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 825,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 824,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 744,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 743,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 741,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 696,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(RecurringOptionsModal, {\n      isOpen: recurringModalOpen,\n      onClose: () => setRecurringModalOpen(false),\n      onSave: handleRecurringOptionsSave,\n      recurringOptions: recurringOptions,\n      setRecurringOptions: setRecurringOptions\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 832,\n      columnNumber: 7\n    }, this), editModalOpen && selectedTask && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal-overlay\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-header\",\n          children: \"Edit Task\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 844,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-row\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Title:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 846,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: selectedTask.title,\n            onChange: e => setSelectedTask({\n              ...selectedTask,\n              title: e.target.value\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 847,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 845,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-row\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Description:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 854,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: selectedTask.description,\n            onChange: e => setSelectedTask({\n              ...selectedTask,\n              description: e.target.value\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 855,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 853,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-row\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Start Time:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 862,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"time\",\n            value: selectedTask.startTime,\n            onChange: e => setSelectedTask({\n              ...selectedTask,\n              startTime: e.target.value\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 863,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 861,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-row\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"End Time:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 870,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"time\",\n            value: selectedTask.endTime,\n            onChange: e => setSelectedTask({\n              ...selectedTask,\n              endTime: e.target.value\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 871,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 869,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-row\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Category:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 878,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            value: selectedTask.category,\n            onChange: e => setSelectedTask({\n              ...selectedTask,\n              category: e.target.value\n            }),\n            children: categories.map(cat => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: cat,\n              children: cat\n            }, cat, false, {\n              fileName: _jsxFileName,\n              lineNumber: 884,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 879,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 877,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-row\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Priority:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 889,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            value: selectedTask.priority,\n            onChange: e => setSelectedTask({\n              ...selectedTask,\n              priority: e.target.value\n            }),\n            children: priorities.map(p => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: p,\n              children: p\n            }, p, false, {\n              fileName: _jsxFileName,\n              lineNumber: 895,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 890,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 888,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-row\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Recurring:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 900,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            checked: selectedTask.recurring,\n            onChange: e => handleRecurringChange(e.target.checked)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 901,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 899,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-buttons\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"save-btn\",\n            onClick: handleSaveEdit,\n            children: \"Save\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 908,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"cancel-btn\",\n            onClick: () => setEditModalOpen(false),\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 909,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 907,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 843,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 842,\n      columnNumber: 9\n    }, this), confirmModalOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal-overlay\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-header\",\n          children: \"Confirm Action\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 919,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"confirm-message\",\n          children: confirmMessage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 920,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-buttons\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"save-btn\",\n            onClick: () => handleConfirmAction('all'),\n            children: \"All Instances\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 922,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"save-btn\",\n            onClick: () => handleConfirmAction('single'),\n            children: \"Just This One\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 923,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"cancel-btn\",\n            onClick: () => handleConfirmAction('cancel'),\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 924,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 921,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 918,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 917,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 637,\n    columnNumber: 5\n  }, this);\n}\n_s(DayDetails, \"jq031O8UhNAk7CX+lg0z+FQVuFk=\");\n_c = DayDetails;\nexport default DayDetails;\nvar _c;\n$RefreshReg$(_c, \"DayDetails\");","map":{"version":3,"names":["React","useMemo","useState","useEffect","RecurringOptionsModal","jsxDEV","_jsxDEV","getLocalDateString","date","d","Date","year","getFullYear","month","String","getMonth","padStart","day","getDate","generateRecurringDates","startDate","recurringOptions","dates","start","end","endDate","currentDate","isNaN","getTime","console","error","interval","Math","max","parseInt","frequency","push","setDate","validWeekDays","weekDays","map","filter","includes","getDay","oldMonth","setMonth","setFullYear","length","warn","DayDetails","selectedDate","setSelectedDate","events","setEvents","_s","newTask","setNewTask","title","description","startTime","endTime","category","priority","recurring","recurringModalOpen","setRecurringModalOpen","setRecurringOptions","editModalOpen","setEditModalOpen","selectedTask","setSelectedTask","confirmModalOpen","setConfirmModalOpen","confirmAction","setConfirmAction","confirmMessage","setConfirmMessage","pendingTask","setPendingTask","lastAction","setLastAction","showUndo","setShowUndo","errors","setErrors","deletedTasks","setDeletedTasks","showUndoNotification","setShowUndoNotification","isLoading","setIsLoading","errorMessage","setErrorMessage","categories","priorities","months","years","currentYear","Array","from","_","i","handleRecurringChange","checked","handleRecurringOptionsSave","options","validateTimeInputs","timeRegex","test","startHour","startMinute","split","Number","endHour","endMinute","startMinutes","endMinutes","checkForOverlappingEvents","taskId","newStartMinutes","newEndMinutes","targetDate","some","task","taskStartHour","taskStartMinute","taskEndHour","taskEndMinute","taskStartMinutes","taskEndMinutes","normalizedNewEnd","normalizedTaskEnd","overlaps","log","new","existing","handleAddTask","_newTask$title","_newTask$recurringOpt","_newTask$description","trim","timeErrors","Object","keys","overlap","taskData","now","toString","metadata","createdBy","createdAt","toISOString","lastUpdated","tasksToAdd","recurringDates","index","toTimeString","slice","durationMs","recurringGroupId","updatedEvents","eventsJson","JSON","stringify","localStorage","setItem","e","name","type","tasks","previousEvents","prevEvents","setTimeout","handleUpdateTask","updatedTask","handleEditTask","handleDeleteTask","handleDeleteRecurring","action","baseTaskId","event","_event$metadata","_event$metadata2","handleConfirmAction","startsWith","dayTasks","filteredTasks","sort","a","b","getPriorityColor","toggleTask","find","t","completed","handlePreviousDay","prevDate","handleNextDay","nextDate","handleToday","handleDateChange","newDate","handleInputChange","field","value","prev","formatTime12Hour","time","hours","minutes","period","adjustedHours","handleSaveEdit","_selectedTask$descrip","handleUndo","previousVersion","handleUndoDelete","lastDeletedTask","className","children","role","onClick","fileName","_jsxFileName","lineNumber","columnNumber","toLocaleDateString","weekday","onChange","target","style","borderLeft","stopPropagation","cat","htmlFor","id","placeholder","undefined","p","isOpen","onClose","onSave","_c","$RefreshReg$"],"sources":["/home/tang0115/cisc490/calendar/CISC-490-Calendar/src/components/DayDetails.js"],"sourcesContent":["import React, { useMemo, useState, useEffect } from 'react';\nimport RecurringOptionsModal from './RecurringOptionsModal';\n\nconst getLocalDateString = (date) => {\n  const d = new Date(date);\n  const year = d.getFullYear();\n  const month = String(d.getMonth() + 1).padStart(2, '0');\n  const day = String(d.getDate()).padStart(2, '0');\n  return `${year}-${month}-${day}`;\n};\n\nconst generateRecurringDates = (startDate, recurringOptions) => {\n  const dates = [];\n  const start = new Date(startDate);\n  const end = new Date(recurringOptions.endDate);\n  let currentDate = new Date(start);\n\n  // Validate dates\n  if (isNaN(start.getTime()) || isNaN(end.getTime())) {\n    console.error('Invalid start or end date');\n    return dates;\n  }\n\n  // Ensure interval is valid\n  const interval = Math.max(1, parseInt(recurringOptions.interval) || 1);\n\n  while (currentDate <= end) {\n    if (recurringOptions.frequency === 'daily') {\n      dates.push(new Date(currentDate));\n      currentDate.setDate(currentDate.getDate() + interval);\n    } else if (recurringOptions.frequency === 'weekly') {\n      // Ensure weekDays is an array of valid day numbers (0-6)\n      const validWeekDays = recurringOptions.weekDays\n        .map(day => parseInt(day))\n        .filter(day => !isNaN(day) && day >= 0 && day <= 6);\n\n      if (validWeekDays.includes(currentDate.getDay())) {\n        dates.push(new Date(currentDate));\n      }\n      currentDate.setDate(currentDate.getDate() + 1);\n      \n      // If we've completed a week and have an interval > 1, skip ahead\n      if (currentDate.getDay() === 0 && interval > 1) {\n        currentDate.setDate(currentDate.getDate() + (interval - 1) * 7);\n      }\n    } else if (recurringOptions.frequency === 'monthly') {\n      dates.push(new Date(currentDate));\n      const oldMonth = currentDate.getMonth();\n      currentDate.setMonth(currentDate.getMonth() + interval);\n      \n      // Handle month skipping (e.g., Jan 31 to Feb 31 should go to Feb 28)\n      if (currentDate.getMonth() > (oldMonth + interval) % 12) {\n        currentDate.setDate(0); // Set to last day of previous month\n      }\n    } else if (recurringOptions.frequency === 'yearly') {\n      dates.push(new Date(currentDate));\n      currentDate.setFullYear(currentDate.getFullYear() + interval);\n    }\n\n    // Safety check to prevent infinite loops\n    if (dates.length > 1000) {\n      console.warn('Too many recurring dates generated, truncating to 1000');\n      break;\n    }\n  }\n\n  return dates;\n};\n\nfunction DayDetails({ selectedDate, setSelectedDate, events, setEvents }) {\n  const [newTask, setNewTask] = useState({\n    title: '',\n    description: '',\n    startTime: '',\n    endTime: '',\n    category: 'Work',\n    priority: 'Medium',\n    recurring: false,\n  });\n  const [recurringModalOpen, setRecurringModalOpen] = useState(false);\n  const [recurringOptions, setRecurringOptions] = useState({\n    frequency: 'daily',\n    weekDays: [],\n    endDate: '',\n    interval: 1\n  });\n  const [editModalOpen, setEditModalOpen] = useState(false);\n  const [selectedTask, setSelectedTask] = useState(null);\n  const [confirmModalOpen, setConfirmModalOpen] = useState(false);\n  const [confirmAction, setConfirmAction] = useState(null);\n  const [confirmMessage, setConfirmMessage] = useState('');\n  const [pendingTask, setPendingTask] = useState(null);\n  const [lastAction, setLastAction] = useState(null);\n  const [showUndo, setShowUndo] = useState(false);\n  const [errors, setErrors] = useState({});\n  const [deletedTasks, setDeletedTasks] = useState([]);\n  const [showUndoNotification, setShowUndoNotification] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n  const [errorMessage, setErrorMessage] = useState('');\n\n  const categories = useMemo(() => ['Work', 'Personal', 'School'], []);\n  const priorities = ['Low', 'Medium', 'High', 'Critical'];\n\n  const months = useMemo(() => [\n    'January', 'February', 'March', 'April', 'May', 'June',\n    'July', 'August', 'September', 'October', 'November', 'December'\n  ], []);\n\n  const years = useMemo(() => {\n    const currentYear = new Date().getFullYear();\n    return Array.from({ length: 20 }, (_, i) => currentYear - 10 + i);\n  }, []);\n\n  const handleRecurringChange = (checked) => {\n    if (selectedTask) {\n      setSelectedTask({ ...selectedTask, recurring: checked });\n      if (checked) {\n        setRecurringModalOpen(true);\n      }\n    } else {\n      setNewTask({ ...newTask, recurring: checked });\n      if (checked) {\n        setRecurringModalOpen(true);\n      }\n    }\n  };\n\n  const handleRecurringOptionsSave = (options) => {\n    if (selectedTask) {\n      setSelectedTask({ ...selectedTask, recurringOptions: options });\n    } else {\n      setNewTask({ ...newTask, recurringOptions: options });\n    }\n  };\n\n  const validateTimeInputs = (startTime, endTime) => {\n    const errors = {};\n    \n    // Check if times are provided\n    if (!startTime) {\n      errors.startTime = 'Start time is required';\n    }\n    if (!endTime) {\n      errors.endTime = 'End time is required';\n    }\n\n    // Validate time format\n    const timeRegex = /^([01]?[0-9]|2[0-3]):[0-5][0-9]$/;\n    if (startTime && !timeRegex.test(startTime)) {\n      errors.startTime = 'Invalid time format';\n    }\n    if (endTime && !timeRegex.test(endTime)) {\n      errors.endTime = 'Invalid time format';\n    }\n\n    if (startTime && endTime && timeRegex.test(startTime) && timeRegex.test(endTime)) {\n      const [startHour, startMinute] = startTime.split(':').map(Number);\n      const [endHour, endMinute] = endTime.split(':').map(Number);\n      const startMinutes = startHour * 60 + startMinute;\n      const endMinutes = endHour * 60 + endMinute;\n      \n      // Handle events spanning midnight\n      if (endMinutes <= startMinutes && endMinutes !== 0) {\n        errors.endTime = 'End time must be after start time';\n      }\n    }\n    return errors;\n  };\n\n  const checkForOverlappingEvents = (startTime, endTime, taskId = null, date = null) => {\n    if (!startTime || !endTime) return false;\n\n    const [startHour, startMinute] = startTime.split(':').map(Number);\n    const [endHour, endMinute] = endTime.split(':').map(Number);\n    const newStartMinutes = startHour * 60 + startMinute;\n    const newEndMinutes = endHour * 60 + endMinute;\n    const targetDate = date || getLocalDateString(selectedDate);\n    \n    return events.some(task => {\n      // Skip self when editing\n      if (taskId && task.taskId === taskId) return false;\n      \n      // Only check events on the same day\n      if (task.date !== targetDate) return false;\n\n      const [taskStartHour, taskStartMinute] = task.startTime.split(':').map(Number);\n      const [taskEndHour, taskEndMinute] = task.endTime.split(':').map(Number);\n      const taskStartMinutes = taskStartHour * 60 + taskStartMinute;\n      const taskEndMinutes = taskEndHour * 60 + taskEndMinute;\n\n      // Handle events spanning midnight\n      const normalizedNewEnd = newEndMinutes < newStartMinutes ? newEndMinutes + 1440 : newEndMinutes;\n      const normalizedTaskEnd = taskEndMinutes < taskStartMinutes ? taskEndMinutes + 1440 : taskEndMinutes;\n\n      // Check if events overlap\n      const overlaps = (\n        (newStartMinutes < normalizedTaskEnd && normalizedNewEnd > taskStartMinutes) ||\n        (newStartMinutes === taskStartMinutes && normalizedNewEnd === normalizedTaskEnd)\n      );\n\n      if (overlaps) {\n        console.log('Overlap detected:', {\n          new: { start: startTime, end: endTime },\n          existing: { start: task.startTime, end: task.endTime }\n        });\n      }\n\n      return overlaps;\n    });\n  };\n\n  const handleAddTask = async () => {\n    try {\n      setIsLoading(true);\n      setErrorMessage('');\n      \n      // Validate required fields\n      if (!newTask.title?.trim()) {\n        setErrors({ title: 'Title is required' });\n        return;\n      }\n\n      const timeErrors = validateTimeInputs(newTask.startTime, newTask.endTime);\n      if (Object.keys(timeErrors).length > 0) {\n        setErrors(timeErrors);\n        return;\n      }\n\n      if (checkForOverlappingEvents(newTask.startTime, newTask.endTime)) {\n        setErrors({ overlap: 'This event overlaps with an existing event' });\n        return;\n      }\n\n      // Validate recurring options if task is recurring\n      if (newTask.recurring && (!newTask.recurringOptions?.endDate || \n          (newTask.recurringOptions.frequency === 'weekly' && \n           (!newTask.recurringOptions.weekDays || newTask.recurringOptions.weekDays.length === 0)))) {\n        setErrors({ recurring: 'Please complete recurring event settings' });\n        return;\n      }\n\n      setErrors({});\n      const taskData = {\n        taskId: Date.now().toString(),\n        title: newTask.title.trim(),\n        description: newTask.description?.trim() || '',\n        startTime: newTask.startTime,\n        endTime: newTask.endTime,\n        category: newTask.category || 'Work',\n        priority: newTask.priority || 'Medium',\n        recurring: newTask.recurring,\n        recurringOptions: newTask.recurring ? {\n          ...newTask.recurringOptions,\n          interval: Math.max(1, parseInt(newTask.recurringOptions.interval) || 1)\n        } : null,\n        metadata: { \n          createdBy: 'CurrentUser', \n          createdAt: new Date().toISOString(),\n          lastUpdated: new Date().toISOString() \n        },\n        date: getLocalDateString(selectedDate),\n      };\n\n      let tasksToAdd = [taskData];\n\n      if (taskData.recurring && taskData.recurringOptions) {\n        try {\n          const recurringDates = generateRecurringDates(\n            new Date(`${taskData.date}T${taskData.startTime}`),\n            taskData.recurringOptions\n          );\n\n          if (recurringDates.length === 0) {\n            setErrors({ recurring: 'No valid recurring dates were generated' });\n            return;\n          }\n\n          tasksToAdd = recurringDates.map((date, index) => {\n            const startTime = date.toTimeString().slice(0, 5);\n            const durationMs = new Date(`1970/01/01 ${taskData.endTime}`).getTime() - \n                             new Date(`1970/01/01 ${taskData.startTime}`).getTime();\n            const endTime = new Date(date.getTime() + durationMs).toTimeString().slice(0, 5);\n\n            return {\n              ...taskData,\n              taskId: `${taskData.taskId}-${index}`,\n              date: getLocalDateString(date),\n              startTime,\n              endTime,\n              metadata: {\n                ...taskData.metadata,\n                recurringGroupId: taskData.taskId\n              }\n            };\n          });\n        } catch (error) {\n          console.error('Error generating recurring dates:', error);\n          setErrors({ recurring: 'Error generating recurring dates' });\n          return;\n        }\n      }\n\n      // Check storage limit before saving\n      try {\n        const updatedEvents = [...events, ...tasksToAdd];\n        const eventsJson = JSON.stringify(updatedEvents);\n        if (eventsJson.length > 5242880) { // 5MB limit\n          setErrorMessage('Storage limit exceeded. Please delete some tasks.');\n          return;\n        }\n        localStorage.setItem('tasks', eventsJson);\n      } catch (e) {\n        if (e.name === 'QuotaExceededError') {\n          setErrorMessage('Storage limit exceeded. Please delete some tasks.');\n          return;\n        }\n        throw e;\n      }\n\n      setLastAction({\n        type: 'add',\n        tasks: tasksToAdd,\n        previousEvents: [...events]\n      });\n      setEvents(prevEvents => [...prevEvents, ...tasksToAdd]);\n      setShowUndo(true);\n      setTimeout(() => setShowUndo(false), 5000);\n\n      // Reset form\n      setNewTask({\n        title: '',\n        description: '',\n        startTime: '',\n        endTime: '',\n        category: 'Work',\n        priority: 'Medium',\n        recurring: false,\n      });\n      setRecurringOptions({\n        frequency: 'daily',\n        weekDays: [],\n        endDate: '',\n        interval: 1\n      });\n    } catch (error) {\n      console.error('Error adding task:', error);\n      setErrorMessage('An error occurred while adding the task. Please try again.');\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const handleUpdateTask = (taskId, updatedTask) => {\n    setEvents(prevEvents =>\n      prevEvents.map(task =>\n        task.taskId === taskId ? { ...task, ...updatedTask, metadata: { ...task.metadata, lastUpdated: new Date().toISOString() } } : task\n      )\n    );\n  };\n\n  const handleEditTask = (task) => {\n    const timeErrors = validateTimeInputs(task.startTime, task.endTime);\n    if (Object.keys(timeErrors).length > 0) {\n      setErrors(timeErrors);\n      return;\n    }\n\n    if (checkForOverlappingEvents(task.startTime, task.endTime, task.taskId, task.date)) {\n      setErrors({ overlap: 'This event overlaps with an existing event' });\n      return;\n    }\n\n    setErrors({});\n    if (task.recurring) {\n      setConfirmMessage('This is a recurring event. Would you like to edit all instances or just this one?');\n      setConfirmAction('edit');\n      setPendingTask(task);\n      setConfirmModalOpen(true);\n    } else {\n      setSelectedTask(task);\n      setEditModalOpen(true);\n    }\n  };\n\n  const handleDeleteTask = (task) => {\n    if (!task) return;\n\n    if (task.recurring) {\n      setConfirmMessage('This is a recurring event. Would you like to delete all instances or just this one?');\n      setConfirmAction('delete');\n      setPendingTask(task);\n      setConfirmModalOpen(true);\n    } else {\n      const updatedEvents = events.filter(e => e.taskId !== task.taskId);\n      \n      try {\n        // Save to localStorage before updating state\n        localStorage.setItem('tasks', JSON.stringify(updatedEvents));\n        \n        // Store the action for undo\n        setLastAction({\n          type: 'delete',\n          tasks: [task],\n          previousEvents: [...events]\n        });\n        \n        setEvents(updatedEvents);\n        setShowUndo(true);\n        setTimeout(() => setShowUndo(false), 5000);\n      } catch (error) {\n        console.error('Error deleting task:', error);\n        setErrorMessage('Failed to delete task. Please try again.');\n      }\n    }\n  };\n\n  const handleDeleteRecurring = (action) => {\n    if (!pendingTask) return;\n\n    try {\n      let updatedEvents;\n      let deletedTasks;\n\n      if (action === 'all') {\n        // For recurring events, match the base taskId (before the hyphen)\n        const baseTaskId = pendingTask.taskId.split('-')[0];\n        deletedTasks = events.filter(event => \n          event.taskId === pendingTask.taskId || \n          (event.metadata?.recurringGroupId === baseTaskId)\n        );\n        updatedEvents = events.filter(event => \n          event.taskId !== pendingTask.taskId && \n          event.metadata?.recurringGroupId !== baseTaskId\n        );\n      } else {\n        // Delete only the selected instance\n        deletedTasks = [pendingTask];\n        updatedEvents = events.filter(event => event.taskId !== pendingTask.taskId);\n      }\n\n      // Save to localStorage before updating state\n      localStorage.setItem('tasks', JSON.stringify(updatedEvents));\n\n      // Store the action for undo\n      setLastAction({\n        type: 'delete',\n        tasks: deletedTasks,\n        previousEvents: [...events]\n      });\n\n      setEvents(updatedEvents);\n      setShowUndo(true);\n      setTimeout(() => setShowUndo(false), 5000);\n    } catch (error) {\n      console.error('Error deleting recurring task:', error);\n      setErrorMessage('Failed to delete recurring task. Please try again.');\n    } finally {\n      setConfirmModalOpen(false);\n      setPendingTask(null);\n    }\n  };\n\n  const handleConfirmAction = (action) => {\n    if (action === 'cancel') {\n      setConfirmModalOpen(false);\n      setPendingTask(null);\n      return;\n    }\n\n    if (confirmAction === 'edit') {\n      if (pendingTask) {\n        if (action === 'all') {\n          setSelectedTask(pendingTask);\n          setEditModalOpen(true);\n        } else if (action === 'single') {\n          setSelectedTask(pendingTask);\n          setEditModalOpen(true);\n        }\n      }\n    } else if (confirmAction === 'delete') {\n      if (pendingTask) {\n        if (action === 'all' && pendingTask.recurringOptions) {\n          // Delete all instances of the recurring event by matching the base taskId\n          const baseTaskId = pendingTask.taskId.split('-')[0];\n          setEvents(prevEvents => prevEvents.filter(task => !task.taskId.startsWith(baseTaskId)));\n        } else if (action === 'single') {\n          // Delete only this instance\n          setEvents(prevEvents => prevEvents.filter(task => task.taskId !== pendingTask.taskId));\n        }\n      }\n    }\n    setConfirmModalOpen(false);\n    setPendingTask(null);\n  };\n\n  const dayTasks = useMemo(() => {\n    const filteredTasks = events.filter(task => task.date === getLocalDateString(selectedDate))\n      .sort((a, b) => new Date(`1970/01/01 ${a.startTime}`) - new Date(`1970/01/01 ${b.startTime}`));\n    return filteredTasks;\n  }, [events, selectedDate]);\n\n  useEffect(() => {\n    console.log('DayDetails selectedDate:', selectedDate, 'Normalized:', getLocalDateString(selectedDate));\n    console.log('DayDetails events:', events);\n    console.log('DayDetails dayTasks:', dayTasks);\n  }, [selectedDate, events, dayTasks]);\n\n  const getPriorityColor = (priority) => {\n    switch (priority) {\n      case 'Low': return '#A8CCDC';\n      case 'Medium': return '#DDA853';\n      case 'High': return '#164046';\n      case 'Critical': return '#FF0000';\n      default: return '#FFFFFF';\n    }\n  };\n\n  const toggleTask = (taskId) => {\n    const task = events.find(t => t.taskId === taskId);\n    if (task) {\n      const updatedTask = { ...task, completed: !task.completed, metadata: { ...task.metadata, lastUpdated: new Date().toISOString() } };\n      handleUpdateTask(taskId, updatedTask);\n    }\n  };\n\n  const handlePreviousDay = () => {\n    const prevDate = new Date(selectedDate);\n    prevDate.setDate(prevDate.getDate() - 1);\n    setSelectedDate(prevDate);\n  };\n\n  const handleNextDay = () => {\n    const nextDate = new Date(selectedDate);\n    nextDate.setDate(nextDate.getDate() + 1);\n    setSelectedDate(nextDate);\n  };\n\n  const handleToday = () => {\n    setSelectedDate(new Date());\n  };\n\n  const handleDateChange = (year, month, day) => {\n    const newDate = new Date(year, month, day);\n    if (!isNaN(newDate.getTime())) {\n      setSelectedDate(newDate);\n    }\n  };\n\n  const handleInputChange = (field, value) => {\n    setNewTask(prev => ({ ...prev, [field]: value }));\n  };\n\n  const formatTime12Hour = (time) => {\n    const [hours, minutes] = time.split(':').map(Number);\n    const period = hours >= 12 ? 'PM' : 'AM';\n    const adjustedHours = hours % 12 || 12;\n    return `${adjustedHours}:${minutes.toString().padStart(2, '0')} ${period}`;\n  };\n\n  const handleSaveEdit = () => {\n    if (!selectedTask) return;\n\n    const timeErrors = validateTimeInputs(selectedTask.startTime, selectedTask.endTime);\n    if (Object.keys(timeErrors).length > 0) {\n      setErrors(timeErrors);\n      return;\n    }\n\n    if (checkForOverlappingEvents(selectedTask.startTime, selectedTask.endTime, selectedTask.taskId, selectedTask.date)) {\n      setErrors({ overlap: 'This event overlaps with an existing event' });\n      return;\n    }\n\n    if (!selectedTask.title.trim()) {\n      setErrors({ title: 'Title is required' });\n      return;\n    }\n\n    const updatedTask = {\n      ...selectedTask,\n      title: selectedTask.title.trim(),\n      description: selectedTask.description?.trim() || '',\n      metadata: { \n        ...selectedTask.metadata, \n        lastUpdated: new Date().toISOString() \n      }\n    };\n\n    handleUpdateTask(selectedTask.taskId, updatedTask);\n    setEditModalOpen(false);\n    setSelectedTask(null);\n    setErrors({});\n  };\n\n  const handleUndo = () => {\n    if (!lastAction) return;\n\n    try {\n      let updatedEvents;\n      \n      if (lastAction.type === 'add') {\n        // Undo add by restoring previous events\n        updatedEvents = [...lastAction.previousEvents];\n      } else if (lastAction.type === 'delete') {\n        // Undo delete by adding back deleted tasks\n        updatedEvents = [...events, ...lastAction.tasks];\n      } else if (lastAction.type === 'edit') {\n        // Undo edit by restoring previous version of tasks\n        updatedEvents = events.map(event => {\n          const previousVersion = lastAction.previousEvents.find(e => e.taskId === event.taskId);\n          return previousVersion || event;\n        });\n      }\n\n      // Save to localStorage\n      localStorage.setItem('tasks', JSON.stringify(updatedEvents));\n      \n      setEvents(updatedEvents);\n      setShowUndo(false);\n      setLastAction(null);\n    } catch (error) {\n      console.error('Error undoing action:', error);\n      setErrorMessage('Failed to undo last action. Please try again.');\n    }\n  };\n\n  const handleUndoDelete = () => {\n    const lastDeletedTask = deletedTasks[deletedTasks.length - 1];\n    if (lastDeletedTask) {\n      setEvents(prevEvents => [...prevEvents, lastDeletedTask]);\n      setDeletedTasks(prev => prev.filter(task => task.taskId !== lastDeletedTask.taskId));\n      setShowUndoNotification(false);\n    }\n  };\n\n  return (\n    <div className=\"day-details\">\n      {errorMessage && (\n        <div className=\"error-banner\" role=\"alert\">\n          {errorMessage}\n          <button onClick={() => setErrorMessage('')} aria-label=\"Dismiss error\">\n            ×\n          </button>\n        </div>\n      )}\n      {isLoading && (\n        <div className=\"loading-overlay\" role=\"status\">\n          <div className=\"loading-spinner\"></div>\n          <span className=\"visually-hidden\">Loading...</span>\n        </div>\n      )}\n      {showUndo && (\n        <div className=\"undo-notification\">\n          <span>Task {lastAction?.type === 'add' ? 'added' : 'deleted'}</span>\n          <button onClick={handleUndo}>Undo</button>\n        </div>\n      )}\n      {showUndoNotification && (\n        <div className=\"undo-notification\" role=\"alert\">\n          <span>Task deleted</span>\n          <button onClick={handleUndoDelete}>Undo</button>\n        </div>\n      )}\n      <h2>Details for {selectedDate.toLocaleDateString('en-US', { weekday: 'long', month: 'long', day: 'numeric' })}</h2>\n      <div className=\"date-navigation\">\n        <button onClick={handlePreviousDay}>Previous Day</button>\n        <button onClick={handleToday}>Today</button>\n        <button onClick={handleNextDay}>Next Day</button>\n        <div className=\"date-selector\">\n          <select\n            value={selectedDate.getFullYear()}\n            onChange={(e) => handleDateChange(parseInt(e.target.value), selectedDate.getMonth(), selectedDate.getDate())}\n          >\n            {years.map(year => (\n              <option key={year} value={year}>{year}</option>\n            ))}\n          </select>\n          <select\n            value={selectedDate.getMonth()}\n            onChange={(e) => handleDateChange(selectedDate.getFullYear(), parseInt(e.target.value), selectedDate.getDate())}\n          >\n            {months.map((month, index) => (\n              <option key={month} value={index}>{month}</option>\n            ))}\n          </select>\n          <select\n            value={selectedDate.getDate()}\n            onChange={(e) => handleDateChange(selectedDate.getFullYear(), selectedDate.getMonth(), parseInt(e.target.value))}\n          >\n            {Array.from({ length: new Date(selectedDate.getFullYear(), selectedDate.getMonth() + 1, 0).getDate() }, (_, i) => i + 1).map(day => (\n              <option key={day} value={day}>{day}</option>\n            ))}\n          </select>\n        </div>\n      </div>\n      <div className=\"details-content\">\n        <div className=\"timeline-section\">\n          <h3>Today's Timeline</h3>\n          <div className=\"timeline\">\n            {dayTasks.map((task) => (\n              <div \n                key={task.taskId} \n                className={`timeline-item ${task.completed ? 'completed' : ''}`}\n                style={{ borderLeft: `5px solid ${getPriorityColor(task.priority)}` }}\n                onClick={() => toggleTask(task.taskId)}\n              >\n                <div className=\"task-content\">\n                  <div className=\"task-title\">\n                    {task.title}\n                    {task.recurring && <span className=\"recurring-badge\">🔄</span>}\n                  </div>\n                  <div className=\"task-time\">\n                    {formatTime12Hour(task.startTime)} - {formatTime12Hour(task.endTime)}\n                  </div>\n                  <div className=\"task-category\">\n                    {task.category}\n                  </div>\n                  <div className=\"task-priority\">\n                    Priority: {task.priority}\n                  </div>\n                  {task.description && (\n                    <div className=\"task-description\">\n                      {task.description}\n                    </div>\n                  )}\n                </div>\n                <div className=\"task-actions\">\n                  <button className=\"edit-button\" onClick={(e) => {\n                    e.stopPropagation();\n                    handleEditTask(task);\n                  }}>Edit</button>\n                  <button className=\"delete-button\" onClick={(e) => {\n                    e.stopPropagation();\n                    handleDeleteTask(task);\n                  }}>Delete</button>\n                </div>\n              </div>\n            ))}\n          </div>\n        </div>\n        <div className=\"right-section\">\n          <h3>Add Task</h3>\n          <div className=\"schedule-section\">\n            <div className=\"task-input-complex\">\n              <div className=\"input-row\">\n                <label>Task Category:</label>\n                <select value={newTask.category} onChange={(e) => handleInputChange('category', e.target.value)}>\n                  {categories.map(cat => (\n                    <option key={cat} value={cat}>{cat}</option>\n                  ))}\n                </select>\n              </div>\n              <div className=\"input-row\">\n                <label htmlFor=\"task-title\">Task Title:</label>\n                <input\n                  id=\"task-title\"\n                  type=\"text\"\n                  value={newTask.title}\n                  onChange={(e) => handleInputChange('title', e.target.value)}\n                  placeholder=\"Enter task title\"\n                  aria-invalid={errors.title ? 'true' : 'false'}\n                  aria-describedby={errors.title ? 'title-error' : undefined}\n                />\n                {errors.title && <span id=\"title-error\" className=\"error-message\">{errors.title}</span>}\n              </div>\n              <div className=\"input-row\">\n                <label>Task Description:</label>\n                <input\n                  type=\"text\"\n                  value={newTask.description}\n                  onChange={(e) => handleInputChange('description', e.target.value)}\n                  placeholder=\"Enter Task Description...\"\n                />\n              </div>\n              <div className=\"input-row\">\n                <label htmlFor=\"start-time\">Starting Time:</label>\n                <input\n                  id=\"start-time\"\n                  type=\"time\"\n                  value={newTask.startTime}\n                  onChange={(e) => handleInputChange('startTime', e.target.value)}\n                  aria-invalid={errors.startTime ? 'true' : 'false'}\n                  aria-describedby={errors.startTime ? 'start-time-error' : undefined}\n                />\n                {errors.startTime && <span id=\"start-time-error\" className=\"error-message\">{errors.startTime}</span>}\n              </div>\n              <div className=\"input-row\">\n                <label htmlFor=\"end-time\">Ending Time:</label>\n                <input\n                  id=\"end-time\"\n                  type=\"time\"\n                  value={newTask.endTime}\n                  onChange={(e) => handleInputChange('endTime', e.target.value)}\n                  aria-invalid={errors.endTime ? 'true' : 'false'}\n                  aria-describedby={errors.endTime ? 'end-time-error' : undefined}\n                />\n                {errors.endTime && <span id=\"end-time-error\" className=\"error-message\">{errors.endTime}</span>}\n              </div>\n              {errors.overlap && (\n                <div className=\"overlap-warning-popup\">\n                  <h3>Schedule Conflict</h3>\n                  <p>{errors.overlap}</p>\n                  <button className=\"close-button\" onClick={() => setErrors({})}>\n                    Close\n                  </button>\n                </div>\n              )}\n              <div className=\"input-row\">\n                <label>Priority:</label>\n                <select value={newTask.priority} onChange={(e) => handleInputChange('priority', e.target.value)}>\n                  {priorities.map(p => (\n                    <option key={p} value={p}>{p} Priority</option>\n                  ))}\n                </select>\n              </div>\n              <div className=\"input-row\">\n                <label>Recurring Task:</label>\n                <input\n                  type=\"checkbox\"\n                  checked={newTask.recurring}\n                  onChange={(e) => handleRecurringChange(e.target.checked)}\n                />\n              </div>\n              <div className=\"input-row\">\n                <button onClick={handleAddTask}>Add</button>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <RecurringOptionsModal\n        isOpen={recurringModalOpen}\n        onClose={() => setRecurringModalOpen(false)}\n        onSave={handleRecurringOptionsSave}\n        recurringOptions={recurringOptions}\n        setRecurringOptions={setRecurringOptions}\n      />\n\n      {/* Edit Task Modal */}\n      {editModalOpen && selectedTask && (\n        <div className=\"modal-overlay\">\n          <div className=\"modal-content\">\n            <div className=\"modal-header\">Edit Task</div>\n            <div className=\"input-row\">\n              <label>Title:</label>\n              <input\n                type=\"text\"\n                value={selectedTask.title}\n                onChange={(e) => setSelectedTask({ ...selectedTask, title: e.target.value })}\n              />\n            </div>\n            <div className=\"input-row\">\n              <label>Description:</label>\n              <input\n                type=\"text\"\n                value={selectedTask.description}\n                onChange={(e) => setSelectedTask({ ...selectedTask, description: e.target.value })}\n              />\n            </div>\n            <div className=\"input-row\">\n              <label>Start Time:</label>\n              <input\n                type=\"time\"\n                value={selectedTask.startTime}\n                onChange={(e) => setSelectedTask({ ...selectedTask, startTime: e.target.value })}\n              />\n            </div>\n            <div className=\"input-row\">\n              <label>End Time:</label>\n              <input\n                type=\"time\"\n                value={selectedTask.endTime}\n                onChange={(e) => setSelectedTask({ ...selectedTask, endTime: e.target.value })}\n              />\n            </div>\n            <div className=\"input-row\">\n              <label>Category:</label>\n              <select\n                value={selectedTask.category}\n                onChange={(e) => setSelectedTask({ ...selectedTask, category: e.target.value })}\n              >\n                {categories.map(cat => (\n                  <option key={cat} value={cat}>{cat}</option>\n                ))}\n              </select>\n            </div>\n            <div className=\"input-row\">\n              <label>Priority:</label>\n              <select\n                value={selectedTask.priority}\n                onChange={(e) => setSelectedTask({ ...selectedTask, priority: e.target.value })}\n              >\n                {priorities.map(p => (\n                  <option key={p} value={p}>{p}</option>\n                ))}\n              </select>\n            </div>\n            <div className=\"input-row\">\n              <label>Recurring:</label>\n              <input\n                type=\"checkbox\"\n                checked={selectedTask.recurring}\n                onChange={(e) => handleRecurringChange(e.target.checked)}\n              />\n            </div>\n            <div className=\"modal-buttons\">\n              <button className=\"save-btn\" onClick={handleSaveEdit}>Save</button>\n              <button className=\"cancel-btn\" onClick={() => setEditModalOpen(false)}>Cancel</button>\n            </div>\n          </div>\n        </div>\n      )}\n\n      {/* Confirmation Modal */}\n      {confirmModalOpen && (\n        <div className=\"modal-overlay\">\n          <div className=\"modal-content\">\n            <div className=\"modal-header\">Confirm Action</div>\n            <div className=\"confirm-message\">{confirmMessage}</div>\n            <div className=\"modal-buttons\">\n              <button className=\"save-btn\" onClick={() => handleConfirmAction('all')}>All Instances</button>\n              <button className=\"save-btn\" onClick={() => handleConfirmAction('single')}>Just This One</button>\n              <button className=\"cancel-btn\" onClick={() => handleConfirmAction('cancel')}>Cancel</button>\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default DayDetails;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}