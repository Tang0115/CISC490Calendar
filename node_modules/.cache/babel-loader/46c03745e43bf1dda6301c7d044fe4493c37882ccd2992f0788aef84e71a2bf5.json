{"ast":null,"code":"var _jsxFileName = \"/home/tang0115/cisc490/calendar/CISC-490-Calendar/src/components/DayDetails.js\",\n  _s = $RefreshSig$();\nimport React, { useMemo, useState, useEffect } from 'react';\nimport RecurringOptionsModal from './RecurringOptionsModal';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst getLocalDateString = date => {\n  const d = new Date(date);\n  const year = d.getFullYear();\n  const month = String(d.getMonth() + 1).padStart(2, '0');\n  const day = String(d.getDate()).padStart(2, '0');\n  return `${year}-${month}-${day}`;\n};\nconst generateRecurringDates = (startDate, recurringOptions) => {\n  const dates = [];\n  const start = new Date(startDate);\n  const end = new Date(recurringOptions.endDate);\n  let currentDate = new Date(start);\n  while (currentDate <= end) {\n    if (recurringOptions.frequency === 'daily') {\n      dates.push(new Date(currentDate));\n      currentDate.setDate(currentDate.getDate() + recurringOptions.interval);\n    } else if (recurringOptions.frequency === 'weekly') {\n      if (recurringOptions.weekDays.includes(currentDate.getDay())) {\n        dates.push(new Date(currentDate));\n      }\n      currentDate.setDate(currentDate.getDate() + 1);\n      if (currentDate.getDay() === 0) {\n        currentDate.setDate(currentDate.getDate() + (recurringOptions.interval - 1) * 7);\n      }\n    } else if (recurringOptions.frequency === 'monthly') {\n      dates.push(new Date(currentDate));\n      currentDate.setMonth(currentDate.getMonth() + recurringOptions.interval);\n    } else if (recurringOptions.frequency === 'yearly') {\n      dates.push(new Date(currentDate));\n      currentDate.setFullYear(currentDate.getFullYear() + recurringOptions.interval);\n    }\n  }\n  return dates;\n};\nfunction DayDetails({\n  selectedDate,\n  setSelectedDate,\n  events,\n  setEvents\n}) {\n  _s();\n  const [newTask, setNewTask] = useState({\n    title: '',\n    description: '',\n    startTime: '',\n    endTime: '',\n    category: 'Work',\n    priority: 'Medium',\n    recurring: false\n  });\n  const [showDelete, setShowDelete] = useState(null);\n  const [recurringModalOpen, setRecurringModalOpen] = useState(false);\n  const [recurringOptions, setRecurringOptions] = useState({\n    frequency: 'daily',\n    weekDays: [],\n    endDate: '',\n    interval: 1\n  });\n  const [editModalOpen, setEditModalOpen] = useState(false);\n  const [selectedTask, setSelectedTask] = useState(null);\n  const [confirmModalOpen, setConfirmModalOpen] = useState(false);\n  const [confirmAction, setConfirmAction] = useState(null);\n  const [confirmMessage, setConfirmMessage] = useState('');\n  const [pendingTask, setPendingTask] = useState(null);\n  const [lastAction, setLastAction] = useState(null);\n  const [showUndo, setShowUndo] = useState(false);\n  const [errors, setErrors] = useState({});\n  const [showRecurringModal, setShowRecurringModal] = useState(false);\n  const [deletedTasks, setDeletedTasks] = useState([]);\n  const [showUndoNotification, setShowUndoNotification] = useState(false);\n  const [undoTimeout, setUndoTimeout] = useState(null);\n  const categories = useMemo(() => ['Work', 'Personal', 'School'], []);\n  const priorities = ['Low', 'Medium', 'High', 'Critical'];\n  const months = useMemo(() => ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'], []);\n  const years = useMemo(() => {\n    const currentYear = new Date().getFullYear();\n    return Array.from({\n      length: 20\n    }, (_, i) => currentYear - 10 + i);\n  }, []);\n  const handleRecurringChange = checked => {\n    if (selectedTask) {\n      setSelectedTask({\n        ...selectedTask,\n        recurring: checked\n      });\n      if (checked) {\n        setRecurringModalOpen(true);\n      }\n    } else {\n      setNewTask({\n        ...newTask,\n        recurring: checked\n      });\n      if (checked) {\n        setRecurringModalOpen(true);\n      }\n    }\n  };\n  const handleRecurringOptionsSave = options => {\n    if (selectedTask) {\n      setSelectedTask({\n        ...selectedTask,\n        recurringOptions: options\n      });\n    } else {\n      setNewTask({\n        ...newTask,\n        recurringOptions: options\n      });\n    }\n  };\n  const validateTimeInputs = (startTime, endTime) => {\n    const errors = {};\n    if (!startTime) {\n      errors.startTime = 'Start time is required';\n    }\n    if (!endTime) {\n      errors.endTime = 'End time is required';\n    }\n    if (startTime && endTime) {\n      const start = new Date(`2000-01-01T${startTime}`);\n      const end = new Date(`2000-01-01T${endTime}`);\n      if (end <= start) {\n        errors.endTime = 'End time must be after start time';\n      }\n    }\n    return errors;\n  };\n  const checkForOverlappingEvents = (startTime, endTime, taskId = null) => {\n    const newStart = new Date(`2000-01-01T${startTime}`);\n    const newEnd = new Date(`2000-01-01T${endTime}`);\n    return events.some(task => {\n      if (taskId && task.taskId === taskId) return false;\n      const taskStart = new Date(`2000-01-01T${task.startTime}`);\n      const taskEnd = new Date(`2000-01-01T${task.endTime}`);\n      return newStart < taskEnd && newEnd > taskStart;\n    });\n  };\n  const handleAddTask = () => {\n    const timeErrors = validateTimeInputs(newTask.startTime, newTask.endTime);\n    if (Object.keys(timeErrors).length > 0) {\n      setErrors(timeErrors);\n      return;\n    }\n    if (checkForOverlappingEvents(newTask.startTime, newTask.endTime)) {\n      setErrors({\n        overlap: 'This event overlaps with an existing event'\n      });\n      return;\n    }\n    setErrors({});\n    const taskData = {\n      taskId: Date.now().toString(),\n      title: newTask.title,\n      description: newTask.description,\n      startTime: newTask.startTime,\n      endTime: newTask.endTime,\n      category: newTask.category,\n      priority: newTask.priority,\n      recurring: newTask.recurring,\n      recurringOptions: newTask.recurring ? newTask.recurringOptions : null,\n      metadata: {\n        createdBy: 'CurrentUser',\n        lastUpdated: new Date().toISOString()\n      },\n      date: getLocalDateString(selectedDate)\n    };\n    let tasksToAdd = [taskData];\n    if (taskData.recurring && taskData.recurringOptions) {\n      const recurringDates = generateRecurringDates(new Date(`${taskData.date}T${taskData.startTime}`), taskData.recurringOptions);\n      tasksToAdd = recurringDates.map((date, index) => ({\n        ...taskData,\n        taskId: `${taskData.taskId}-${index}`,\n        date: getLocalDateString(date),\n        startTime: date.toTimeString().slice(0, 5),\n        endTime: new Date(date.getTime() + (new Date(`1970/01/01 ${taskData.endTime}`).getTime() - new Date(`1970/01/01 ${taskData.startTime}`).getTime())).toTimeString().slice(0, 5)\n      }));\n    }\n    setLastAction({\n      type: 'add',\n      tasks: tasksToAdd,\n      previousEvents: [...events]\n    });\n    setEvents(prevEvents => [...prevEvents, ...tasksToAdd]);\n    setShowUndo(true);\n    setTimeout(() => setShowUndo(false), 5000);\n    setNewTask({\n      title: '',\n      description: '',\n      startTime: '',\n      endTime: '',\n      category: 'Work',\n      priority: 'Medium',\n      recurring: false\n    });\n  };\n  const handleUpdateTask = (taskId, updatedTask) => {\n    setEvents(prevEvents => prevEvents.map(task => task.taskId === taskId ? {\n      ...task,\n      ...updatedTask,\n      metadata: {\n        ...task.metadata,\n        lastUpdated: new Date().toISOString()\n      }\n    } : task));\n  };\n  const handleEditTask = task => {\n    const timeErrors = validateTimeInputs(task.startTime, task.endTime);\n    if (Object.keys(timeErrors).length > 0) {\n      setErrors(timeErrors);\n      return;\n    }\n    if (checkForOverlappingEvents(task.startTime, task.endTime, task.taskId)) {\n      setErrors({\n        overlap: 'This event overlaps with an existing event'\n      });\n      return;\n    }\n    setErrors({});\n    if (task.recurring) {\n      setConfirmMessage('This is a recurring event. Would you like to edit all instances or just this one?');\n      setConfirmAction('edit');\n      setPendingTask(task);\n      setConfirmModalOpen(true);\n    } else {\n      setSelectedTask(task);\n      setEditModalOpen(true);\n    }\n  };\n  const handleDeleteTask = taskId => {\n    const taskToDelete = events.find(task => task.taskId === taskId);\n    if (taskToDelete) {\n      setDeletedTasks([...deletedTasks, taskToDelete]);\n      setEvents(events.filter(task => task.taskId !== taskId));\n      setShowUndoNotification(true);\n\n      // Clear any existing timeout\n      if (undoTimeout) {\n        clearTimeout(undoTimeout);\n      }\n\n      // Set new timeout for 5 seconds\n      const timeout = setTimeout(() => {\n        setShowUndoNotification(false);\n        setDeletedTasks([]);\n      }, 5000);\n      setUndoTimeout(timeout);\n    }\n  };\n  const handleConfirmAction = action => {\n    if (confirmAction === 'edit') {\n      if (pendingTask) {\n        if (action === 'all') {\n          setSelectedTask(pendingTask);\n          setEditModalOpen(true);\n        } else if (action === 'single') {\n          setSelectedTask(pendingTask);\n          setEditModalOpen(true);\n        }\n      }\n    } else if (confirmAction === 'delete') {\n      if (pendingTask) {\n        if (action === 'all' && pendingTask.recurringOptions) {\n          // Delete all instances of the recurring event by matching the base taskId\n          const baseTaskId = pendingTask.taskId.split('-')[0];\n          setEvents(prevEvents => prevEvents.filter(task => !task.taskId.startsWith(baseTaskId)));\n        } else if (action === 'single') {\n          // Delete only this instance\n          setEvents(prevEvents => prevEvents.filter(task => task.taskId !== pendingTask.taskId));\n        }\n      }\n      setShowDelete(null);\n    }\n    setConfirmModalOpen(false);\n    setPendingTask(null);\n  };\n  const handleCancelConfirm = () => {\n    setConfirmModalOpen(false);\n    setPendingTask(null);\n  };\n  const dayTasks = useMemo(() => {\n    const filteredTasks = events.filter(task => task.date === getLocalDateString(selectedDate)).sort((a, b) => new Date(`1970/01/01 ${a.startTime}`) - new Date(`1970/01/01 ${b.startTime}`));\n    return filteredTasks;\n  }, [events, selectedDate]);\n  useEffect(() => {\n    console.log('DayDetails selectedDate:', selectedDate, 'Normalized:', getLocalDateString(selectedDate));\n    console.log('DayDetails events:', events);\n    console.log('DayDetails dayTasks:', dayTasks);\n  }, [selectedDate, events, dayTasks]);\n  const isTaskOverdue = task => {\n    const now = new Date();\n    const taskDate = new Date(task.date);\n    const taskTime = new Date(`${task.date}T${task.endTime}`);\n    return taskDate < now && taskTime < now;\n  };\n  const getPriorityColor = priority => {\n    switch (priority) {\n      case 'Low':\n        return '#4CAF50';\n      case 'Medium':\n        return '#FFC107';\n      case 'High':\n        return '#FF9800';\n      case 'Critical':\n        return '#F44336';\n      default:\n        return '#2196F3';\n    }\n  };\n  const toggleTask = taskId => {\n    const task = events.find(t => t.taskId === taskId);\n    if (task) {\n      const updatedTask = {\n        ...task,\n        completed: !task.completed,\n        metadata: {\n          ...task.metadata,\n          lastUpdated: new Date().toISOString()\n        }\n      };\n      handleUpdateTask(taskId, updatedTask);\n    }\n  };\n  const handlePreviousDay = () => {\n    const prevDate = new Date(selectedDate);\n    prevDate.setDate(prevDate.getDate() - 1);\n    setSelectedDate(prevDate);\n  };\n  const handleNextDay = () => {\n    const nextDate = new Date(selectedDate);\n    nextDate.setDate(nextDate.getDate() + 1);\n    setSelectedDate(nextDate);\n  };\n  const handleToday = () => {\n    setSelectedDate(new Date());\n  };\n  const handleDateChange = (year, month, day) => {\n    const newDate = new Date(year, month, day);\n    if (!isNaN(newDate.getTime())) {\n      setSelectedDate(newDate);\n    }\n  };\n  const handleInputChange = (field, value) => {\n    setNewTask(prev => ({\n      ...prev,\n      [field]: value\n    }));\n  };\n  const formatTime12Hour = time => {\n    const [hours, minutes] = time.split(':').map(Number);\n    const period = hours >= 12 ? 'PM' : 'AM';\n    const adjustedHours = hours % 12 || 12;\n    return `${adjustedHours}:${minutes.toString().padStart(2, '0')} ${period}`;\n  };\n  const handleSaveEdit = () => {\n    if (selectedTask.title.trim() && selectedTask.startTime && selectedTask.endTime) {\n      const updatedTask = {\n        ...selectedTask,\n        metadata: {\n          ...selectedTask.metadata,\n          lastUpdated: new Date().toISOString()\n        }\n      };\n      handleUpdateTask(selectedTask.taskId, updatedTask);\n      setEditModalOpen(false);\n      setSelectedTask(null);\n    }\n  };\n  const handleUndo = () => {\n    if (lastAction) {\n      setEvents(lastAction.previousEvents);\n      setLastAction(null);\n      setShowUndo(false);\n    }\n  };\n  const handleUndoDelete = () => {\n    if (deletedTasks.length > 0) {\n      setEvents([...events, ...deletedTasks]);\n      setDeletedTasks([]);\n      setShowUndoNotification(false);\n      if (undoTimeout) {\n        clearTimeout(undoTimeout);\n      }\n    }\n  };\n  const TaskCard = ({\n    task,\n    onEdit,\n    onDelete\n  }) => {\n    const isOverdue = isTaskOverdue(task);\n    const priorityColor = getPriorityColor(task.priority);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `task-card ${isOverdue ? 'overdue' : ''}`,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"task-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"task-title\",\n          children: task.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 403,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"task-priority\",\n          style: {\n            backgroundColor: priorityColor\n          },\n          children: task.priority\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 404,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 402,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"task-time\",\n        children: [formatTime12Hour(task.startTime), \" - \", formatTime12Hour(task.endTime), isOverdue && /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"overdue-badge\",\n          children: \"Overdue\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 410,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 408,\n        columnNumber: 9\n      }, this), task.description && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"task-description\",\n        children: task.description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 413,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"task-footer\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"task-category\",\n          children: task.category\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 416,\n          columnNumber: 11\n        }, this), task.recurring && /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"recurring-badge\",\n          children: \"Recurring\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 418,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 415,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"task-actions\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => onEdit(task),\n          className: \"edit-button\",\n          children: \"Edit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 422,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => onDelete(task.taskId),\n          className: \"delete-button\",\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 425,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 421,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 401,\n      columnNumber: 7\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"day-details\",\n    children: [showUndo && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"undo-notification\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: [\"Task \", (lastAction === null || lastAction === void 0 ? void 0 : lastAction.type) === 'add' ? 'added' : 'deleted']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 437,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleUndo,\n        children: \"Undo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 438,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 436,\n      columnNumber: 9\n    }, this), showUndoNotification && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"undo-notification\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"Task deleted\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 443,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleUndoDelete,\n        className: \"undo-button\",\n        children: \"Undo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 444,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 442,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Details for \", selectedDate.toLocaleDateString('en-US', {\n        weekday: 'long',\n        month: 'long',\n        day: 'numeric'\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 449,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"date-navigation\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handlePreviousDay,\n        children: \"Previous Day\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 451,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleToday,\n        children: \"Today\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 452,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleNextDay,\n        children: \"Next Day\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 453,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"date-selector\",\n        children: [/*#__PURE__*/_jsxDEV(\"select\", {\n          value: selectedDate.getFullYear(),\n          onChange: e => handleDateChange(parseInt(e.target.value), selectedDate.getMonth(), selectedDate.getDate()),\n          children: years.map(year => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: year,\n            children: year\n          }, year, false, {\n            fileName: _jsxFileName,\n            lineNumber: 460,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 455,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          value: selectedDate.getMonth(),\n          onChange: e => handleDateChange(selectedDate.getFullYear(), parseInt(e.target.value), selectedDate.getDate()),\n          children: months.map((month, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: index,\n            children: month\n          }, month, false, {\n            fileName: _jsxFileName,\n            lineNumber: 468,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 463,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          value: selectedDate.getDate(),\n          onChange: e => handleDateChange(selectedDate.getFullYear(), selectedDate.getMonth(), parseInt(e.target.value)),\n          children: Array.from({\n            length: new Date(selectedDate.getFullYear(), selectedDate.getMonth() + 1, 0).getDate()\n          }, (_, i) => i + 1).map(day => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: day,\n            children: day\n          }, day, false, {\n            fileName: _jsxFileName,\n            lineNumber: 476,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 471,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 454,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 450,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"details-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"timeline-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Today's Timeline\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 483,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"timeline\",\n          children: dayTasks.map(task => /*#__PURE__*/_jsxDEV(TaskCard, {\n            task: task,\n            onEdit: handleEditTask,\n            onDelete: handleDeleteTask\n          }, task.taskId, false, {\n            fileName: _jsxFileName,\n            lineNumber: 486,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 484,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 482,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"right-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Add Task\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 491,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"schedule-section\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"task-input-complex\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"input-row\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"Task Category:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 495,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                value: newTask.category,\n                onChange: e => handleInputChange('category', e.target.value),\n                children: categories.map(cat => /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: cat,\n                  children: cat\n                }, cat, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 498,\n                  columnNumber: 21\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 496,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 494,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"input-row\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"task-title\",\n                children: \"Task Title:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 503,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                id: \"task-title\",\n                type: \"text\",\n                value: newTask.title,\n                onChange: e => handleInputChange('title', e.target.value),\n                placeholder: \"Enter task title\",\n                \"aria-invalid\": errors.title ? 'true' : 'false',\n                \"aria-describedby\": errors.title ? 'title-error' : undefined\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 504,\n                columnNumber: 17\n              }, this), errors.title && /*#__PURE__*/_jsxDEV(\"span\", {\n                id: \"title-error\",\n                className: \"error-message\",\n                children: errors.title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 513,\n                columnNumber: 34\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 502,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"input-row\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"Task Description:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 516,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                value: newTask.description,\n                onChange: e => handleInputChange('description', e.target.value),\n                placeholder: \"Enter Task Description...\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 517,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 515,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"input-row\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"start-time\",\n                children: \"Starting Time:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 525,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                id: \"start-time\",\n                type: \"time\",\n                value: newTask.startTime,\n                onChange: e => handleInputChange('startTime', e.target.value),\n                \"aria-invalid\": errors.startTime ? 'true' : 'false',\n                \"aria-describedby\": errors.startTime ? 'start-time-error' : undefined\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 526,\n                columnNumber: 17\n              }, this), errors.startTime && /*#__PURE__*/_jsxDEV(\"span\", {\n                id: \"start-time-error\",\n                className: \"error-message\",\n                children: errors.startTime\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 534,\n                columnNumber: 38\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 524,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"input-row\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"end-time\",\n                children: \"Ending Time:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 537,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                id: \"end-time\",\n                type: \"time\",\n                value: newTask.endTime,\n                onChange: e => handleInputChange('endTime', e.target.value),\n                \"aria-invalid\": errors.endTime ? 'true' : 'false',\n                \"aria-describedby\": errors.endTime ? 'end-time-error' : undefined\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 538,\n                columnNumber: 17\n              }, this), errors.endTime && /*#__PURE__*/_jsxDEV(\"span\", {\n                id: \"end-time-error\",\n                className: \"error-message\",\n                children: errors.endTime\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 546,\n                columnNumber: 36\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 536,\n              columnNumber: 15\n            }, this), errors.overlap && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"overlap-warning-popup\",\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                children: \"Schedule Conflict\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 550,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: errors.overlap\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 551,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"close-button\",\n                onClick: () => setErrors({}),\n                children: \"Close\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 552,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 549,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"input-row\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"Priority:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 558,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                value: newTask.priority,\n                onChange: e => handleInputChange('priority', e.target.value),\n                children: priorities.map(p => /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: p,\n                  children: [p, \" Priority\"]\n                }, p, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 561,\n                  columnNumber: 21\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 559,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 557,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"input-row\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"Recurring Task:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 566,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"checkbox\",\n                checked: newTask.recurring,\n                onChange: e => handleRecurringChange(e.target.checked)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 567,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 565,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"input-row\",\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: handleAddTask,\n                children: \"Add\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 574,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 573,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 493,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 492,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 490,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 481,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(RecurringOptionsModal, {\n      isOpen: recurringModalOpen,\n      onClose: () => setRecurringModalOpen(false),\n      onSave: handleRecurringOptionsSave,\n      recurringOptions: recurringOptions,\n      setRecurringOptions: setRecurringOptions\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 581,\n      columnNumber: 7\n    }, this), editModalOpen && selectedTask && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal-overlay edit-modal-overlay\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-header\",\n          children: \"Edit Task\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 593,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-row\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Title:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 595,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: selectedTask.title,\n            onChange: e => setSelectedTask({\n              ...selectedTask,\n              title: e.target.value\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 596,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 594,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-row\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Description:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 603,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: selectedTask.description,\n            onChange: e => setSelectedTask({\n              ...selectedTask,\n              description: e.target.value\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 604,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 602,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-row\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Start Time:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 611,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"time\",\n            value: selectedTask.startTime,\n            onChange: e => setSelectedTask({\n              ...selectedTask,\n              startTime: e.target.value\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 612,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 610,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-row\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"End Time:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 619,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"time\",\n            value: selectedTask.endTime,\n            onChange: e => setSelectedTask({\n              ...selectedTask,\n              endTime: e.target.value\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 620,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 618,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-row\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Category:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 627,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            value: selectedTask.category,\n            onChange: e => setSelectedTask({\n              ...selectedTask,\n              category: e.target.value\n            }),\n            children: categories.map(cat => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: cat,\n              children: cat\n            }, cat, false, {\n              fileName: _jsxFileName,\n              lineNumber: 633,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 628,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 626,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-row\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Priority:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 638,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            value: selectedTask.priority,\n            onChange: e => setSelectedTask({\n              ...selectedTask,\n              priority: e.target.value\n            }),\n            children: priorities.map(p => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: p,\n              children: p\n            }, p, false, {\n              fileName: _jsxFileName,\n              lineNumber: 644,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 639,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 637,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-row\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Recurring:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 649,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            checked: selectedTask.recurring,\n            onChange: e => handleRecurringChange(e.target.checked)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 650,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 648,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-buttons\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"save-btn\",\n            onClick: handleSaveEdit,\n            children: \"Save\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 657,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"cancel-btn\",\n            onClick: () => setEditModalOpen(false),\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 658,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 656,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 592,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 591,\n      columnNumber: 9\n    }, this), confirmModalOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal-overlay\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-header\",\n          children: \"Confirm Action\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 668,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"confirm-message\",\n          children: confirmMessage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 669,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-buttons\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"save-btn\",\n            onClick: () => handleConfirmAction('all'),\n            children: \"All Instances\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 671,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"save-btn\",\n            onClick: () => handleConfirmAction('single'),\n            children: \"Just This One\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 672,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"cancel-btn\",\n            onClick: () => handleConfirmAction('cancel'),\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 673,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 670,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 667,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 666,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 434,\n    columnNumber: 5\n  }, this);\n}\n_s(DayDetails, \"oynCBPA0XxdCX4r++oL7gFdleWc=\");\n_c = DayDetails;\nexport default DayDetails;\nvar _c;\n$RefreshReg$(_c, \"DayDetails\");","map":{"version":3,"names":["React","useMemo","useState","useEffect","RecurringOptionsModal","jsxDEV","_jsxDEV","getLocalDateString","date","d","Date","year","getFullYear","month","String","getMonth","padStart","day","getDate","generateRecurringDates","startDate","recurringOptions","dates","start","end","endDate","currentDate","frequency","push","setDate","interval","weekDays","includes","getDay","setMonth","setFullYear","DayDetails","selectedDate","setSelectedDate","events","setEvents","_s","newTask","setNewTask","title","description","startTime","endTime","category","priority","recurring","showDelete","setShowDelete","recurringModalOpen","setRecurringModalOpen","setRecurringOptions","editModalOpen","setEditModalOpen","selectedTask","setSelectedTask","confirmModalOpen","setConfirmModalOpen","confirmAction","setConfirmAction","confirmMessage","setConfirmMessage","pendingTask","setPendingTask","lastAction","setLastAction","showUndo","setShowUndo","errors","setErrors","showRecurringModal","setShowRecurringModal","deletedTasks","setDeletedTasks","showUndoNotification","setShowUndoNotification","undoTimeout","setUndoTimeout","categories","priorities","months","years","currentYear","Array","from","length","_","i","handleRecurringChange","checked","handleRecurringOptionsSave","options","validateTimeInputs","checkForOverlappingEvents","taskId","newStart","newEnd","some","task","taskStart","taskEnd","handleAddTask","timeErrors","Object","keys","overlap","taskData","now","toString","metadata","createdBy","lastUpdated","toISOString","tasksToAdd","recurringDates","map","index","toTimeString","slice","getTime","type","tasks","previousEvents","prevEvents","setTimeout","handleUpdateTask","updatedTask","handleEditTask","handleDeleteTask","taskToDelete","find","filter","clearTimeout","timeout","handleConfirmAction","action","baseTaskId","split","startsWith","handleCancelConfirm","dayTasks","filteredTasks","sort","a","b","console","log","isTaskOverdue","taskDate","taskTime","getPriorityColor","toggleTask","t","completed","handlePreviousDay","prevDate","handleNextDay","nextDate","handleToday","handleDateChange","newDate","isNaN","handleInputChange","field","value","prev","formatTime12Hour","time","hours","minutes","Number","period","adjustedHours","handleSaveEdit","trim","handleUndo","handleUndoDelete","TaskCard","onEdit","onDelete","isOverdue","priorityColor","className","children","fileName","_jsxFileName","lineNumber","columnNumber","style","backgroundColor","onClick","toLocaleDateString","weekday","onChange","e","parseInt","target","cat","htmlFor","id","placeholder","undefined","p","isOpen","onClose","onSave","_c","$RefreshReg$"],"sources":["/home/tang0115/cisc490/calendar/CISC-490-Calendar/src/components/DayDetails.js"],"sourcesContent":["import React, { useMemo, useState, useEffect } from 'react';\nimport RecurringOptionsModal from './RecurringOptionsModal';\n\nconst getLocalDateString = (date) => {\n  const d = new Date(date);\n  const year = d.getFullYear();\n  const month = String(d.getMonth() + 1).padStart(2, '0');\n  const day = String(d.getDate()).padStart(2, '0');\n  return `${year}-${month}-${day}`;\n};\n\nconst generateRecurringDates = (startDate, recurringOptions) => {\n  const dates = [];\n  const start = new Date(startDate);\n  const end = new Date(recurringOptions.endDate);\n  let currentDate = new Date(start);\n\n  while (currentDate <= end) {\n    if (recurringOptions.frequency === 'daily') {\n      dates.push(new Date(currentDate));\n      currentDate.setDate(currentDate.getDate() + recurringOptions.interval);\n    } else if (recurringOptions.frequency === 'weekly') {\n      if (recurringOptions.weekDays.includes(currentDate.getDay())) {\n        dates.push(new Date(currentDate));\n      }\n      currentDate.setDate(currentDate.getDate() + 1);\n      if (currentDate.getDay() === 0) {\n        currentDate.setDate(currentDate.getDate() + (recurringOptions.interval - 1) * 7);\n      }\n    } else if (recurringOptions.frequency === 'monthly') {\n      dates.push(new Date(currentDate));\n      currentDate.setMonth(currentDate.getMonth() + recurringOptions.interval);\n    } else if (recurringOptions.frequency === 'yearly') {\n      dates.push(new Date(currentDate));\n      currentDate.setFullYear(currentDate.getFullYear() + recurringOptions.interval);\n    }\n  }\n\n  return dates;\n};\n\nfunction DayDetails({ selectedDate, setSelectedDate, events, setEvents }) {\n  const [newTask, setNewTask] = useState({\n    title: '',\n    description: '',\n    startTime: '',\n    endTime: '',\n    category: 'Work',\n    priority: 'Medium',\n    recurring: false,\n  });\n  const [showDelete, setShowDelete] = useState(null);\n  const [recurringModalOpen, setRecurringModalOpen] = useState(false);\n  const [recurringOptions, setRecurringOptions] = useState({\n    frequency: 'daily',\n    weekDays: [],\n    endDate: '',\n    interval: 1\n  });\n  const [editModalOpen, setEditModalOpen] = useState(false);\n  const [selectedTask, setSelectedTask] = useState(null);\n  const [confirmModalOpen, setConfirmModalOpen] = useState(false);\n  const [confirmAction, setConfirmAction] = useState(null);\n  const [confirmMessage, setConfirmMessage] = useState('');\n  const [pendingTask, setPendingTask] = useState(null);\n  const [lastAction, setLastAction] = useState(null);\n  const [showUndo, setShowUndo] = useState(false);\n  const [errors, setErrors] = useState({});\n  const [showRecurringModal, setShowRecurringModal] = useState(false);\n  const [deletedTasks, setDeletedTasks] = useState([]);\n  const [showUndoNotification, setShowUndoNotification] = useState(false);\n  const [undoTimeout, setUndoTimeout] = useState(null);\n\n  const categories = useMemo(() => ['Work', 'Personal', 'School'], []);\n  const priorities = ['Low', 'Medium', 'High', 'Critical'];\n\n  const months = useMemo(() => [\n    'January', 'February', 'March', 'April', 'May', 'June',\n    'July', 'August', 'September', 'October', 'November', 'December'\n  ], []);\n\n  const years = useMemo(() => {\n    const currentYear = new Date().getFullYear();\n    return Array.from({ length: 20 }, (_, i) => currentYear - 10 + i);\n  }, []);\n\n  const handleRecurringChange = (checked) => {\n    if (selectedTask) {\n      setSelectedTask({ ...selectedTask, recurring: checked });\n      if (checked) {\n        setRecurringModalOpen(true);\n      }\n    } else {\n      setNewTask({ ...newTask, recurring: checked });\n      if (checked) {\n        setRecurringModalOpen(true);\n      }\n    }\n  };\n\n  const handleRecurringOptionsSave = (options) => {\n    if (selectedTask) {\n      setSelectedTask({ ...selectedTask, recurringOptions: options });\n    } else {\n      setNewTask({ ...newTask, recurringOptions: options });\n    }\n  };\n\n  const validateTimeInputs = (startTime, endTime) => {\n    const errors = {};\n    if (!startTime) {\n      errors.startTime = 'Start time is required';\n    }\n    if (!endTime) {\n      errors.endTime = 'End time is required';\n    }\n    if (startTime && endTime) {\n      const start = new Date(`2000-01-01T${startTime}`);\n      const end = new Date(`2000-01-01T${endTime}`);\n      if (end <= start) {\n        errors.endTime = 'End time must be after start time';\n      }\n    }\n    return errors;\n  };\n\n  const checkForOverlappingEvents = (startTime, endTime, taskId = null) => {\n    const newStart = new Date(`2000-01-01T${startTime}`);\n    const newEnd = new Date(`2000-01-01T${endTime}`);\n    \n    return events.some(task => {\n      if (taskId && task.taskId === taskId) return false;\n      const taskStart = new Date(`2000-01-01T${task.startTime}`);\n      const taskEnd = new Date(`2000-01-01T${task.endTime}`);\n      return (newStart < taskEnd && newEnd > taskStart);\n    });\n  };\n\n  const handleAddTask = () => {\n    const timeErrors = validateTimeInputs(newTask.startTime, newTask.endTime);\n    if (Object.keys(timeErrors).length > 0) {\n      setErrors(timeErrors);\n      return;\n    }\n\n    if (checkForOverlappingEvents(newTask.startTime, newTask.endTime)) {\n      setErrors({ overlap: 'This event overlaps with an existing event' });\n      return;\n    }\n\n    setErrors({});\n    const taskData = {\n      taskId: Date.now().toString(),\n      title: newTask.title,\n      description: newTask.description,\n      startTime: newTask.startTime,\n      endTime: newTask.endTime,\n      category: newTask.category,\n      priority: newTask.priority,\n      recurring: newTask.recurring,\n      recurringOptions: newTask.recurring ? newTask.recurringOptions : null,\n      metadata: { createdBy: 'CurrentUser', lastUpdated: new Date().toISOString() },\n      date: getLocalDateString(selectedDate),\n    };\n\n    let tasksToAdd = [taskData];\n\n    if (taskData.recurring && taskData.recurringOptions) {\n      const recurringDates = generateRecurringDates(\n        new Date(`${taskData.date}T${taskData.startTime}`),\n        taskData.recurringOptions\n      );\n\n      tasksToAdd = recurringDates.map((date, index) => ({\n        ...taskData,\n        taskId: `${taskData.taskId}-${index}`,\n        date: getLocalDateString(date),\n        startTime: date.toTimeString().slice(0, 5),\n        endTime: new Date(date.getTime() + (new Date(`1970/01/01 ${taskData.endTime}`).getTime() - new Date(`1970/01/01 ${taskData.startTime}`).getTime())).toTimeString().slice(0, 5),\n      }));\n    }\n\n    setLastAction({\n      type: 'add',\n      tasks: tasksToAdd,\n      previousEvents: [...events]\n    });\n    setEvents(prevEvents => [...prevEvents, ...tasksToAdd]);\n    setShowUndo(true);\n    setTimeout(() => setShowUndo(false), 5000);\n\n    setNewTask({\n      title: '',\n      description: '',\n      startTime: '',\n      endTime: '',\n      category: 'Work',\n      priority: 'Medium',\n      recurring: false,\n    });\n  };\n\n  const handleUpdateTask = (taskId, updatedTask) => {\n    setEvents(prevEvents =>\n      prevEvents.map(task =>\n        task.taskId === taskId ? { ...task, ...updatedTask, metadata: { ...task.metadata, lastUpdated: new Date().toISOString() } } : task\n      )\n    );\n  };\n\n  const handleEditTask = (task) => {\n    const timeErrors = validateTimeInputs(task.startTime, task.endTime);\n    if (Object.keys(timeErrors).length > 0) {\n      setErrors(timeErrors);\n      return;\n    }\n\n    if (checkForOverlappingEvents(task.startTime, task.endTime, task.taskId)) {\n      setErrors({ overlap: 'This event overlaps with an existing event' });\n      return;\n    }\n\n    setErrors({});\n    if (task.recurring) {\n      setConfirmMessage('This is a recurring event. Would you like to edit all instances or just this one?');\n      setConfirmAction('edit');\n      setPendingTask(task);\n      setConfirmModalOpen(true);\n    } else {\n      setSelectedTask(task);\n      setEditModalOpen(true);\n    }\n  };\n\n  const handleDeleteTask = (taskId) => {\n    const taskToDelete = events.find(task => task.taskId === taskId);\n    if (taskToDelete) {\n      setDeletedTasks([...deletedTasks, taskToDelete]);\n      setEvents(events.filter(task => task.taskId !== taskId));\n      setShowUndoNotification(true);\n      \n      // Clear any existing timeout\n      if (undoTimeout) {\n        clearTimeout(undoTimeout);\n      }\n      \n      // Set new timeout for 5 seconds\n      const timeout = setTimeout(() => {\n        setShowUndoNotification(false);\n        setDeletedTasks([]);\n      }, 5000);\n      setUndoTimeout(timeout);\n    }\n  };\n\n  const handleConfirmAction = (action) => {\n    if (confirmAction === 'edit') {\n      if (pendingTask) {\n        if (action === 'all') {\n          setSelectedTask(pendingTask);\n          setEditModalOpen(true);\n        } else if (action === 'single') {\n          setSelectedTask(pendingTask);\n          setEditModalOpen(true);\n        }\n      }\n    } else if (confirmAction === 'delete') {\n      if (pendingTask) {\n        if (action === 'all' && pendingTask.recurringOptions) {\n          // Delete all instances of the recurring event by matching the base taskId\n          const baseTaskId = pendingTask.taskId.split('-')[0];\n          setEvents(prevEvents => prevEvents.filter(task => !task.taskId.startsWith(baseTaskId)));\n        } else if (action === 'single') {\n          // Delete only this instance\n          setEvents(prevEvents => prevEvents.filter(task => task.taskId !== pendingTask.taskId));\n        }\n      }\n      setShowDelete(null);\n    }\n    setConfirmModalOpen(false);\n    setPendingTask(null);\n  };\n\n  const handleCancelConfirm = () => {\n    setConfirmModalOpen(false);\n    setPendingTask(null);\n  };\n\n  const dayTasks = useMemo(() => {\n    const filteredTasks = events.filter(task => task.date === getLocalDateString(selectedDate))\n      .sort((a, b) => new Date(`1970/01/01 ${a.startTime}`) - new Date(`1970/01/01 ${b.startTime}`));\n    return filteredTasks;\n  }, [events, selectedDate]);\n\n  useEffect(() => {\n    console.log('DayDetails selectedDate:', selectedDate, 'Normalized:', getLocalDateString(selectedDate));\n    console.log('DayDetails events:', events);\n    console.log('DayDetails dayTasks:', dayTasks);\n  }, [selectedDate, events, dayTasks]);\n\n  const isTaskOverdue = (task) => {\n    const now = new Date();\n    const taskDate = new Date(task.date);\n    const taskTime = new Date(`${task.date}T${task.endTime}`);\n    return taskDate < now && taskTime < now;\n  };\n\n  const getPriorityColor = (priority) => {\n    switch (priority) {\n      case 'Low':\n        return '#4CAF50';\n      case 'Medium':\n        return '#FFC107';\n      case 'High':\n        return '#FF9800';\n      case 'Critical':\n        return '#F44336';\n      default:\n        return '#2196F3';\n    }\n  };\n\n  const toggleTask = (taskId) => {\n    const task = events.find(t => t.taskId === taskId);\n    if (task) {\n      const updatedTask = { ...task, completed: !task.completed, metadata: { ...task.metadata, lastUpdated: new Date().toISOString() } };\n      handleUpdateTask(taskId, updatedTask);\n    }\n  };\n\n  const handlePreviousDay = () => {\n    const prevDate = new Date(selectedDate);\n    prevDate.setDate(prevDate.getDate() - 1);\n    setSelectedDate(prevDate);\n  };\n\n  const handleNextDay = () => {\n    const nextDate = new Date(selectedDate);\n    nextDate.setDate(nextDate.getDate() + 1);\n    setSelectedDate(nextDate);\n  };\n\n  const handleToday = () => {\n    setSelectedDate(new Date());\n  };\n\n  const handleDateChange = (year, month, day) => {\n    const newDate = new Date(year, month, day);\n    if (!isNaN(newDate.getTime())) {\n      setSelectedDate(newDate);\n    }\n  };\n\n  const handleInputChange = (field, value) => {\n    setNewTask(prev => ({ ...prev, [field]: value }));\n  };\n\n  const formatTime12Hour = (time) => {\n    const [hours, minutes] = time.split(':').map(Number);\n    const period = hours >= 12 ? 'PM' : 'AM';\n    const adjustedHours = hours % 12 || 12;\n    return `${adjustedHours}:${minutes.toString().padStart(2, '0')} ${period}`;\n  };\n\n  const handleSaveEdit = () => {\n    if (selectedTask.title.trim() && selectedTask.startTime && selectedTask.endTime) {\n      const updatedTask = {\n        ...selectedTask,\n        metadata: { ...selectedTask.metadata, lastUpdated: new Date().toISOString() },\n      };\n      handleUpdateTask(selectedTask.taskId, updatedTask);\n      setEditModalOpen(false);\n      setSelectedTask(null);\n    }\n  };\n\n  const handleUndo = () => {\n    if (lastAction) {\n      setEvents(lastAction.previousEvents);\n      setLastAction(null);\n      setShowUndo(false);\n    }\n  };\n\n  const handleUndoDelete = () => {\n    if (deletedTasks.length > 0) {\n      setEvents([...events, ...deletedTasks]);\n      setDeletedTasks([]);\n      setShowUndoNotification(false);\n      if (undoTimeout) {\n        clearTimeout(undoTimeout);\n      }\n    }\n  };\n\n  const TaskCard = ({ task, onEdit, onDelete }) => {\n    const isOverdue = isTaskOverdue(task);\n    const priorityColor = getPriorityColor(task.priority);\n\n    return (\n      <div className={`task-card ${isOverdue ? 'overdue' : ''}`}>\n        <div className=\"task-header\">\n          <h3 className=\"task-title\">{task.title}</h3>\n          <div className=\"task-priority\" style={{ backgroundColor: priorityColor }}>\n            {task.priority}\n          </div>\n        </div>\n        <div className=\"task-time\">\n          {formatTime12Hour(task.startTime)} - {formatTime12Hour(task.endTime)}\n          {isOverdue && <span className=\"overdue-badge\">Overdue</span>}\n        </div>\n        {task.description && (\n          <p className=\"task-description\">{task.description}</p>\n        )}\n        <div className=\"task-footer\">\n          <span className=\"task-category\">{task.category}</span>\n          {task.recurring && (\n            <span className=\"recurring-badge\">Recurring</span>\n          )}\n        </div>\n        <div className=\"task-actions\">\n          <button onClick={() => onEdit(task)} className=\"edit-button\">\n            Edit\n          </button>\n          <button onClick={() => onDelete(task.taskId)} className=\"delete-button\">\n            Delete\n          </button>\n        </div>\n      </div>\n    );\n  };\n\n  return (\n    <div className=\"day-details\">\n      {showUndo && (\n        <div className=\"undo-notification\">\n          <span>Task {lastAction?.type === 'add' ? 'added' : 'deleted'}</span>\n          <button onClick={handleUndo}>Undo</button>\n        </div>\n      )}\n      {showUndoNotification && (\n        <div className=\"undo-notification\">\n          <span>Task deleted</span>\n          <button onClick={handleUndoDelete} className=\"undo-button\">\n            Undo\n          </button>\n        </div>\n      )}\n      <h2>Details for {selectedDate.toLocaleDateString('en-US', { weekday: 'long', month: 'long', day: 'numeric' })}</h2>\n      <div className=\"date-navigation\">\n        <button onClick={handlePreviousDay}>Previous Day</button>\n        <button onClick={handleToday}>Today</button>\n        <button onClick={handleNextDay}>Next Day</button>\n        <div className=\"date-selector\">\n          <select\n            value={selectedDate.getFullYear()}\n            onChange={(e) => handleDateChange(parseInt(e.target.value), selectedDate.getMonth(), selectedDate.getDate())}\n          >\n            {years.map(year => (\n              <option key={year} value={year}>{year}</option>\n            ))}\n          </select>\n          <select\n            value={selectedDate.getMonth()}\n            onChange={(e) => handleDateChange(selectedDate.getFullYear(), parseInt(e.target.value), selectedDate.getDate())}\n          >\n            {months.map((month, index) => (\n              <option key={month} value={index}>{month}</option>\n            ))}\n          </select>\n          <select\n            value={selectedDate.getDate()}\n            onChange={(e) => handleDateChange(selectedDate.getFullYear(), selectedDate.getMonth(), parseInt(e.target.value))}\n          >\n            {Array.from({ length: new Date(selectedDate.getFullYear(), selectedDate.getMonth() + 1, 0).getDate() }, (_, i) => i + 1).map(day => (\n              <option key={day} value={day}>{day}</option>\n            ))}\n          </select>\n        </div>\n      </div>\n      <div className=\"details-content\">\n        <div className=\"timeline-section\">\n          <h3>Today's Timeline</h3>\n          <div className=\"timeline\">\n            {dayTasks.map((task) => (\n              <TaskCard key={task.taskId} task={task} onEdit={handleEditTask} onDelete={handleDeleteTask} />\n            ))}\n          </div>\n        </div>\n        <div className=\"right-section\">\n          <h3>Add Task</h3>\n          <div className=\"schedule-section\">\n            <div className=\"task-input-complex\">\n              <div className=\"input-row\">\n                <label>Task Category:</label>\n                <select value={newTask.category} onChange={(e) => handleInputChange('category', e.target.value)}>\n                  {categories.map(cat => (\n                    <option key={cat} value={cat}>{cat}</option>\n                  ))}\n                </select>\n              </div>\n              <div className=\"input-row\">\n                <label htmlFor=\"task-title\">Task Title:</label>\n                <input\n                  id=\"task-title\"\n                  type=\"text\"\n                  value={newTask.title}\n                  onChange={(e) => handleInputChange('title', e.target.value)}\n                  placeholder=\"Enter task title\"\n                  aria-invalid={errors.title ? 'true' : 'false'}\n                  aria-describedby={errors.title ? 'title-error' : undefined}\n                />\n                {errors.title && <span id=\"title-error\" className=\"error-message\">{errors.title}</span>}\n              </div>\n              <div className=\"input-row\">\n                <label>Task Description:</label>\n                <input\n                  type=\"text\"\n                  value={newTask.description}\n                  onChange={(e) => handleInputChange('description', e.target.value)}\n                  placeholder=\"Enter Task Description...\"\n                />\n              </div>\n              <div className=\"input-row\">\n                <label htmlFor=\"start-time\">Starting Time:</label>\n                <input\n                  id=\"start-time\"\n                  type=\"time\"\n                  value={newTask.startTime}\n                  onChange={(e) => handleInputChange('startTime', e.target.value)}\n                  aria-invalid={errors.startTime ? 'true' : 'false'}\n                  aria-describedby={errors.startTime ? 'start-time-error' : undefined}\n                />\n                {errors.startTime && <span id=\"start-time-error\" className=\"error-message\">{errors.startTime}</span>}\n              </div>\n              <div className=\"input-row\">\n                <label htmlFor=\"end-time\">Ending Time:</label>\n                <input\n                  id=\"end-time\"\n                  type=\"time\"\n                  value={newTask.endTime}\n                  onChange={(e) => handleInputChange('endTime', e.target.value)}\n                  aria-invalid={errors.endTime ? 'true' : 'false'}\n                  aria-describedby={errors.endTime ? 'end-time-error' : undefined}\n                />\n                {errors.endTime && <span id=\"end-time-error\" className=\"error-message\">{errors.endTime}</span>}\n              </div>\n              {errors.overlap && (\n                <div className=\"overlap-warning-popup\">\n                  <h3>Schedule Conflict</h3>\n                  <p>{errors.overlap}</p>\n                  <button className=\"close-button\" onClick={() => setErrors({})}>\n                    Close\n                  </button>\n                </div>\n              )}\n              <div className=\"input-row\">\n                <label>Priority:</label>\n                <select value={newTask.priority} onChange={(e) => handleInputChange('priority', e.target.value)}>\n                  {priorities.map(p => (\n                    <option key={p} value={p}>{p} Priority</option>\n                  ))}\n                </select>\n              </div>\n              <div className=\"input-row\">\n                <label>Recurring Task:</label>\n                <input\n                  type=\"checkbox\"\n                  checked={newTask.recurring}\n                  onChange={(e) => handleRecurringChange(e.target.checked)}\n                />\n              </div>\n              <div className=\"input-row\">\n                <button onClick={handleAddTask}>Add</button>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <RecurringOptionsModal\n        isOpen={recurringModalOpen}\n        onClose={() => setRecurringModalOpen(false)}\n        onSave={handleRecurringOptionsSave}\n        recurringOptions={recurringOptions}\n        setRecurringOptions={setRecurringOptions}\n      />\n\n      {/* Edit Task Modal */}\n      {editModalOpen && selectedTask && (\n        <div className=\"modal-overlay edit-modal-overlay\">\n          <div className=\"modal-content\">\n            <div className=\"modal-header\">Edit Task</div>\n            <div className=\"input-row\">\n              <label>Title:</label>\n              <input\n                type=\"text\"\n                value={selectedTask.title}\n                onChange={(e) => setSelectedTask({ ...selectedTask, title: e.target.value })}\n              />\n            </div>\n            <div className=\"input-row\">\n              <label>Description:</label>\n              <input\n                type=\"text\"\n                value={selectedTask.description}\n                onChange={(e) => setSelectedTask({ ...selectedTask, description: e.target.value })}\n              />\n            </div>\n            <div className=\"input-row\">\n              <label>Start Time:</label>\n              <input\n                type=\"time\"\n                value={selectedTask.startTime}\n                onChange={(e) => setSelectedTask({ ...selectedTask, startTime: e.target.value })}\n              />\n            </div>\n            <div className=\"input-row\">\n              <label>End Time:</label>\n              <input\n                type=\"time\"\n                value={selectedTask.endTime}\n                onChange={(e) => setSelectedTask({ ...selectedTask, endTime: e.target.value })}\n              />\n            </div>\n            <div className=\"input-row\">\n              <label>Category:</label>\n              <select\n                value={selectedTask.category}\n                onChange={(e) => setSelectedTask({ ...selectedTask, category: e.target.value })}\n              >\n                {categories.map(cat => (\n                  <option key={cat} value={cat}>{cat}</option>\n                ))}\n              </select>\n            </div>\n            <div className=\"input-row\">\n              <label>Priority:</label>\n              <select\n                value={selectedTask.priority}\n                onChange={(e) => setSelectedTask({ ...selectedTask, priority: e.target.value })}\n              >\n                {priorities.map(p => (\n                  <option key={p} value={p}>{p}</option>\n                ))}\n              </select>\n            </div>\n            <div className=\"input-row\">\n              <label>Recurring:</label>\n              <input\n                type=\"checkbox\"\n                checked={selectedTask.recurring}\n                onChange={(e) => handleRecurringChange(e.target.checked)}\n              />\n            </div>\n            <div className=\"modal-buttons\">\n              <button className=\"save-btn\" onClick={handleSaveEdit}>Save</button>\n              <button className=\"cancel-btn\" onClick={() => setEditModalOpen(false)}>Cancel</button>\n            </div>\n          </div>\n        </div>\n      )}\n\n      {/* Confirmation Modal */}\n      {confirmModalOpen && (\n        <div className=\"modal-overlay\">\n          <div className=\"modal-content\">\n            <div className=\"modal-header\">Confirm Action</div>\n            <div className=\"confirm-message\">{confirmMessage}</div>\n            <div className=\"modal-buttons\">\n              <button className=\"save-btn\" onClick={() => handleConfirmAction('all')}>All Instances</button>\n              <button className=\"save-btn\" onClick={() => handleConfirmAction('single')}>Just This One</button>\n              <button className=\"cancel-btn\" onClick={() => handleConfirmAction('cancel')}>Cancel</button>\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default DayDetails;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}