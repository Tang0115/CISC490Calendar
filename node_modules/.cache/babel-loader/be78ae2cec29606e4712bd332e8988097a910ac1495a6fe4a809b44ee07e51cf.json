{"ast":null,"code":"var _jsxFileName = \"/home/tang0115/cisc490/calendar/CISC-490-Calendar/src/components/CalendarView.js\",\n  _s = $RefreshSig$();\nimport React, { useRef, useEffect, useState, useMemo } from 'react';\nimport FullCalendar from '@fullcalendar/react';\nimport dayGridPlugin from '@fullcalendar/daygrid';\nimport timeGridPlugin from '@fullcalendar/timegrid';\nimport interactionPlugin from '@fullcalendar/interaction';\nimport RecurringOptionsModal from './RecurringOptionsModal';\n\n// Utility to get local YYYY-MM-DD\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst getLocalDateString = date => {\n  const d = new Date(date);\n  const year = d.getFullYear();\n  const month = String(d.getMonth() + 1).padStart(2, '0'); // Months are 0-based\n  const day = String(d.getDate()).padStart(2, '0');\n  return `${year}-${month}-${day}`;\n};\n\n// Utility to generate recurring event dates\nconst generateRecurringDates = (startDate, recurringOptions) => {\n  const dates = [];\n  const start = new Date(startDate);\n  const end = new Date(recurringOptions.endDate);\n  let currentDate = new Date(start);\n  while (currentDate <= end) {\n    if (recurringOptions.frequency === 'daily') {\n      dates.push(new Date(currentDate));\n      currentDate.setDate(currentDate.getDate() + recurringOptions.interval);\n    } else if (recurringOptions.frequency === 'weekly') {\n      if (recurringOptions.weekDays.includes(currentDate.getDay())) {\n        dates.push(new Date(currentDate));\n      }\n      currentDate.setDate(currentDate.getDate() + 1);\n      if (currentDate.getDay() === 0) {\n        currentDate.setDate(currentDate.getDate() + (recurringOptions.interval - 1) * 7);\n      }\n    } else if (recurringOptions.frequency === 'monthly') {\n      dates.push(new Date(currentDate));\n      currentDate.setMonth(currentDate.getMonth() + recurringOptions.interval);\n    } else if (recurringOptions.frequency === 'yearly') {\n      dates.push(new Date(currentDate));\n      currentDate.setFullYear(currentDate.getFullYear() + recurringOptions.interval);\n    }\n  }\n  return dates;\n};\nfunction CalendarView({\n  selectedDate,\n  setSelectedDate,\n  events,\n  setEvents\n}) {\n  _s();\n  const calendarRef = useRef(null);\n  const [createModalOpen, setCreateModalOpen] = useState(false);\n  const [editModalOpen, setEditModalOpen] = useState(false);\n  const [selectedEvent, setSelectedEvent] = useState(null);\n  const [recurringModalOpen, setRecurringModalOpen] = useState(false);\n  const [recurringOptions, setRecurringOptions] = useState({\n    frequency: 'daily',\n    weekDays: [],\n    endDate: '',\n    interval: 1\n  });\n  const [newEvent, setNewEvent] = useState({\n    title: '',\n    description: '',\n    startTime: '',\n    endTime: '',\n    category: 'Work',\n    priority: 'Medium',\n    recurring: false,\n    date: getLocalDateString(selectedDate)\n  });\n  const [confirmModalOpen, setConfirmModalOpen] = useState(false);\n  const [confirmAction, setConfirmAction] = useState(null);\n  const [confirmMessage, setConfirmMessage] = useState('');\n  const [pendingEvent, setPendingEvent] = useState(null);\n  useEffect(() => {\n    if (calendarRef.current) {\n      const calendarApi = calendarRef.current.getApi();\n      calendarApi.gotoDate(selectedDate);\n      console.log('Calendar initialized with selectedDate:', selectedDate, 'Local date:', getLocalDateString(selectedDate));\n    }\n  }, [selectedDate]);\n  useEffect(() => {\n    console.log('CalendarView events:', events);\n  }, [events]);\n  const handleDateClick = info => {\n    const startTime = info.date.toTimeString().slice(0, 5); // e.g., \"13:00\"\n    const [hours, minutes] = startTime.split(':').map(Number);\n    const endHours = (hours + 1) % 24;\n    const endTime = `${endHours.toString().padStart(2, '0')}:${minutes.toString().padStart(2, '0')}`;\n    const clickedDate = getLocalDateString(info.date);\n    console.log('handleDateClick - Clicked date:', info.date, 'Normalized:', clickedDate);\n    setNewEvent({\n      ...newEvent,\n      date: clickedDate,\n      startTime,\n      endTime\n    });\n    setCreateModalOpen(true);\n  };\n  const handleEventClick = info => {\n    const event = events.find(e => e.taskId === info.event.id.toString());\n    if (event) {\n      console.log('Clicked event:', event);\n      setSelectedEvent(event);\n      setEditModalOpen(true);\n    } else {\n      console.error(`Event with ID ${info.event.id} not found in events array`, events);\n    }\n  };\n  const handleEventDrop = info => {\n    const updatedEvent = {\n      ...info.event.extendedProps,\n      taskId: info.event.id.toString(),\n      title: info.event.title,\n      date: getLocalDateString(info.event.start),\n      startTime: info.event.start.toTimeString().slice(0, 5),\n      endTime: info.event.end ? info.event.end.toTimeString().slice(0, 5) : info.event.start.toTimeString().slice(0, 5),\n      metadata: info.event.extendedProps.metadata || {\n        createdBy: 'CurrentUser',\n        lastUpdated: new Date().toISOString()\n      }\n    };\n    console.log('Event dropped:', updatedEvent);\n    setEvents(prevEvents => prevEvents.map(ev => ev.taskId === updatedEvent.taskId ? updatedEvent : ev));\n  };\n  const handleRecurringChange = checked => {\n    if (selectedEvent) {\n      setSelectedEvent({\n        ...selectedEvent,\n        recurring: checked\n      });\n      if (checked) {\n        setRecurringModalOpen(true);\n      }\n    } else {\n      setNewEvent({\n        ...newEvent,\n        recurring: checked\n      });\n      if (checked) {\n        setRecurringModalOpen(true);\n      }\n    }\n  };\n  const handleRecurringOptionsSave = options => {\n    if (selectedEvent) {\n      setSelectedEvent({\n        ...selectedEvent,\n        recurringOptions: options\n      });\n    } else {\n      setNewEvent({\n        ...newEvent,\n        recurringOptions: options\n      });\n    }\n  };\n  const handleCreateEvent = () => {\n    if (newEvent.title.trim() && newEvent.startTime && newEvent.endTime) {\n      const eventData = {\n        taskId: Date.now().toString(),\n        title: newEvent.title,\n        description: newEvent.description || '',\n        startTime: newEvent.startTime,\n        endTime: newEvent.endTime,\n        category: newEvent.category,\n        priority: newEvent.priority || 'Medium',\n        recurring: newEvent.recurring,\n        recurringOptions: newEvent.recurring ? newEvent.recurringOptions : null,\n        date: newEvent.date,\n        metadata: {\n          createdBy: 'CurrentUser',\n          lastUpdated: new Date().toISOString()\n        }\n      };\n      let eventsToAdd = [eventData];\n      if (eventData.recurring && eventData.recurringOptions) {\n        const recurringDates = generateRecurringDates(new Date(`${eventData.date}T${eventData.startTime}`), eventData.recurringOptions);\n        eventsToAdd = recurringDates.map((date, index) => ({\n          ...eventData,\n          taskId: `${eventData.taskId}-${index}`,\n          date: getLocalDateString(date),\n          startTime: date.toTimeString().slice(0, 5),\n          endTime: new Date(date.getTime() + (new Date(`1970/01/01 ${eventData.endTime}`).getTime() - new Date(`1970/01/01 ${eventData.startTime}`).getTime())).toTimeString().slice(0, 5)\n        }));\n      }\n      setEvents(prevEvents => [...prevEvents, ...eventsToAdd]);\n      setCreateModalOpen(false);\n      setNewEvent({\n        title: '',\n        description: '',\n        startTime: '',\n        endTime: '',\n        category: 'Work',\n        priority: 'Medium',\n        recurring: false,\n        date: getLocalDateString(selectedDate)\n      });\n    }\n  };\n  const handleEditEvent = () => {\n    if (selectedEvent.title.trim() && selectedEvent.startTime && selectedEvent.endTime) {\n      const updatedEvent = {\n        ...selectedEvent,\n        priority: selectedEvent.priority || 'Medium',\n        metadata: {\n          ...selectedEvent.metadata,\n          lastUpdated: new Date().toISOString()\n        }\n      };\n      if (updatedEvent.recurring) {\n        setConfirmMessage('This is a recurring event. Would you like to edit all instances or just this one?');\n        setConfirmAction('edit');\n        setPendingEvent(updatedEvent);\n        setConfirmModalOpen(true);\n      } else {\n        setEvents(prevEvents => prevEvents.map(ev => ev.taskId === updatedEvent.taskId ? updatedEvent : ev));\n        setEditModalOpen(false);\n      }\n    }\n  };\n  const handleDeleteEvent = () => {\n    if (selectedEvent.recurring) {\n      setConfirmMessage('This is a recurring event. Would you like to delete all instances or just this one?');\n      setConfirmAction('delete');\n      setPendingEvent(selectedEvent);\n      setConfirmModalOpen(true);\n    } else {\n      setEvents(prevEvents => prevEvents.filter(ev => ev.taskId !== selectedEvent.taskId));\n      setEditModalOpen(false);\n    }\n  };\n  const handleConfirmAction = action => {\n    if (confirmAction === 'edit' && pendingEvent) {\n      let eventsToUpdate = [pendingEvent];\n      if (action === 'all' && pendingEvent.recurring && pendingEvent.recurringOptions) {\n        const recurringDates = generateRecurringDates(new Date(`${pendingEvent.date}T${pendingEvent.startTime}`), pendingEvent.recurringOptions);\n        eventsToUpdate = recurringDates.map((date, index) => ({\n          ...pendingEvent,\n          taskId: `${pendingEvent.taskId}-${index}`,\n          date: getLocalDateString(date),\n          startTime: date.toTimeString().slice(0, 5),\n          endTime: new Date(date.getTime() + (new Date(`1970/01/01 ${pendingEvent.endTime}`).getTime() - new Date(`1970/01/01 ${pendingEvent.startTime}`).getTime())).toTimeString().slice(0, 5)\n        }));\n      }\n      setEvents(prevEvents => {\n        if (action === 'all') {\n          const filteredEvents = prevEvents.filter(ev => !ev.taskId.startsWith(pendingEvent.taskId.split('-')[0]));\n          return [...filteredEvents, ...eventsToUpdate];\n        } else if (action === 'single') {\n          return prevEvents.map(ev => ev.taskId === pendingEvent.taskId ? pendingEvent : ev);\n        }\n        return prevEvents;\n      });\n    } else if (confirmAction === 'delete' && pendingEvent) {\n      if (action === 'all' && pendingEvent.recurringOptions) {\n        // Delete all instances of the recurring event by matching the base taskId\n        const baseTaskId = pendingEvent.taskId.split('-')[0];\n        setEvents(prevEvents => prevEvents.filter(ev => !ev.taskId.startsWith(baseTaskId)));\n      } else if (action === 'single') {\n        // Delete only this instance\n        setEvents(prevEvents => prevEvents.filter(ev => ev.taskId !== pendingEvent.taskId));\n      }\n    }\n    setEditModalOpen(false);\n    setConfirmModalOpen(false);\n    setPendingEvent(null);\n  };\n  const handleCancelConfirm = () => {\n    setConfirmModalOpen(false);\n    setPendingEvent(null);\n  };\n  const calendarEvents = useMemo(() => {\n    return events.map(event => {\n      const normalizedEvent = {\n        ...event,\n        taskId: event.taskId.toString(),\n        title: event.title || 'Untitled',\n        startTime: event.startTime || '00:00',\n        endTime: event.endTime || event.startTime || '00:00',\n        date: event.date || getLocalDateString(selectedDate),\n        priority: event.priority || 'Medium',\n        category: event.category || 'Work',\n        recurring: event.recurring || false,\n        metadata: event.metadata || {\n          createdBy: 'CurrentUser',\n          lastUpdated: new Date().toISOString()\n        }\n      };\n      return {\n        id: normalizedEvent.taskId,\n        title: normalizedEvent.title,\n        start: `${normalizedEvent.date}T${normalizedEvent.startTime}`,\n        end: `${normalizedEvent.date}T${normalizedEvent.endTime}`,\n        extendedProps: normalizedEvent\n      };\n    });\n  }, [events, selectedDate]);\n  const categories = ['Work', 'Personal', 'School'];\n  const priorities = ['Low', 'Medium', 'High', 'Critical'];\n  const eventClassNames = eventInfo => {\n    const priority = eventInfo.event.extendedProps.priority || 'Medium';\n    return [`priority-${priority.toLowerCase()}`];\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"calendar-view\",\n    children: [/*#__PURE__*/_jsxDEV(FullCalendar, {\n      ref: calendarRef,\n      plugins: [dayGridPlugin, timeGridPlugin, interactionPlugin],\n      initialView: \"timeGridWeek\",\n      headerToolbar: {\n        left: 'prev,next today',\n        center: 'title',\n        right: 'timeGridWeek,timeGridDay'\n      },\n      events: calendarEvents,\n      editable: true,\n      selectable: true,\n      eventDrop: handleEventDrop,\n      eventClick: handleEventClick,\n      dateClick: handleDateClick,\n      allDaySlot: false,\n      snapDuration: \"00:15\",\n      eventClassNames: eventClassNames,\n      height: \"100%\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 315,\n      columnNumber: 7\n    }, this), createModalOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal-overlay\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-header\",\n          children: \"Create New Event\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 340,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-row\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Title:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 342,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: newEvent.title,\n            onChange: e => setNewEvent({\n              ...newEvent,\n              title: e.target.value\n            }),\n            placeholder: \"Enter event title...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 343,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 341,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-row\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Description:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 351,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: newEvent.description,\n            onChange: e => setNewEvent({\n              ...newEvent,\n              description: e.target.value\n            }),\n            placeholder: \"Enter description...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 352,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 350,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-row\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Start Time:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 360,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"time\",\n            value: newEvent.startTime,\n            onChange: e => setNewEvent({\n              ...newEvent,\n              startTime: e.target.value\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 361,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 359,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-row\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"End Time:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 368,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"time\",\n            value: newEvent.endTime,\n            onChange: e => setNewEvent({\n              ...newEvent,\n              endTime: e.target.value\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 369,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 367,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-row\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Category:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 376,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            value: newEvent.category,\n            onChange: e => setNewEvent({\n              ...newEvent,\n              category: e.target.value\n            }),\n            children: categories.map(cat => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: cat,\n              children: cat\n            }, cat, false, {\n              fileName: _jsxFileName,\n              lineNumber: 382,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 377,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 375,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-row\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Priority:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 387,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            value: newEvent.priority,\n            onChange: e => setNewEvent({\n              ...newEvent,\n              priority: e.target.value\n            }),\n            children: priorities.map(p => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: p,\n              children: p\n            }, p, false, {\n              fileName: _jsxFileName,\n              lineNumber: 393,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 388,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 386,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-row\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Recurring:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 398,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            checked: newEvent.recurring,\n            onChange: e => handleRecurringChange(e.target.checked)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 399,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 397,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-buttons\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"save-btn\",\n            onClick: handleCreateEvent,\n            children: \"Save\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 406,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"cancel-btn\",\n            onClick: () => setCreateModalOpen(false),\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 407,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 405,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 339,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 338,\n      columnNumber: 9\n    }, this), editModalOpen && selectedEvent && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal-overlay\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-header\",\n          children: \"Edit Event\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 417,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-row\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Title:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 419,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: selectedEvent.title,\n            onChange: e => setSelectedEvent({\n              ...selectedEvent,\n              title: e.target.value\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 420,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 418,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-row\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Description:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 427,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: selectedEvent.description,\n            onChange: e => setSelectedEvent({\n              ...selectedEvent,\n              description: e.target.value\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 428,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 426,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-row\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Start Time:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 435,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"time\",\n            value: selectedEvent.startTime,\n            onChange: e => setSelectedEvent({\n              ...selectedEvent,\n              startTime: e.target.value\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 436,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 434,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-row\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"End Time:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 443,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"time\",\n            value: selectedEvent.endTime,\n            onChange: e => setSelectedEvent({\n              ...selectedEvent,\n              endTime: e.target.value\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 444,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 442,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-row\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Category:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 451,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            value: selectedEvent.category,\n            onChange: e => setSelectedEvent({\n              ...selectedEvent,\n              category: e.target.value\n            }),\n            children: categories.map(cat => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: cat,\n              children: cat\n            }, cat, false, {\n              fileName: _jsxFileName,\n              lineNumber: 457,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 452,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 450,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-row\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Priority:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 462,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            value: selectedEvent.priority,\n            onChange: e => setSelectedEvent({\n              ...selectedEvent,\n              priority: e.target.value\n            }),\n            children: priorities.map(p => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: p,\n              children: p\n            }, p, false, {\n              fileName: _jsxFileName,\n              lineNumber: 468,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 463,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 461,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-row\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Recurring:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 473,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            checked: selectedEvent.recurring,\n            onChange: e => handleRecurringChange(e.target.checked)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 474,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 472,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-buttons\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"save-btn\",\n            onClick: handleEditEvent,\n            children: \"Save\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 481,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"delete-btn\",\n            onClick: handleDeleteEvent,\n            children: \"Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 482,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"cancel-btn\",\n            onClick: () => setEditModalOpen(false),\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 483,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 480,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 416,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 415,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(RecurringOptionsModal, {\n      isOpen: recurringModalOpen,\n      onClose: () => setRecurringModalOpen(false),\n      onSave: handleRecurringOptionsSave,\n      recurringOptions: recurringOptions,\n      setRecurringOptions: setRecurringOptions\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 490,\n      columnNumber: 7\n    }, this), confirmModalOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal-overlay\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-header\",\n          children: \"Confirm Action\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 502,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"confirm-message\",\n          children: confirmMessage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 503,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-buttons\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"save-btn\",\n            onClick: () => handleConfirmAction('all'),\n            children: \"All Instances\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 505,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"save-btn\",\n            onClick: () => handleConfirmAction('single'),\n            children: \"Just This One\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 506,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"cancel-btn\",\n            onClick: () => handleConfirmAction('cancel'),\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 507,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 504,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 501,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 500,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 314,\n    columnNumber: 5\n  }, this);\n}\n_s(CalendarView, \"x4IMjEleON6JVRzB84uSdg2Nhag=\");\n_c = CalendarView;\nexport default CalendarView;\nvar _c;\n$RefreshReg$(_c, \"CalendarView\");","map":{"version":3,"names":["React","useRef","useEffect","useState","useMemo","FullCalendar","dayGridPlugin","timeGridPlugin","interactionPlugin","RecurringOptionsModal","jsxDEV","_jsxDEV","getLocalDateString","date","d","Date","year","getFullYear","month","String","getMonth","padStart","day","getDate","generateRecurringDates","startDate","recurringOptions","dates","start","end","endDate","currentDate","frequency","push","setDate","interval","weekDays","includes","getDay","setMonth","setFullYear","CalendarView","selectedDate","setSelectedDate","events","setEvents","_s","calendarRef","createModalOpen","setCreateModalOpen","editModalOpen","setEditModalOpen","selectedEvent","setSelectedEvent","recurringModalOpen","setRecurringModalOpen","setRecurringOptions","newEvent","setNewEvent","title","description","startTime","endTime","category","priority","recurring","confirmModalOpen","setConfirmModalOpen","confirmAction","setConfirmAction","confirmMessage","setConfirmMessage","pendingEvent","setPendingEvent","current","calendarApi","getApi","gotoDate","console","log","handleDateClick","info","toTimeString","slice","hours","minutes","split","map","Number","endHours","toString","clickedDate","handleEventClick","event","find","e","taskId","id","error","handleEventDrop","updatedEvent","extendedProps","metadata","createdBy","lastUpdated","toISOString","prevEvents","ev","handleRecurringChange","checked","handleRecurringOptionsSave","options","handleCreateEvent","trim","eventData","now","eventsToAdd","recurringDates","index","getTime","handleEditEvent","handleDeleteEvent","filter","handleConfirmAction","action","eventsToUpdate","filteredEvents","startsWith","baseTaskId","handleCancelConfirm","calendarEvents","normalizedEvent","categories","priorities","eventClassNames","eventInfo","toLowerCase","className","children","ref","plugins","initialView","headerToolbar","left","center","right","editable","selectable","eventDrop","eventClick","dateClick","allDaySlot","snapDuration","height","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","target","placeholder","cat","p","onClick","isOpen","onClose","onSave","_c","$RefreshReg$"],"sources":["/home/tang0115/cisc490/calendar/CISC-490-Calendar/src/components/CalendarView.js"],"sourcesContent":["import React, { useRef, useEffect, useState, useMemo } from 'react';\nimport FullCalendar from '@fullcalendar/react';\nimport dayGridPlugin from '@fullcalendar/daygrid';\nimport timeGridPlugin from '@fullcalendar/timegrid';\nimport interactionPlugin from '@fullcalendar/interaction';\nimport RecurringOptionsModal from './RecurringOptionsModal';\n\n// Utility to get local YYYY-MM-DD\nconst getLocalDateString = (date) => {\n  const d = new Date(date);\n  const year = d.getFullYear();\n  const month = String(d.getMonth() + 1).padStart(2, '0'); // Months are 0-based\n  const day = String(d.getDate()).padStart(2, '0');\n  return `${year}-${month}-${day}`;\n};\n\n// Utility to generate recurring event dates\nconst generateRecurringDates = (startDate, recurringOptions) => {\n  const dates = [];\n  const start = new Date(startDate);\n  const end = new Date(recurringOptions.endDate);\n  let currentDate = new Date(start);\n\n  while (currentDate <= end) {\n    if (recurringOptions.frequency === 'daily') {\n      dates.push(new Date(currentDate));\n      currentDate.setDate(currentDate.getDate() + recurringOptions.interval);\n    } else if (recurringOptions.frequency === 'weekly') {\n      if (recurringOptions.weekDays.includes(currentDate.getDay())) {\n        dates.push(new Date(currentDate));\n      }\n      currentDate.setDate(currentDate.getDate() + 1);\n      if (currentDate.getDay() === 0) {\n        currentDate.setDate(currentDate.getDate() + (recurringOptions.interval - 1) * 7);\n      }\n    } else if (recurringOptions.frequency === 'monthly') {\n      dates.push(new Date(currentDate));\n      currentDate.setMonth(currentDate.getMonth() + recurringOptions.interval);\n    } else if (recurringOptions.frequency === 'yearly') {\n      dates.push(new Date(currentDate));\n      currentDate.setFullYear(currentDate.getFullYear() + recurringOptions.interval);\n    }\n  }\n\n  return dates;\n};\n\nfunction CalendarView({ selectedDate, setSelectedDate, events, setEvents }) {\n  const calendarRef = useRef(null);\n  const [createModalOpen, setCreateModalOpen] = useState(false);\n  const [editModalOpen, setEditModalOpen] = useState(false);\n  const [selectedEvent, setSelectedEvent] = useState(null);\n  const [recurringModalOpen, setRecurringModalOpen] = useState(false);\n  const [recurringOptions, setRecurringOptions] = useState({\n    frequency: 'daily',\n    weekDays: [],\n    endDate: '',\n    interval: 1\n  });\n  const [newEvent, setNewEvent] = useState({\n    title: '',\n    description: '',\n    startTime: '',\n    endTime: '',\n    category: 'Work',\n    priority: 'Medium',\n    recurring: false,\n    date: getLocalDateString(selectedDate),\n  });\n  const [confirmModalOpen, setConfirmModalOpen] = useState(false);\n  const [confirmAction, setConfirmAction] = useState(null);\n  const [confirmMessage, setConfirmMessage] = useState('');\n  const [pendingEvent, setPendingEvent] = useState(null);\n\n  useEffect(() => {\n    if (calendarRef.current) {\n      const calendarApi = calendarRef.current.getApi();\n      calendarApi.gotoDate(selectedDate);\n      console.log('Calendar initialized with selectedDate:', selectedDate, 'Local date:', getLocalDateString(selectedDate));\n    }\n  }, [selectedDate]);\n\n  useEffect(() => {\n    console.log('CalendarView events:', events);\n  }, [events]);\n\n  const handleDateClick = (info) => {\n    const startTime = info.date.toTimeString().slice(0, 5); // e.g., \"13:00\"\n    const [hours, minutes] = startTime.split(':').map(Number);\n    const endHours = (hours + 1) % 24;\n    const endTime = `${endHours.toString().padStart(2, '0')}:${minutes.toString().padStart(2, '0')}`;\n    const clickedDate = getLocalDateString(info.date);\n    console.log('handleDateClick - Clicked date:', info.date, 'Normalized:', clickedDate);\n    setNewEvent({\n      ...newEvent,\n      date: clickedDate,\n      startTime,\n      endTime,\n    });\n    setCreateModalOpen(true);\n  };\n\n  const handleEventClick = (info) => {\n    const event = events.find(e => e.taskId === info.event.id.toString());\n    if (event) {\n      console.log('Clicked event:', event);\n      setSelectedEvent(event);\n      setEditModalOpen(true);\n    } else {\n      console.error(`Event with ID ${info.event.id} not found in events array`, events);\n    }\n  };\n\n  const handleEventDrop = (info) => {\n    const updatedEvent = {\n      ...info.event.extendedProps,\n      taskId: info.event.id.toString(),\n      title: info.event.title,\n      date: getLocalDateString(info.event.start),\n      startTime: info.event.start.toTimeString().slice(0, 5),\n      endTime: info.event.end ? info.event.end.toTimeString().slice(0, 5) : info.event.start.toTimeString().slice(0, 5),\n      metadata: info.event.extendedProps.metadata || { createdBy: 'CurrentUser', lastUpdated: new Date().toISOString() },\n    };\n    console.log('Event dropped:', updatedEvent);\n    setEvents(prevEvents =>\n      prevEvents.map(ev => (ev.taskId === updatedEvent.taskId ? updatedEvent : ev))\n    );\n  };\n\n  const handleRecurringChange = (checked) => {\n    if (selectedEvent) {\n      setSelectedEvent({ ...selectedEvent, recurring: checked });\n      if (checked) {\n        setRecurringModalOpen(true);\n      }\n    } else {\n      setNewEvent({ ...newEvent, recurring: checked });\n      if (checked) {\n        setRecurringModalOpen(true);\n      }\n    }\n  };\n\n  const handleRecurringOptionsSave = (options) => {\n    if (selectedEvent) {\n      setSelectedEvent({ ...selectedEvent, recurringOptions: options });\n    } else {\n      setNewEvent({ ...newEvent, recurringOptions: options });\n    }\n  };\n\n  const handleCreateEvent = () => {\n    if (newEvent.title.trim() && newEvent.startTime && newEvent.endTime) {\n      const eventData = {\n        taskId: Date.now().toString(),\n        title: newEvent.title,\n        description: newEvent.description || '',\n        startTime: newEvent.startTime,\n        endTime: newEvent.endTime,\n        category: newEvent.category,\n        priority: newEvent.priority || 'Medium',\n        recurring: newEvent.recurring,\n        recurringOptions: newEvent.recurring ? newEvent.recurringOptions : null,\n        date: newEvent.date,\n        metadata: { createdBy: 'CurrentUser', lastUpdated: new Date().toISOString() },\n      };\n\n      let eventsToAdd = [eventData];\n\n      if (eventData.recurring && eventData.recurringOptions) {\n        const recurringDates = generateRecurringDates(\n          new Date(`${eventData.date}T${eventData.startTime}`),\n          eventData.recurringOptions\n        );\n\n        eventsToAdd = recurringDates.map((date, index) => ({\n          ...eventData,\n          taskId: `${eventData.taskId}-${index}`,\n          date: getLocalDateString(date),\n          startTime: date.toTimeString().slice(0, 5),\n          endTime: new Date(date.getTime() + (new Date(`1970/01/01 ${eventData.endTime}`).getTime() - new Date(`1970/01/01 ${eventData.startTime}`).getTime())).toTimeString().slice(0, 5),\n        }));\n      }\n\n      setEvents(prevEvents => [...prevEvents, ...eventsToAdd]);\n      setCreateModalOpen(false);\n      setNewEvent({\n        title: '',\n        description: '',\n        startTime: '',\n        endTime: '',\n        category: 'Work',\n        priority: 'Medium',\n        recurring: false,\n        date: getLocalDateString(selectedDate),\n      });\n    }\n  };\n\n  const handleEditEvent = () => {\n    if (selectedEvent.title.trim() && selectedEvent.startTime && selectedEvent.endTime) {\n      const updatedEvent = {\n        ...selectedEvent,\n        priority: selectedEvent.priority || 'Medium',\n        metadata: { ...selectedEvent.metadata, lastUpdated: new Date().toISOString() },\n      };\n\n      if (updatedEvent.recurring) {\n        setConfirmMessage('This is a recurring event. Would you like to edit all instances or just this one?');\n        setConfirmAction('edit');\n        setPendingEvent(updatedEvent);\n        setConfirmModalOpen(true);\n      } else {\n        setEvents(prevEvents =>\n          prevEvents.map(ev => (ev.taskId === updatedEvent.taskId ? updatedEvent : ev))\n        );\n        setEditModalOpen(false);\n      }\n    }\n  };\n\n  const handleDeleteEvent = () => {\n    if (selectedEvent.recurring) {\n      setConfirmMessage('This is a recurring event. Would you like to delete all instances or just this one?');\n      setConfirmAction('delete');\n      setPendingEvent(selectedEvent);\n      setConfirmModalOpen(true);\n    } else {\n      setEvents(prevEvents => prevEvents.filter(ev => ev.taskId !== selectedEvent.taskId));\n      setEditModalOpen(false);\n    }\n  };\n\n  const handleConfirmAction = (action) => {\n    if (confirmAction === 'edit' && pendingEvent) {\n      let eventsToUpdate = [pendingEvent];\n      if (action === 'all' && pendingEvent.recurring && pendingEvent.recurringOptions) {\n        const recurringDates = generateRecurringDates(\n          new Date(`${pendingEvent.date}T${pendingEvent.startTime}`),\n          pendingEvent.recurringOptions\n        );\n\n        eventsToUpdate = recurringDates.map((date, index) => ({\n          ...pendingEvent,\n          taskId: `${pendingEvent.taskId}-${index}`,\n          date: getLocalDateString(date),\n          startTime: date.toTimeString().slice(0, 5),\n          endTime: new Date(date.getTime() + (new Date(`1970/01/01 ${pendingEvent.endTime}`).getTime() - new Date(`1970/01/01 ${pendingEvent.startTime}`).getTime())).toTimeString().slice(0, 5),\n        }));\n      }\n\n      setEvents(prevEvents => {\n        if (action === 'all') {\n          const filteredEvents = prevEvents.filter(ev => !ev.taskId.startsWith(pendingEvent.taskId.split('-')[0]));\n          return [...filteredEvents, ...eventsToUpdate];\n        } else if (action === 'single') {\n          return prevEvents.map(ev => (ev.taskId === pendingEvent.taskId ? pendingEvent : ev));\n        }\n        return prevEvents;\n      });\n    } else if (confirmAction === 'delete' && pendingEvent) {\n      if (action === 'all' && pendingEvent.recurringOptions) {\n        // Delete all instances of the recurring event by matching the base taskId\n        const baseTaskId = pendingEvent.taskId.split('-')[0];\n        setEvents(prevEvents => prevEvents.filter(ev => !ev.taskId.startsWith(baseTaskId)));\n      } else if (action === 'single') {\n        // Delete only this instance\n        setEvents(prevEvents => prevEvents.filter(ev => ev.taskId !== pendingEvent.taskId));\n      }\n    }\n    setEditModalOpen(false);\n    setConfirmModalOpen(false);\n    setPendingEvent(null);\n  };\n\n  const handleCancelConfirm = () => {\n    setConfirmModalOpen(false);\n    setPendingEvent(null);\n  };\n\n  const calendarEvents = useMemo(() => {\n    return events.map(event => {\n      const normalizedEvent = {\n        ...event,\n        taskId: event.taskId.toString(),\n        title: event.title || 'Untitled',\n        startTime: event.startTime || '00:00',\n        endTime: event.endTime || event.startTime || '00:00',\n        date: event.date || getLocalDateString(selectedDate),\n        priority: event.priority || 'Medium',\n        category: event.category || 'Work',\n        recurring: event.recurring || false,\n        metadata: event.metadata || { createdBy: 'CurrentUser', lastUpdated: new Date().toISOString() },\n      };\n      return {\n        id: normalizedEvent.taskId,\n        title: normalizedEvent.title,\n        start: `${normalizedEvent.date}T${normalizedEvent.startTime}`,\n        end: `${normalizedEvent.date}T${normalizedEvent.endTime}`,\n        extendedProps: normalizedEvent,\n      };\n    });\n  }, [events, selectedDate]);\n\n  const categories = ['Work', 'Personal', 'School'];\n  const priorities = ['Low', 'Medium', 'High', 'Critical'];\n\n  const eventClassNames = (eventInfo) => {\n    const priority = eventInfo.event.extendedProps.priority || 'Medium';\n    return [`priority-${priority.toLowerCase()}`];\n  };\n\n  return (\n    <div className=\"calendar-view\">\n      <FullCalendar\n        ref={calendarRef}\n        plugins={[dayGridPlugin, timeGridPlugin, interactionPlugin]}\n        initialView=\"timeGridWeek\"\n        headerToolbar={{\n          left: 'prev,next today',\n          center: 'title',\n          right: 'timeGridWeek,timeGridDay'\n        }}\n        events={calendarEvents}\n        editable={true}\n        selectable={true}\n        eventDrop={handleEventDrop}\n        eventClick={handleEventClick}\n        dateClick={handleDateClick}\n        allDaySlot={false}\n        snapDuration=\"00:15\"\n        eventClassNames={eventClassNames}\n        height=\"100%\"\n      />\n\n      {/* Create Event Modal */}\n      {createModalOpen && (\n        <div className=\"modal-overlay\">\n          <div className=\"modal-content\">\n            <div className=\"modal-header\">Create New Event</div>\n            <div className=\"input-row\">\n              <label>Title:</label>\n              <input\n                type=\"text\"\n                value={newEvent.title}\n                onChange={(e) => setNewEvent({ ...newEvent, title: e.target.value })}\n                placeholder=\"Enter event title...\"\n              />\n            </div>\n            <div className=\"input-row\">\n              <label>Description:</label>\n              <input\n                type=\"text\"\n                value={newEvent.description}\n                onChange={(e) => setNewEvent({ ...newEvent, description: e.target.value })}\n                placeholder=\"Enter description...\"\n              />\n            </div>\n            <div className=\"input-row\">\n              <label>Start Time:</label>\n              <input\n                type=\"time\"\n                value={newEvent.startTime}\n                onChange={(e) => setNewEvent({ ...newEvent, startTime: e.target.value })}\n              />\n            </div>\n            <div className=\"input-row\">\n              <label>End Time:</label>\n              <input\n                type=\"time\"\n                value={newEvent.endTime}\n                onChange={(e) => setNewEvent({ ...newEvent, endTime: e.target.value })}\n              />\n            </div>\n            <div className=\"input-row\">\n              <label>Category:</label>\n              <select\n                value={newEvent.category}\n                onChange={(e) => setNewEvent({ ...newEvent, category: e.target.value })}\n              >\n                {categories.map(cat => (\n                  <option key={cat} value={cat}>{cat}</option>\n                ))}\n              </select>\n            </div>\n            <div className=\"input-row\">\n              <label>Priority:</label>\n              <select\n                value={newEvent.priority}\n                onChange={(e) => setNewEvent({ ...newEvent, priority: e.target.value })}\n              >\n                {priorities.map(p => (\n                  <option key={p} value={p}>{p}</option>\n                ))}\n              </select>\n            </div>\n            <div className=\"input-row\">\n              <label>Recurring:</label>\n              <input\n                type=\"checkbox\"\n                checked={newEvent.recurring}\n                onChange={(e) => handleRecurringChange(e.target.checked)}\n              />\n            </div>\n            <div className=\"modal-buttons\">\n              <button className=\"save-btn\" onClick={handleCreateEvent}>Save</button>\n              <button className=\"cancel-btn\" onClick={() => setCreateModalOpen(false)}>Cancel</button>\n            </div>\n          </div>\n        </div>\n      )}\n\n      {/* Edit/Delete Event Modal */}\n      {editModalOpen && selectedEvent && (\n        <div className=\"modal-overlay\">\n          <div className=\"modal-content\">\n            <div className=\"modal-header\">Edit Event</div>\n            <div className=\"input-row\">\n              <label>Title:</label>\n              <input\n                type=\"text\"\n                value={selectedEvent.title}\n                onChange={(e) => setSelectedEvent({ ...selectedEvent, title: e.target.value })}\n              />\n            </div>\n            <div className=\"input-row\">\n              <label>Description:</label>\n              <input\n                type=\"text\"\n                value={selectedEvent.description}\n                onChange={(e) => setSelectedEvent({ ...selectedEvent, description: e.target.value })}\n              />\n            </div>\n            <div className=\"input-row\">\n              <label>Start Time:</label>\n              <input\n                type=\"time\"\n                value={selectedEvent.startTime}\n                onChange={(e) => setSelectedEvent({ ...selectedEvent, startTime: e.target.value })}\n              />\n            </div>\n            <div className=\"input-row\">\n              <label>End Time:</label>\n              <input\n                type=\"time\"\n                value={selectedEvent.endTime}\n                onChange={(e) => setSelectedEvent({ ...selectedEvent, endTime: e.target.value })}\n              />\n            </div>\n            <div className=\"input-row\">\n              <label>Category:</label>\n              <select\n                value={selectedEvent.category}\n                onChange={(e) => setSelectedEvent({ ...selectedEvent, category: e.target.value })}\n              >\n                {categories.map(cat => (\n                  <option key={cat} value={cat}>{cat}</option>\n                ))}\n              </select>\n            </div>\n            <div className=\"input-row\">\n              <label>Priority:</label>\n              <select\n                value={selectedEvent.priority}\n                onChange={(e) => setSelectedEvent({ ...selectedEvent, priority: e.target.value })}\n              >\n                {priorities.map(p => (\n                  <option key={p} value={p}>{p}</option>\n                ))}\n              </select>\n            </div>\n            <div className=\"input-row\">\n              <label>Recurring:</label>\n              <input\n                type=\"checkbox\"\n                checked={selectedEvent.recurring}\n                onChange={(e) => handleRecurringChange(e.target.checked)}\n              />\n            </div>\n            <div className=\"modal-buttons\">\n              <button className=\"save-btn\" onClick={handleEditEvent}>Save</button>\n              <button className=\"delete-btn\" onClick={handleDeleteEvent}>Delete</button>\n              <button className=\"cancel-btn\" onClick={() => setEditModalOpen(false)}>Cancel</button>\n            </div>\n          </div>\n        </div>\n      )}\n\n      {/* Recurring Options Modal */}\n      <RecurringOptionsModal\n        isOpen={recurringModalOpen}\n        onClose={() => setRecurringModalOpen(false)}\n        onSave={handleRecurringOptionsSave}\n        recurringOptions={recurringOptions}\n        setRecurringOptions={setRecurringOptions}\n      />\n\n      {/* Confirmation Modal */}\n      {confirmModalOpen && (\n        <div className=\"modal-overlay\">\n          <div className=\"modal-content\">\n            <div className=\"modal-header\">Confirm Action</div>\n            <div className=\"confirm-message\">{confirmMessage}</div>\n            <div className=\"modal-buttons\">\n              <button className=\"save-btn\" onClick={() => handleConfirmAction('all')}>All Instances</button>\n              <button className=\"save-btn\" onClick={() => handleConfirmAction('single')}>Just This One</button>\n              <button className=\"cancel-btn\" onClick={() => handleConfirmAction('cancel')}>Cancel</button>\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default CalendarView;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}