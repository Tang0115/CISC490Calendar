{"ast":null,"code":"var _jsxFileName = \"/home/tang0115/cisc490/calendar/CISC-490-Calendar/src/components/DayDetails.js\",\n  _s = $RefreshSig$();\nimport React, { useMemo, useState, useEffect } from 'react';\nimport RecurringOptionsModal from './RecurringOptionsModal';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst getLocalDateString = date => {\n  const d = new Date(date);\n  const year = d.getFullYear();\n  const month = String(d.getMonth() + 1).padStart(2, '0');\n  const day = String(d.getDate()).padStart(2, '0');\n  return `${year}-${month}-${day}`;\n};\nconst generateRecurringDates = (startDate, recurringOptions) => {\n  const dates = [];\n  const start = new Date(startDate);\n  const end = new Date(recurringOptions.endDate);\n  let currentDate = new Date(start);\n\n  // Validate dates\n  if (isNaN(start.getTime()) || isNaN(end.getTime())) {\n    console.error('Invalid start or end date');\n    return dates;\n  }\n\n  // Ensure interval is valid\n  const interval = Math.max(1, parseInt(recurringOptions.interval) || 1);\n  while (currentDate <= end) {\n    if (recurringOptions.frequency === 'daily') {\n      dates.push(new Date(currentDate));\n      currentDate.setDate(currentDate.getDate() + interval);\n    } else if (recurringOptions.frequency === 'weekly') {\n      // Ensure weekDays is an array of valid day numbers (0-6)\n      const validWeekDays = recurringOptions.weekDays.map(day => parseInt(day)).filter(day => !isNaN(day) && day >= 0 && day <= 6);\n      if (validWeekDays.includes(currentDate.getDay())) {\n        dates.push(new Date(currentDate));\n      }\n      currentDate.setDate(currentDate.getDate() + 1);\n\n      // If we've completed a week and have an interval > 1, skip ahead\n      if (currentDate.getDay() === 0 && interval > 1) {\n        currentDate.setDate(currentDate.getDate() + (interval - 1) * 7);\n      }\n    } else if (recurringOptions.frequency === 'monthly') {\n      dates.push(new Date(currentDate));\n      const oldMonth = currentDate.getMonth();\n      currentDate.setMonth(currentDate.getMonth() + interval);\n\n      // Handle month skipping (e.g., Jan 31 to Feb 31 should go to Feb 28)\n      if (currentDate.getMonth() > (oldMonth + interval) % 12) {\n        currentDate.setDate(0); // Set to last day of previous month\n      }\n    } else if (recurringOptions.frequency === 'yearly') {\n      dates.push(new Date(currentDate));\n      currentDate.setFullYear(currentDate.getFullYear() + interval);\n    }\n\n    // Safety check to prevent infinite loops\n    if (dates.length > 1000) {\n      console.warn('Too many recurring dates generated, truncating to 1000');\n      break;\n    }\n  }\n  return dates;\n};\nfunction DayDetails({\n  selectedDate,\n  setSelectedDate,\n  events,\n  setEvents\n}) {\n  _s();\n  const [newTask, setNewTask] = useState({\n    title: '',\n    description: '',\n    startTime: '',\n    endTime: '',\n    category: 'Work',\n    priority: 'Medium',\n    recurring: false\n  });\n  const [recurringModalOpen, setRecurringModalOpen] = useState(false);\n  const [recurringOptions, setRecurringOptions] = useState({\n    frequency: 'daily',\n    weekDays: [],\n    endDate: '',\n    interval: 1\n  });\n  const [editModalOpen, setEditModalOpen] = useState(false);\n  const [selectedTask, setSelectedTask] = useState(null);\n  const [confirmModalOpen, setConfirmModalOpen] = useState(false);\n  const [confirmAction, setConfirmAction] = useState(null);\n  const [confirmMessage, setConfirmMessage] = useState('');\n  const [pendingTask, setPendingTask] = useState(null);\n  const [lastAction, setLastAction] = useState(null);\n  const [showUndo, setShowUndo] = useState(false);\n  const [errors, setErrors] = useState({});\n  const [deletedTasks, setDeletedTasks] = useState([]);\n  const [showUndoNotification, setShowUndoNotification] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n  const [errorMessage, setErrorMessage] = useState('');\n  const categories = useMemo(() => ['Work', 'Personal', 'School'], []);\n  const priorities = ['Low', 'Medium', 'High', 'Critical'];\n  const months = useMemo(() => ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'], []);\n  const years = useMemo(() => {\n    const currentYear = new Date().getFullYear();\n    return Array.from({\n      length: 20\n    }, (_, i) => currentYear - 10 + i);\n  }, []);\n  const handleRecurringChange = checked => {\n    if (selectedTask) {\n      setSelectedTask({\n        ...selectedTask,\n        recurring: checked\n      });\n      if (checked) {\n        setRecurringModalOpen(true);\n      }\n    } else {\n      setNewTask({\n        ...newTask,\n        recurring: checked\n      });\n      if (checked) {\n        setRecurringModalOpen(true);\n      }\n    }\n  };\n  const handleRecurringOptionsSave = options => {\n    if (selectedTask) {\n      setSelectedTask({\n        ...selectedTask,\n        recurringOptions: options\n      });\n    } else {\n      setNewTask({\n        ...newTask,\n        recurringOptions: options\n      });\n    }\n  };\n  const validateTimeInputs = (startTime, endTime) => {\n    const errors = {};\n    if (!startTime) {\n      errors.startTime = 'Start time is required';\n    }\n    if (!endTime) {\n      errors.endTime = 'End time is required';\n    }\n    if (startTime && endTime) {\n      const [startHour, startMinute] = startTime.split(':').map(Number);\n      const [endHour, endMinute] = endTime.split(':').map(Number);\n      const startMinutes = startHour * 60 + startMinute;\n      const endMinutes = endHour * 60 + endMinute;\n      if (endMinutes <= startMinutes) {\n        errors.endTime = 'End time must be after start time';\n      }\n    }\n    return errors;\n  };\n  const checkForOverlappingEvents = (startTime, endTime, taskId = null) => {\n    const [startHour, startMinute] = startTime.split(':').map(Number);\n    const [endHour, endMinute] = endTime.split(':').map(Number);\n    const newStartMinutes = startHour * 60 + startMinute;\n    const newEndMinutes = endHour * 60 + endMinute;\n    return events.some(task => {\n      if (taskId && task.taskId === taskId) return false;\n      const [taskStartHour, taskStartMinute] = task.startTime.split(':').map(Number);\n      const [taskEndHour, taskEndMinute] = task.endTime.split(':').map(Number);\n      const taskStartMinutes = taskStartHour * 60 + taskStartMinute;\n      const taskEndMinutes = taskEndHour * 60 + taskEndMinute;\n\n      // Handle events spanning midnight\n      const normalizedNewEnd = newEndMinutes < newStartMinutes ? newEndMinutes + 1440 : newEndMinutes;\n      const normalizedTaskEnd = taskEndMinutes < taskStartMinutes ? taskEndMinutes + 1440 : taskEndMinutes;\n      return newStartMinutes < normalizedTaskEnd && normalizedNewEnd > taskStartMinutes;\n    });\n  };\n  const handleAddTask = async () => {\n    try {\n      var _newTask$title, _newTask$recurringOpt, _newTask$description;\n      setIsLoading(true);\n      setErrorMessage('');\n\n      // Validate required fields\n      if (!((_newTask$title = newTask.title) !== null && _newTask$title !== void 0 && _newTask$title.trim())) {\n        setErrors({\n          title: 'Title is required'\n        });\n        return;\n      }\n      const timeErrors = validateTimeInputs(newTask.startTime, newTask.endTime);\n      if (Object.keys(timeErrors).length > 0) {\n        setErrors(timeErrors);\n        return;\n      }\n      if (checkForOverlappingEvents(newTask.startTime, newTask.endTime)) {\n        setErrors({\n          overlap: 'This event overlaps with an existing event'\n        });\n        return;\n      }\n\n      // Validate recurring options if task is recurring\n      if (newTask.recurring && (!((_newTask$recurringOpt = newTask.recurringOptions) !== null && _newTask$recurringOpt !== void 0 && _newTask$recurringOpt.endDate) || newTask.recurringOptions.frequency === 'weekly' && (!newTask.recurringOptions.weekDays || newTask.recurringOptions.weekDays.length === 0))) {\n        setErrors({\n          recurring: 'Please complete recurring event settings'\n        });\n        return;\n      }\n      setErrors({});\n      const taskData = {\n        taskId: Date.now().toString(),\n        title: newTask.title.trim(),\n        description: ((_newTask$description = newTask.description) === null || _newTask$description === void 0 ? void 0 : _newTask$description.trim()) || '',\n        startTime: newTask.startTime,\n        endTime: newTask.endTime,\n        category: newTask.category || 'Work',\n        priority: newTask.priority || 'Medium',\n        recurring: newTask.recurring,\n        recurringOptions: newTask.recurring ? {\n          ...newTask.recurringOptions,\n          interval: Math.max(1, parseInt(newTask.recurringOptions.interval) || 1)\n        } : null,\n        metadata: {\n          createdBy: 'CurrentUser',\n          createdAt: new Date().toISOString(),\n          lastUpdated: new Date().toISOString()\n        },\n        date: getLocalDateString(selectedDate)\n      };\n      let tasksToAdd = [taskData];\n      if (taskData.recurring && taskData.recurringOptions) {\n        try {\n          const recurringDates = generateRecurringDates(new Date(`${taskData.date}T${taskData.startTime}`), taskData.recurringOptions);\n          if (recurringDates.length === 0) {\n            setErrors({\n              recurring: 'No valid recurring dates were generated'\n            });\n            return;\n          }\n          tasksToAdd = recurringDates.map((date, index) => {\n            const startTime = date.toTimeString().slice(0, 5);\n            const durationMs = new Date(`1970/01/01 ${taskData.endTime}`).getTime() - new Date(`1970/01/01 ${taskData.startTime}`).getTime();\n            const endTime = new Date(date.getTime() + durationMs).toTimeString().slice(0, 5);\n            return {\n              ...taskData,\n              taskId: `${taskData.taskId}-${index}`,\n              date: getLocalDateString(date),\n              startTime,\n              endTime,\n              metadata: {\n                ...taskData.metadata,\n                recurringGroupId: taskData.taskId\n              }\n            };\n          });\n        } catch (error) {\n          console.error('Error generating recurring dates:', error);\n          setErrors({\n            recurring: 'Error generating recurring dates'\n          });\n          return;\n        }\n      }\n\n      // Check storage limit before saving\n      try {\n        const updatedEvents = [...events, ...tasksToAdd];\n        const eventsJson = JSON.stringify(updatedEvents);\n        if (eventsJson.length > 5242880) {\n          // 5MB limit\n          setErrorMessage('Storage limit exceeded. Please delete some tasks.');\n          return;\n        }\n        localStorage.setItem('tasks', eventsJson);\n      } catch (e) {\n        if (e.name === 'QuotaExceededError') {\n          setErrorMessage('Storage limit exceeded. Please delete some tasks.');\n          return;\n        }\n        throw e;\n      }\n      setLastAction({\n        type: 'add',\n        tasks: tasksToAdd,\n        previousEvents: [...events]\n      });\n      setEvents(prevEvents => [...prevEvents, ...tasksToAdd]);\n      setShowUndo(true);\n      setTimeout(() => setShowUndo(false), 5000);\n\n      // Reset form\n      setNewTask({\n        title: '',\n        description: '',\n        startTime: '',\n        endTime: '',\n        category: 'Work',\n        priority: 'Medium',\n        recurring: false\n      });\n      setRecurringOptions({\n        frequency: 'daily',\n        weekDays: [],\n        endDate: '',\n        interval: 1\n      });\n    } catch (error) {\n      console.error('Error adding task:', error);\n      setErrorMessage('An error occurred while adding the task. Please try again.');\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  const handleUpdateTask = (taskId, updatedTask) => {\n    setEvents(prevEvents => prevEvents.map(task => task.taskId === taskId ? {\n      ...task,\n      ...updatedTask,\n      metadata: {\n        ...task.metadata,\n        lastUpdated: new Date().toISOString()\n      }\n    } : task));\n  };\n  const handleEditTask = task => {\n    const timeErrors = validateTimeInputs(task.startTime, task.endTime);\n    if (Object.keys(timeErrors).length > 0) {\n      setErrors(timeErrors);\n      return;\n    }\n    if (checkForOverlappingEvents(task.startTime, task.endTime, task.taskId)) {\n      setErrors({\n        overlap: 'This event overlaps with an existing event'\n      });\n      return;\n    }\n    setErrors({});\n    if (task.recurring) {\n      setConfirmMessage('This is a recurring event. Would you like to edit all instances or just this one?');\n      setConfirmAction('edit');\n      setPendingTask(task);\n      setConfirmModalOpen(true);\n    } else {\n      setSelectedTask(task);\n      setEditModalOpen(true);\n    }\n  };\n  const handleDeleteTask = taskId => {\n    const task = events.find(t => t.taskId === taskId);\n    if (task.recurring) {\n      setConfirmMessage('This is a recurring event. Would you like to delete all instances or just this one?');\n      setConfirmAction('delete');\n      setPendingTask(task);\n      setConfirmModalOpen(true);\n    } else {\n      setDeletedTasks(prev => [...prev, {\n        ...task,\n        deletedAt: Date.now()\n      }]);\n      setLastAction({\n        type: 'delete',\n        taskId: taskId,\n        previousEvents: [...events]\n      });\n      setEvents(prevEvents => prevEvents.filter(task => task.taskId !== taskId));\n      setShowUndo(true);\n      setTimeout(() => setShowUndo(false), 5000);\n    }\n  };\n  const handleConfirmAction = action => {\n    if (action === 'cancel') {\n      setConfirmModalOpen(false);\n      setPendingTask(null);\n      return;\n    }\n    if (confirmAction === 'edit') {\n      if (pendingTask) {\n        if (action === 'all') {\n          setSelectedTask(pendingTask);\n          setEditModalOpen(true);\n        } else if (action === 'single') {\n          setSelectedTask(pendingTask);\n          setEditModalOpen(true);\n        }\n      }\n    } else if (confirmAction === 'delete') {\n      if (pendingTask) {\n        if (action === 'all' && pendingTask.recurringOptions) {\n          // Delete all instances of the recurring event by matching the base taskId\n          const baseTaskId = pendingTask.taskId.split('-')[0];\n          setEvents(prevEvents => prevEvents.filter(task => !task.taskId.startsWith(baseTaskId)));\n        } else if (action === 'single') {\n          // Delete only this instance\n          setEvents(prevEvents => prevEvents.filter(task => task.taskId !== pendingTask.taskId));\n        }\n      }\n    }\n    setConfirmModalOpen(false);\n    setPendingTask(null);\n  };\n  const dayTasks = useMemo(() => {\n    const filteredTasks = events.filter(task => task.date === getLocalDateString(selectedDate)).sort((a, b) => new Date(`1970/01/01 ${a.startTime}`) - new Date(`1970/01/01 ${b.startTime}`));\n    return filteredTasks;\n  }, [events, selectedDate]);\n  useEffect(() => {\n    console.log('DayDetails selectedDate:', selectedDate, 'Normalized:', getLocalDateString(selectedDate));\n    console.log('DayDetails events:', events);\n    console.log('DayDetails dayTasks:', dayTasks);\n  }, [selectedDate, events, dayTasks]);\n  const getPriorityColor = priority => {\n    switch (priority) {\n      case 'Low':\n        return '#A8CCDC';\n      case 'Medium':\n        return '#DDA853';\n      case 'High':\n        return '#164046';\n      case 'Critical':\n        return '#FF0000';\n      default:\n        return '#FFFFFF';\n    }\n  };\n  const toggleTask = taskId => {\n    const task = events.find(t => t.taskId === taskId);\n    if (task) {\n      const updatedTask = {\n        ...task,\n        completed: !task.completed,\n        metadata: {\n          ...task.metadata,\n          lastUpdated: new Date().toISOString()\n        }\n      };\n      handleUpdateTask(taskId, updatedTask);\n    }\n  };\n  const handlePreviousDay = () => {\n    const prevDate = new Date(selectedDate);\n    prevDate.setDate(prevDate.getDate() - 1);\n    setSelectedDate(prevDate);\n  };\n  const handleNextDay = () => {\n    const nextDate = new Date(selectedDate);\n    nextDate.setDate(nextDate.getDate() + 1);\n    setSelectedDate(nextDate);\n  };\n  const handleToday = () => {\n    setSelectedDate(new Date());\n  };\n  const handleDateChange = (year, month, day) => {\n    const newDate = new Date(year, month, day);\n    if (!isNaN(newDate.getTime())) {\n      setSelectedDate(newDate);\n    }\n  };\n  const handleInputChange = (field, value) => {\n    setNewTask(prev => ({\n      ...prev,\n      [field]: value\n    }));\n  };\n  const formatTime12Hour = time => {\n    const [hours, minutes] = time.split(':').map(Number);\n    const period = hours >= 12 ? 'PM' : 'AM';\n    const adjustedHours = hours % 12 || 12;\n    return `${adjustedHours}:${minutes.toString().padStart(2, '0')} ${period}`;\n  };\n  const handleSaveEdit = () => {\n    if (selectedTask.title.trim() && selectedTask.startTime && selectedTask.endTime) {\n      const updatedTask = {\n        ...selectedTask,\n        metadata: {\n          ...selectedTask.metadata,\n          lastUpdated: new Date().toISOString()\n        }\n      };\n      handleUpdateTask(selectedTask.taskId, updatedTask);\n      setEditModalOpen(false);\n      setSelectedTask(null);\n    }\n  };\n  const handleUndo = () => {\n    if (lastAction) {\n      setEvents(lastAction.previousEvents);\n      setLastAction(null);\n      setShowUndo(false);\n    }\n  };\n  const handleUndoDelete = () => {\n    const lastDeletedTask = deletedTasks[deletedTasks.length - 1];\n    if (lastDeletedTask) {\n      setEvents(prevEvents => [...prevEvents, lastDeletedTask]);\n      setDeletedTasks(prev => prev.filter(task => task.taskId !== lastDeletedTask.taskId));\n      setShowUndoNotification(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"day-details\",\n    children: [errorMessage && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error-banner\",\n      role: \"alert\",\n      children: [errorMessage, /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setErrorMessage(''),\n        \"aria-label\": \"Dismiss error\",\n        children: \"\\xD7\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 503,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 501,\n      columnNumber: 9\n    }, this), isLoading && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading-overlay\",\n      role: \"status\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loading-spinner\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 510,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"visually-hidden\",\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 511,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 509,\n      columnNumber: 9\n    }, this), showUndo && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"undo-notification\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: [\"Task \", (lastAction === null || lastAction === void 0 ? void 0 : lastAction.type) === 'add' ? 'added' : 'deleted']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 516,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleUndo,\n        children: \"Undo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 517,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 515,\n      columnNumber: 9\n    }, this), showUndoNotification && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"undo-notification\",\n      role: \"alert\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"Task deleted\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 522,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleUndoDelete,\n        children: \"Undo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 523,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 521,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Details for \", selectedDate.toLocaleDateString('en-US', {\n        weekday: 'long',\n        month: 'long',\n        day: 'numeric'\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 526,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"date-navigation\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handlePreviousDay,\n        children: \"Previous Day\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 528,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleToday,\n        children: \"Today\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 529,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleNextDay,\n        children: \"Next Day\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 530,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"date-selector\",\n        children: [/*#__PURE__*/_jsxDEV(\"select\", {\n          value: selectedDate.getFullYear(),\n          onChange: e => handleDateChange(parseInt(e.target.value), selectedDate.getMonth(), selectedDate.getDate()),\n          children: years.map(year => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: year,\n            children: year\n          }, year, false, {\n            fileName: _jsxFileName,\n            lineNumber: 537,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 532,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          value: selectedDate.getMonth(),\n          onChange: e => handleDateChange(selectedDate.getFullYear(), parseInt(e.target.value), selectedDate.getDate()),\n          children: months.map((month, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: index,\n            children: month\n          }, month, false, {\n            fileName: _jsxFileName,\n            lineNumber: 545,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 540,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          value: selectedDate.getDate(),\n          onChange: e => handleDateChange(selectedDate.getFullYear(), selectedDate.getMonth(), parseInt(e.target.value)),\n          children: Array.from({\n            length: new Date(selectedDate.getFullYear(), selectedDate.getMonth() + 1, 0).getDate()\n          }, (_, i) => i + 1).map(day => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: day,\n            children: day\n          }, day, false, {\n            fileName: _jsxFileName,\n            lineNumber: 553,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 548,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 531,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 527,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"details-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"timeline-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Today's Timeline\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 560,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"timeline\",\n          children: dayTasks.map(task => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `timeline-item ${task.completed ? 'completed' : ''}`,\n            style: {\n              borderLeft: `5px solid ${getPriorityColor(task.priority)}`\n            },\n            onClick: () => toggleTask(task.taskId),\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"task-content\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"task-title\",\n                children: [task.title, task.recurring && /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"recurring-badge\",\n                  children: \"\\uD83D\\uDD04\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 572,\n                  columnNumber: 40\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 570,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"task-time\",\n                children: [formatTime12Hour(task.startTime), \" - \", formatTime12Hour(task.endTime)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 574,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"task-category\",\n                children: task.category\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 577,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"task-priority\",\n                children: [\"Priority: \", task.priority]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 580,\n                columnNumber: 19\n              }, this), task.description && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"task-description\",\n                children: task.description\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 584,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 569,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"task-actions\",\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"edit-button\",\n                onClick: e => {\n                  e.stopPropagation();\n                  handleEditTask(task);\n                },\n                children: \"Edit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 590,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"delete-button\",\n                onClick: e => {\n                  e.stopPropagation();\n                  handleDeleteTask(task.taskId);\n                },\n                children: \"Delete\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 594,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 589,\n              columnNumber: 17\n            }, this)]\n          }, task.taskId, true, {\n            fileName: _jsxFileName,\n            lineNumber: 563,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 561,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 559,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"right-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Add Task\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 604,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"schedule-section\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"task-input-complex\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"input-row\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"Task Category:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 608,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                value: newTask.category,\n                onChange: e => handleInputChange('category', e.target.value),\n                children: categories.map(cat => /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: cat,\n                  children: cat\n                }, cat, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 611,\n                  columnNumber: 21\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 609,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 607,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"input-row\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"task-title\",\n                children: \"Task Title:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 616,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                id: \"task-title\",\n                type: \"text\",\n                value: newTask.title,\n                onChange: e => handleInputChange('title', e.target.value),\n                placeholder: \"Enter task title\",\n                \"aria-invalid\": errors.title ? 'true' : 'false',\n                \"aria-describedby\": errors.title ? 'title-error' : undefined\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 617,\n                columnNumber: 17\n              }, this), errors.title && /*#__PURE__*/_jsxDEV(\"span\", {\n                id: \"title-error\",\n                className: \"error-message\",\n                children: errors.title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 626,\n                columnNumber: 34\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 615,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"input-row\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"Task Description:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 629,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                value: newTask.description,\n                onChange: e => handleInputChange('description', e.target.value),\n                placeholder: \"Enter Task Description...\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 630,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 628,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"input-row\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"start-time\",\n                children: \"Starting Time:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 638,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                id: \"start-time\",\n                type: \"time\",\n                value: newTask.startTime,\n                onChange: e => handleInputChange('startTime', e.target.value),\n                \"aria-invalid\": errors.startTime ? 'true' : 'false',\n                \"aria-describedby\": errors.startTime ? 'start-time-error' : undefined\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 639,\n                columnNumber: 17\n              }, this), errors.startTime && /*#__PURE__*/_jsxDEV(\"span\", {\n                id: \"start-time-error\",\n                className: \"error-message\",\n                children: errors.startTime\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 647,\n                columnNumber: 38\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 637,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"input-row\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"end-time\",\n                children: \"Ending Time:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 650,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                id: \"end-time\",\n                type: \"time\",\n                value: newTask.endTime,\n                onChange: e => handleInputChange('endTime', e.target.value),\n                \"aria-invalid\": errors.endTime ? 'true' : 'false',\n                \"aria-describedby\": errors.endTime ? 'end-time-error' : undefined\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 651,\n                columnNumber: 17\n              }, this), errors.endTime && /*#__PURE__*/_jsxDEV(\"span\", {\n                id: \"end-time-error\",\n                className: \"error-message\",\n                children: errors.endTime\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 659,\n                columnNumber: 36\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 649,\n              columnNumber: 15\n            }, this), errors.overlap && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"overlap-warning-popup\",\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                children: \"Schedule Conflict\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 663,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: errors.overlap\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 664,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"close-button\",\n                onClick: () => setErrors({}),\n                children: \"Close\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 665,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 662,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"input-row\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"Priority:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 671,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                value: newTask.priority,\n                onChange: e => handleInputChange('priority', e.target.value),\n                children: priorities.map(p => /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: p,\n                  children: [p, \" Priority\"]\n                }, p, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 674,\n                  columnNumber: 21\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 672,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 670,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"input-row\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"Recurring Task:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 679,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"checkbox\",\n                checked: newTask.recurring,\n                onChange: e => handleRecurringChange(e.target.checked)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 680,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 678,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"input-row\",\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: handleAddTask,\n                children: \"Add\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 687,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 686,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 606,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 605,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 603,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 558,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(RecurringOptionsModal, {\n      isOpen: recurringModalOpen,\n      onClose: () => setRecurringModalOpen(false),\n      onSave: handleRecurringOptionsSave,\n      recurringOptions: recurringOptions,\n      setRecurringOptions: setRecurringOptions\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 694,\n      columnNumber: 7\n    }, this), editModalOpen && selectedTask && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal-overlay\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-header\",\n          children: \"Edit Task\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 706,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-row\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Title:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 708,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: selectedTask.title,\n            onChange: e => setSelectedTask({\n              ...selectedTask,\n              title: e.target.value\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 709,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 707,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-row\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Description:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 716,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: selectedTask.description,\n            onChange: e => setSelectedTask({\n              ...selectedTask,\n              description: e.target.value\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 717,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 715,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-row\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Start Time:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 724,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"time\",\n            value: selectedTask.startTime,\n            onChange: e => setSelectedTask({\n              ...selectedTask,\n              startTime: e.target.value\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 725,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 723,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-row\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"End Time:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 732,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"time\",\n            value: selectedTask.endTime,\n            onChange: e => setSelectedTask({\n              ...selectedTask,\n              endTime: e.target.value\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 733,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 731,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-row\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Category:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 740,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            value: selectedTask.category,\n            onChange: e => setSelectedTask({\n              ...selectedTask,\n              category: e.target.value\n            }),\n            children: categories.map(cat => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: cat,\n              children: cat\n            }, cat, false, {\n              fileName: _jsxFileName,\n              lineNumber: 746,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 741,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 739,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-row\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Priority:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 751,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            value: selectedTask.priority,\n            onChange: e => setSelectedTask({\n              ...selectedTask,\n              priority: e.target.value\n            }),\n            children: priorities.map(p => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: p,\n              children: p\n            }, p, false, {\n              fileName: _jsxFileName,\n              lineNumber: 757,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 752,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 750,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-row\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Recurring:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 762,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            checked: selectedTask.recurring,\n            onChange: e => handleRecurringChange(e.target.checked)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 763,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 761,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-buttons\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"save-btn\",\n            onClick: handleSaveEdit,\n            children: \"Save\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 770,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"cancel-btn\",\n            onClick: () => setEditModalOpen(false),\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 771,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 769,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 705,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 704,\n      columnNumber: 9\n    }, this), confirmModalOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal-overlay\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-header\",\n          children: \"Confirm Action\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 781,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"confirm-message\",\n          children: confirmMessage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 782,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-buttons\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"save-btn\",\n            onClick: () => handleConfirmAction('all'),\n            children: \"All Instances\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 784,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"save-btn\",\n            onClick: () => handleConfirmAction('single'),\n            children: \"Just This One\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 785,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"cancel-btn\",\n            onClick: () => handleConfirmAction('cancel'),\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 786,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 783,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 780,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 779,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 499,\n    columnNumber: 5\n  }, this);\n}\n_s(DayDetails, \"jq031O8UhNAk7CX+lg0z+FQVuFk=\");\n_c = DayDetails;\nexport default DayDetails;\nvar _c;\n$RefreshReg$(_c, \"DayDetails\");","map":{"version":3,"names":["React","useMemo","useState","useEffect","RecurringOptionsModal","jsxDEV","_jsxDEV","getLocalDateString","date","d","Date","year","getFullYear","month","String","getMonth","padStart","day","getDate","generateRecurringDates","startDate","recurringOptions","dates","start","end","endDate","currentDate","isNaN","getTime","console","error","interval","Math","max","parseInt","frequency","push","setDate","validWeekDays","weekDays","map","filter","includes","getDay","oldMonth","setMonth","setFullYear","length","warn","DayDetails","selectedDate","setSelectedDate","events","setEvents","_s","newTask","setNewTask","title","description","startTime","endTime","category","priority","recurring","recurringModalOpen","setRecurringModalOpen","setRecurringOptions","editModalOpen","setEditModalOpen","selectedTask","setSelectedTask","confirmModalOpen","setConfirmModalOpen","confirmAction","setConfirmAction","confirmMessage","setConfirmMessage","pendingTask","setPendingTask","lastAction","setLastAction","showUndo","setShowUndo","errors","setErrors","deletedTasks","setDeletedTasks","showUndoNotification","setShowUndoNotification","isLoading","setIsLoading","errorMessage","setErrorMessage","categories","priorities","months","years","currentYear","Array","from","_","i","handleRecurringChange","checked","handleRecurringOptionsSave","options","validateTimeInputs","startHour","startMinute","split","Number","endHour","endMinute","startMinutes","endMinutes","checkForOverlappingEvents","taskId","newStartMinutes","newEndMinutes","some","task","taskStartHour","taskStartMinute","taskEndHour","taskEndMinute","taskStartMinutes","taskEndMinutes","normalizedNewEnd","normalizedTaskEnd","handleAddTask","_newTask$title","_newTask$recurringOpt","_newTask$description","trim","timeErrors","Object","keys","overlap","taskData","now","toString","metadata","createdBy","createdAt","toISOString","lastUpdated","tasksToAdd","recurringDates","index","toTimeString","slice","durationMs","recurringGroupId","updatedEvents","eventsJson","JSON","stringify","localStorage","setItem","e","name","type","tasks","previousEvents","prevEvents","setTimeout","handleUpdateTask","updatedTask","handleEditTask","handleDeleteTask","find","t","prev","deletedAt","handleConfirmAction","action","baseTaskId","startsWith","dayTasks","filteredTasks","sort","a","b","log","getPriorityColor","toggleTask","completed","handlePreviousDay","prevDate","handleNextDay","nextDate","handleToday","handleDateChange","newDate","handleInputChange","field","value","formatTime12Hour","time","hours","minutes","period","adjustedHours","handleSaveEdit","handleUndo","handleUndoDelete","lastDeletedTask","className","children","role","onClick","fileName","_jsxFileName","lineNumber","columnNumber","toLocaleDateString","weekday","onChange","target","style","borderLeft","stopPropagation","cat","htmlFor","id","placeholder","undefined","p","isOpen","onClose","onSave","_c","$RefreshReg$"],"sources":["/home/tang0115/cisc490/calendar/CISC-490-Calendar/src/components/DayDetails.js"],"sourcesContent":["import React, { useMemo, useState, useEffect } from 'react';\nimport RecurringOptionsModal from './RecurringOptionsModal';\n\nconst getLocalDateString = (date) => {\n  const d = new Date(date);\n  const year = d.getFullYear();\n  const month = String(d.getMonth() + 1).padStart(2, '0');\n  const day = String(d.getDate()).padStart(2, '0');\n  return `${year}-${month}-${day}`;\n};\n\nconst generateRecurringDates = (startDate, recurringOptions) => {\n  const dates = [];\n  const start = new Date(startDate);\n  const end = new Date(recurringOptions.endDate);\n  let currentDate = new Date(start);\n\n  // Validate dates\n  if (isNaN(start.getTime()) || isNaN(end.getTime())) {\n    console.error('Invalid start or end date');\n    return dates;\n  }\n\n  // Ensure interval is valid\n  const interval = Math.max(1, parseInt(recurringOptions.interval) || 1);\n\n  while (currentDate <= end) {\n    if (recurringOptions.frequency === 'daily') {\n      dates.push(new Date(currentDate));\n      currentDate.setDate(currentDate.getDate() + interval);\n    } else if (recurringOptions.frequency === 'weekly') {\n      // Ensure weekDays is an array of valid day numbers (0-6)\n      const validWeekDays = recurringOptions.weekDays\n        .map(day => parseInt(day))\n        .filter(day => !isNaN(day) && day >= 0 && day <= 6);\n\n      if (validWeekDays.includes(currentDate.getDay())) {\n        dates.push(new Date(currentDate));\n      }\n      currentDate.setDate(currentDate.getDate() + 1);\n      \n      // If we've completed a week and have an interval > 1, skip ahead\n      if (currentDate.getDay() === 0 && interval > 1) {\n        currentDate.setDate(currentDate.getDate() + (interval - 1) * 7);\n      }\n    } else if (recurringOptions.frequency === 'monthly') {\n      dates.push(new Date(currentDate));\n      const oldMonth = currentDate.getMonth();\n      currentDate.setMonth(currentDate.getMonth() + interval);\n      \n      // Handle month skipping (e.g., Jan 31 to Feb 31 should go to Feb 28)\n      if (currentDate.getMonth() > (oldMonth + interval) % 12) {\n        currentDate.setDate(0); // Set to last day of previous month\n      }\n    } else if (recurringOptions.frequency === 'yearly') {\n      dates.push(new Date(currentDate));\n      currentDate.setFullYear(currentDate.getFullYear() + interval);\n    }\n\n    // Safety check to prevent infinite loops\n    if (dates.length > 1000) {\n      console.warn('Too many recurring dates generated, truncating to 1000');\n      break;\n    }\n  }\n\n  return dates;\n};\n\nfunction DayDetails({ selectedDate, setSelectedDate, events, setEvents }) {\n  const [newTask, setNewTask] = useState({\n    title: '',\n    description: '',\n    startTime: '',\n    endTime: '',\n    category: 'Work',\n    priority: 'Medium',\n    recurring: false,\n  });\n  const [recurringModalOpen, setRecurringModalOpen] = useState(false);\n  const [recurringOptions, setRecurringOptions] = useState({\n    frequency: 'daily',\n    weekDays: [],\n    endDate: '',\n    interval: 1\n  });\n  const [editModalOpen, setEditModalOpen] = useState(false);\n  const [selectedTask, setSelectedTask] = useState(null);\n  const [confirmModalOpen, setConfirmModalOpen] = useState(false);\n  const [confirmAction, setConfirmAction] = useState(null);\n  const [confirmMessage, setConfirmMessage] = useState('');\n  const [pendingTask, setPendingTask] = useState(null);\n  const [lastAction, setLastAction] = useState(null);\n  const [showUndo, setShowUndo] = useState(false);\n  const [errors, setErrors] = useState({});\n  const [deletedTasks, setDeletedTasks] = useState([]);\n  const [showUndoNotification, setShowUndoNotification] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n  const [errorMessage, setErrorMessage] = useState('');\n\n  const categories = useMemo(() => ['Work', 'Personal', 'School'], []);\n  const priorities = ['Low', 'Medium', 'High', 'Critical'];\n\n  const months = useMemo(() => [\n    'January', 'February', 'March', 'April', 'May', 'June',\n    'July', 'August', 'September', 'October', 'November', 'December'\n  ], []);\n\n  const years = useMemo(() => {\n    const currentYear = new Date().getFullYear();\n    return Array.from({ length: 20 }, (_, i) => currentYear - 10 + i);\n  }, []);\n\n  const handleRecurringChange = (checked) => {\n    if (selectedTask) {\n      setSelectedTask({ ...selectedTask, recurring: checked });\n      if (checked) {\n        setRecurringModalOpen(true);\n      }\n    } else {\n      setNewTask({ ...newTask, recurring: checked });\n      if (checked) {\n        setRecurringModalOpen(true);\n      }\n    }\n  };\n\n  const handleRecurringOptionsSave = (options) => {\n    if (selectedTask) {\n      setSelectedTask({ ...selectedTask, recurringOptions: options });\n    } else {\n      setNewTask({ ...newTask, recurringOptions: options });\n    }\n  };\n\n  const validateTimeInputs = (startTime, endTime) => {\n    const errors = {};\n    if (!startTime) {\n      errors.startTime = 'Start time is required';\n    }\n    if (!endTime) {\n      errors.endTime = 'End time is required';\n    }\n    if (startTime && endTime) {\n      const [startHour, startMinute] = startTime.split(':').map(Number);\n      const [endHour, endMinute] = endTime.split(':').map(Number);\n      const startMinutes = startHour * 60 + startMinute;\n      const endMinutes = endHour * 60 + endMinute;\n      \n      if (endMinutes <= startMinutes) {\n        errors.endTime = 'End time must be after start time';\n      }\n    }\n    return errors;\n  };\n\n  const checkForOverlappingEvents = (startTime, endTime, taskId = null) => {\n    const [startHour, startMinute] = startTime.split(':').map(Number);\n    const [endHour, endMinute] = endTime.split(':').map(Number);\n    const newStartMinutes = startHour * 60 + startMinute;\n    const newEndMinutes = endHour * 60 + endMinute;\n    \n    return events.some(task => {\n      if (taskId && task.taskId === taskId) return false;\n      \n      const [taskStartHour, taskStartMinute] = task.startTime.split(':').map(Number);\n      const [taskEndHour, taskEndMinute] = task.endTime.split(':').map(Number);\n      const taskStartMinutes = taskStartHour * 60 + taskStartMinute;\n      const taskEndMinutes = taskEndHour * 60 + taskEndMinute;\n\n      // Handle events spanning midnight\n      const normalizedNewEnd = newEndMinutes < newStartMinutes ? newEndMinutes + 1440 : newEndMinutes;\n      const normalizedTaskEnd = taskEndMinutes < taskStartMinutes ? taskEndMinutes + 1440 : taskEndMinutes;\n\n      return (newStartMinutes < normalizedTaskEnd && normalizedNewEnd > taskStartMinutes);\n    });\n  };\n\n  const handleAddTask = async () => {\n    try {\n      setIsLoading(true);\n      setErrorMessage('');\n      \n      // Validate required fields\n      if (!newTask.title?.trim()) {\n        setErrors({ title: 'Title is required' });\n        return;\n      }\n\n      const timeErrors = validateTimeInputs(newTask.startTime, newTask.endTime);\n      if (Object.keys(timeErrors).length > 0) {\n        setErrors(timeErrors);\n        return;\n      }\n\n      if (checkForOverlappingEvents(newTask.startTime, newTask.endTime)) {\n        setErrors({ overlap: 'This event overlaps with an existing event' });\n        return;\n      }\n\n      // Validate recurring options if task is recurring\n      if (newTask.recurring && (!newTask.recurringOptions?.endDate || \n          (newTask.recurringOptions.frequency === 'weekly' && \n           (!newTask.recurringOptions.weekDays || newTask.recurringOptions.weekDays.length === 0)))) {\n        setErrors({ recurring: 'Please complete recurring event settings' });\n        return;\n      }\n\n      setErrors({});\n      const taskData = {\n        taskId: Date.now().toString(),\n        title: newTask.title.trim(),\n        description: newTask.description?.trim() || '',\n        startTime: newTask.startTime,\n        endTime: newTask.endTime,\n        category: newTask.category || 'Work',\n        priority: newTask.priority || 'Medium',\n        recurring: newTask.recurring,\n        recurringOptions: newTask.recurring ? {\n          ...newTask.recurringOptions,\n          interval: Math.max(1, parseInt(newTask.recurringOptions.interval) || 1)\n        } : null,\n        metadata: { \n          createdBy: 'CurrentUser', \n          createdAt: new Date().toISOString(),\n          lastUpdated: new Date().toISOString() \n        },\n        date: getLocalDateString(selectedDate),\n      };\n\n      let tasksToAdd = [taskData];\n\n      if (taskData.recurring && taskData.recurringOptions) {\n        try {\n          const recurringDates = generateRecurringDates(\n            new Date(`${taskData.date}T${taskData.startTime}`),\n            taskData.recurringOptions\n          );\n\n          if (recurringDates.length === 0) {\n            setErrors({ recurring: 'No valid recurring dates were generated' });\n            return;\n          }\n\n          tasksToAdd = recurringDates.map((date, index) => {\n            const startTime = date.toTimeString().slice(0, 5);\n            const durationMs = new Date(`1970/01/01 ${taskData.endTime}`).getTime() - \n                             new Date(`1970/01/01 ${taskData.startTime}`).getTime();\n            const endTime = new Date(date.getTime() + durationMs).toTimeString().slice(0, 5);\n\n            return {\n              ...taskData,\n              taskId: `${taskData.taskId}-${index}`,\n              date: getLocalDateString(date),\n              startTime,\n              endTime,\n              metadata: {\n                ...taskData.metadata,\n                recurringGroupId: taskData.taskId\n              }\n            };\n          });\n        } catch (error) {\n          console.error('Error generating recurring dates:', error);\n          setErrors({ recurring: 'Error generating recurring dates' });\n          return;\n        }\n      }\n\n      // Check storage limit before saving\n      try {\n        const updatedEvents = [...events, ...tasksToAdd];\n        const eventsJson = JSON.stringify(updatedEvents);\n        if (eventsJson.length > 5242880) { // 5MB limit\n          setErrorMessage('Storage limit exceeded. Please delete some tasks.');\n          return;\n        }\n        localStorage.setItem('tasks', eventsJson);\n      } catch (e) {\n        if (e.name === 'QuotaExceededError') {\n          setErrorMessage('Storage limit exceeded. Please delete some tasks.');\n          return;\n        }\n        throw e;\n      }\n\n      setLastAction({\n        type: 'add',\n        tasks: tasksToAdd,\n        previousEvents: [...events]\n      });\n      setEvents(prevEvents => [...prevEvents, ...tasksToAdd]);\n      setShowUndo(true);\n      setTimeout(() => setShowUndo(false), 5000);\n\n      // Reset form\n      setNewTask({\n        title: '',\n        description: '',\n        startTime: '',\n        endTime: '',\n        category: 'Work',\n        priority: 'Medium',\n        recurring: false,\n      });\n      setRecurringOptions({\n        frequency: 'daily',\n        weekDays: [],\n        endDate: '',\n        interval: 1\n      });\n    } catch (error) {\n      console.error('Error adding task:', error);\n      setErrorMessage('An error occurred while adding the task. Please try again.');\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const handleUpdateTask = (taskId, updatedTask) => {\n    setEvents(prevEvents =>\n      prevEvents.map(task =>\n        task.taskId === taskId ? { ...task, ...updatedTask, metadata: { ...task.metadata, lastUpdated: new Date().toISOString() } } : task\n      )\n    );\n  };\n\n  const handleEditTask = (task) => {\n    const timeErrors = validateTimeInputs(task.startTime, task.endTime);\n    if (Object.keys(timeErrors).length > 0) {\n      setErrors(timeErrors);\n      return;\n    }\n\n    if (checkForOverlappingEvents(task.startTime, task.endTime, task.taskId)) {\n      setErrors({ overlap: 'This event overlaps with an existing event' });\n      return;\n    }\n\n    setErrors({});\n    if (task.recurring) {\n      setConfirmMessage('This is a recurring event. Would you like to edit all instances or just this one?');\n      setConfirmAction('edit');\n      setPendingTask(task);\n      setConfirmModalOpen(true);\n    } else {\n      setSelectedTask(task);\n      setEditModalOpen(true);\n    }\n  };\n\n  const handleDeleteTask = (taskId) => {\n    const task = events.find(t => t.taskId === taskId);\n    if (task.recurring) {\n      setConfirmMessage('This is a recurring event. Would you like to delete all instances or just this one?');\n      setConfirmAction('delete');\n      setPendingTask(task);\n      setConfirmModalOpen(true);\n    } else {\n      setDeletedTasks(prev => [...prev, { ...task, deletedAt: Date.now() }]);\n      setLastAction({\n        type: 'delete',\n        taskId: taskId,\n        previousEvents: [...events]\n      });\n      setEvents(prevEvents => prevEvents.filter(task => task.taskId !== taskId));\n      setShowUndo(true);\n      setTimeout(() => setShowUndo(false), 5000);\n    }\n  };\n\n  const handleConfirmAction = (action) => {\n    if (action === 'cancel') {\n      setConfirmModalOpen(false);\n      setPendingTask(null);\n      return;\n    }\n\n    if (confirmAction === 'edit') {\n      if (pendingTask) {\n        if (action === 'all') {\n          setSelectedTask(pendingTask);\n          setEditModalOpen(true);\n        } else if (action === 'single') {\n          setSelectedTask(pendingTask);\n          setEditModalOpen(true);\n        }\n      }\n    } else if (confirmAction === 'delete') {\n      if (pendingTask) {\n        if (action === 'all' && pendingTask.recurringOptions) {\n          // Delete all instances of the recurring event by matching the base taskId\n          const baseTaskId = pendingTask.taskId.split('-')[0];\n          setEvents(prevEvents => prevEvents.filter(task => !task.taskId.startsWith(baseTaskId)));\n        } else if (action === 'single') {\n          // Delete only this instance\n          setEvents(prevEvents => prevEvents.filter(task => task.taskId !== pendingTask.taskId));\n        }\n      }\n    }\n    setConfirmModalOpen(false);\n    setPendingTask(null);\n  };\n\n  const dayTasks = useMemo(() => {\n    const filteredTasks = events.filter(task => task.date === getLocalDateString(selectedDate))\n      .sort((a, b) => new Date(`1970/01/01 ${a.startTime}`) - new Date(`1970/01/01 ${b.startTime}`));\n    return filteredTasks;\n  }, [events, selectedDate]);\n\n  useEffect(() => {\n    console.log('DayDetails selectedDate:', selectedDate, 'Normalized:', getLocalDateString(selectedDate));\n    console.log('DayDetails events:', events);\n    console.log('DayDetails dayTasks:', dayTasks);\n  }, [selectedDate, events, dayTasks]);\n\n  const getPriorityColor = (priority) => {\n    switch (priority) {\n      case 'Low': return '#A8CCDC';\n      case 'Medium': return '#DDA853';\n      case 'High': return '#164046';\n      case 'Critical': return '#FF0000';\n      default: return '#FFFFFF';\n    }\n  };\n\n  const toggleTask = (taskId) => {\n    const task = events.find(t => t.taskId === taskId);\n    if (task) {\n      const updatedTask = { ...task, completed: !task.completed, metadata: { ...task.metadata, lastUpdated: new Date().toISOString() } };\n      handleUpdateTask(taskId, updatedTask);\n    }\n  };\n\n  const handlePreviousDay = () => {\n    const prevDate = new Date(selectedDate);\n    prevDate.setDate(prevDate.getDate() - 1);\n    setSelectedDate(prevDate);\n  };\n\n  const handleNextDay = () => {\n    const nextDate = new Date(selectedDate);\n    nextDate.setDate(nextDate.getDate() + 1);\n    setSelectedDate(nextDate);\n  };\n\n  const handleToday = () => {\n    setSelectedDate(new Date());\n  };\n\n  const handleDateChange = (year, month, day) => {\n    const newDate = new Date(year, month, day);\n    if (!isNaN(newDate.getTime())) {\n      setSelectedDate(newDate);\n    }\n  };\n\n  const handleInputChange = (field, value) => {\n    setNewTask(prev => ({ ...prev, [field]: value }));\n  };\n\n  const formatTime12Hour = (time) => {\n    const [hours, minutes] = time.split(':').map(Number);\n    const period = hours >= 12 ? 'PM' : 'AM';\n    const adjustedHours = hours % 12 || 12;\n    return `${adjustedHours}:${minutes.toString().padStart(2, '0')} ${period}`;\n  };\n\n  const handleSaveEdit = () => {\n    if (selectedTask.title.trim() && selectedTask.startTime && selectedTask.endTime) {\n      const updatedTask = {\n        ...selectedTask,\n        metadata: { ...selectedTask.metadata, lastUpdated: new Date().toISOString() },\n      };\n      handleUpdateTask(selectedTask.taskId, updatedTask);\n      setEditModalOpen(false);\n      setSelectedTask(null);\n    }\n  };\n\n  const handleUndo = () => {\n    if (lastAction) {\n      setEvents(lastAction.previousEvents);\n      setLastAction(null);\n      setShowUndo(false);\n    }\n  };\n\n  const handleUndoDelete = () => {\n    const lastDeletedTask = deletedTasks[deletedTasks.length - 1];\n    if (lastDeletedTask) {\n      setEvents(prevEvents => [...prevEvents, lastDeletedTask]);\n      setDeletedTasks(prev => prev.filter(task => task.taskId !== lastDeletedTask.taskId));\n      setShowUndoNotification(false);\n    }\n  };\n\n  return (\n    <div className=\"day-details\">\n      {errorMessage && (\n        <div className=\"error-banner\" role=\"alert\">\n          {errorMessage}\n          <button onClick={() => setErrorMessage('')} aria-label=\"Dismiss error\">\n            ×\n          </button>\n        </div>\n      )}\n      {isLoading && (\n        <div className=\"loading-overlay\" role=\"status\">\n          <div className=\"loading-spinner\"></div>\n          <span className=\"visually-hidden\">Loading...</span>\n        </div>\n      )}\n      {showUndo && (\n        <div className=\"undo-notification\">\n          <span>Task {lastAction?.type === 'add' ? 'added' : 'deleted'}</span>\n          <button onClick={handleUndo}>Undo</button>\n        </div>\n      )}\n      {showUndoNotification && (\n        <div className=\"undo-notification\" role=\"alert\">\n          <span>Task deleted</span>\n          <button onClick={handleUndoDelete}>Undo</button>\n        </div>\n      )}\n      <h2>Details for {selectedDate.toLocaleDateString('en-US', { weekday: 'long', month: 'long', day: 'numeric' })}</h2>\n      <div className=\"date-navigation\">\n        <button onClick={handlePreviousDay}>Previous Day</button>\n        <button onClick={handleToday}>Today</button>\n        <button onClick={handleNextDay}>Next Day</button>\n        <div className=\"date-selector\">\n          <select\n            value={selectedDate.getFullYear()}\n            onChange={(e) => handleDateChange(parseInt(e.target.value), selectedDate.getMonth(), selectedDate.getDate())}\n          >\n            {years.map(year => (\n              <option key={year} value={year}>{year}</option>\n            ))}\n          </select>\n          <select\n            value={selectedDate.getMonth()}\n            onChange={(e) => handleDateChange(selectedDate.getFullYear(), parseInt(e.target.value), selectedDate.getDate())}\n          >\n            {months.map((month, index) => (\n              <option key={month} value={index}>{month}</option>\n            ))}\n          </select>\n          <select\n            value={selectedDate.getDate()}\n            onChange={(e) => handleDateChange(selectedDate.getFullYear(), selectedDate.getMonth(), parseInt(e.target.value))}\n          >\n            {Array.from({ length: new Date(selectedDate.getFullYear(), selectedDate.getMonth() + 1, 0).getDate() }, (_, i) => i + 1).map(day => (\n              <option key={day} value={day}>{day}</option>\n            ))}\n          </select>\n        </div>\n      </div>\n      <div className=\"details-content\">\n        <div className=\"timeline-section\">\n          <h3>Today's Timeline</h3>\n          <div className=\"timeline\">\n            {dayTasks.map((task) => (\n              <div \n                key={task.taskId} \n                className={`timeline-item ${task.completed ? 'completed' : ''}`}\n                style={{ borderLeft: `5px solid ${getPriorityColor(task.priority)}` }}\n                onClick={() => toggleTask(task.taskId)}\n              >\n                <div className=\"task-content\">\n                  <div className=\"task-title\">\n                    {task.title}\n                    {task.recurring && <span className=\"recurring-badge\">🔄</span>}\n                  </div>\n                  <div className=\"task-time\">\n                    {formatTime12Hour(task.startTime)} - {formatTime12Hour(task.endTime)}\n                  </div>\n                  <div className=\"task-category\">\n                    {task.category}\n                  </div>\n                  <div className=\"task-priority\">\n                    Priority: {task.priority}\n                  </div>\n                  {task.description && (\n                    <div className=\"task-description\">\n                      {task.description}\n                    </div>\n                  )}\n                </div>\n                <div className=\"task-actions\">\n                  <button className=\"edit-button\" onClick={(e) => {\n                    e.stopPropagation();\n                    handleEditTask(task);\n                  }}>Edit</button>\n                  <button className=\"delete-button\" onClick={(e) => {\n                    e.stopPropagation();\n                    handleDeleteTask(task.taskId);\n                  }}>Delete</button>\n                </div>\n              </div>\n            ))}\n          </div>\n        </div>\n        <div className=\"right-section\">\n          <h3>Add Task</h3>\n          <div className=\"schedule-section\">\n            <div className=\"task-input-complex\">\n              <div className=\"input-row\">\n                <label>Task Category:</label>\n                <select value={newTask.category} onChange={(e) => handleInputChange('category', e.target.value)}>\n                  {categories.map(cat => (\n                    <option key={cat} value={cat}>{cat}</option>\n                  ))}\n                </select>\n              </div>\n              <div className=\"input-row\">\n                <label htmlFor=\"task-title\">Task Title:</label>\n                <input\n                  id=\"task-title\"\n                  type=\"text\"\n                  value={newTask.title}\n                  onChange={(e) => handleInputChange('title', e.target.value)}\n                  placeholder=\"Enter task title\"\n                  aria-invalid={errors.title ? 'true' : 'false'}\n                  aria-describedby={errors.title ? 'title-error' : undefined}\n                />\n                {errors.title && <span id=\"title-error\" className=\"error-message\">{errors.title}</span>}\n              </div>\n              <div className=\"input-row\">\n                <label>Task Description:</label>\n                <input\n                  type=\"text\"\n                  value={newTask.description}\n                  onChange={(e) => handleInputChange('description', e.target.value)}\n                  placeholder=\"Enter Task Description...\"\n                />\n              </div>\n              <div className=\"input-row\">\n                <label htmlFor=\"start-time\">Starting Time:</label>\n                <input\n                  id=\"start-time\"\n                  type=\"time\"\n                  value={newTask.startTime}\n                  onChange={(e) => handleInputChange('startTime', e.target.value)}\n                  aria-invalid={errors.startTime ? 'true' : 'false'}\n                  aria-describedby={errors.startTime ? 'start-time-error' : undefined}\n                />\n                {errors.startTime && <span id=\"start-time-error\" className=\"error-message\">{errors.startTime}</span>}\n              </div>\n              <div className=\"input-row\">\n                <label htmlFor=\"end-time\">Ending Time:</label>\n                <input\n                  id=\"end-time\"\n                  type=\"time\"\n                  value={newTask.endTime}\n                  onChange={(e) => handleInputChange('endTime', e.target.value)}\n                  aria-invalid={errors.endTime ? 'true' : 'false'}\n                  aria-describedby={errors.endTime ? 'end-time-error' : undefined}\n                />\n                {errors.endTime && <span id=\"end-time-error\" className=\"error-message\">{errors.endTime}</span>}\n              </div>\n              {errors.overlap && (\n                <div className=\"overlap-warning-popup\">\n                  <h3>Schedule Conflict</h3>\n                  <p>{errors.overlap}</p>\n                  <button className=\"close-button\" onClick={() => setErrors({})}>\n                    Close\n                  </button>\n                </div>\n              )}\n              <div className=\"input-row\">\n                <label>Priority:</label>\n                <select value={newTask.priority} onChange={(e) => handleInputChange('priority', e.target.value)}>\n                  {priorities.map(p => (\n                    <option key={p} value={p}>{p} Priority</option>\n                  ))}\n                </select>\n              </div>\n              <div className=\"input-row\">\n                <label>Recurring Task:</label>\n                <input\n                  type=\"checkbox\"\n                  checked={newTask.recurring}\n                  onChange={(e) => handleRecurringChange(e.target.checked)}\n                />\n              </div>\n              <div className=\"input-row\">\n                <button onClick={handleAddTask}>Add</button>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <RecurringOptionsModal\n        isOpen={recurringModalOpen}\n        onClose={() => setRecurringModalOpen(false)}\n        onSave={handleRecurringOptionsSave}\n        recurringOptions={recurringOptions}\n        setRecurringOptions={setRecurringOptions}\n      />\n\n      {/* Edit Task Modal */}\n      {editModalOpen && selectedTask && (\n        <div className=\"modal-overlay\">\n          <div className=\"modal-content\">\n            <div className=\"modal-header\">Edit Task</div>\n            <div className=\"input-row\">\n              <label>Title:</label>\n              <input\n                type=\"text\"\n                value={selectedTask.title}\n                onChange={(e) => setSelectedTask({ ...selectedTask, title: e.target.value })}\n              />\n            </div>\n            <div className=\"input-row\">\n              <label>Description:</label>\n              <input\n                type=\"text\"\n                value={selectedTask.description}\n                onChange={(e) => setSelectedTask({ ...selectedTask, description: e.target.value })}\n              />\n            </div>\n            <div className=\"input-row\">\n              <label>Start Time:</label>\n              <input\n                type=\"time\"\n                value={selectedTask.startTime}\n                onChange={(e) => setSelectedTask({ ...selectedTask, startTime: e.target.value })}\n              />\n            </div>\n            <div className=\"input-row\">\n              <label>End Time:</label>\n              <input\n                type=\"time\"\n                value={selectedTask.endTime}\n                onChange={(e) => setSelectedTask({ ...selectedTask, endTime: e.target.value })}\n              />\n            </div>\n            <div className=\"input-row\">\n              <label>Category:</label>\n              <select\n                value={selectedTask.category}\n                onChange={(e) => setSelectedTask({ ...selectedTask, category: e.target.value })}\n              >\n                {categories.map(cat => (\n                  <option key={cat} value={cat}>{cat}</option>\n                ))}\n              </select>\n            </div>\n            <div className=\"input-row\">\n              <label>Priority:</label>\n              <select\n                value={selectedTask.priority}\n                onChange={(e) => setSelectedTask({ ...selectedTask, priority: e.target.value })}\n              >\n                {priorities.map(p => (\n                  <option key={p} value={p}>{p}</option>\n                ))}\n              </select>\n            </div>\n            <div className=\"input-row\">\n              <label>Recurring:</label>\n              <input\n                type=\"checkbox\"\n                checked={selectedTask.recurring}\n                onChange={(e) => handleRecurringChange(e.target.checked)}\n              />\n            </div>\n            <div className=\"modal-buttons\">\n              <button className=\"save-btn\" onClick={handleSaveEdit}>Save</button>\n              <button className=\"cancel-btn\" onClick={() => setEditModalOpen(false)}>Cancel</button>\n            </div>\n          </div>\n        </div>\n      )}\n\n      {/* Confirmation Modal */}\n      {confirmModalOpen && (\n        <div className=\"modal-overlay\">\n          <div className=\"modal-content\">\n            <div className=\"modal-header\">Confirm Action</div>\n            <div className=\"confirm-message\">{confirmMessage}</div>\n            <div className=\"modal-buttons\">\n              <button className=\"save-btn\" onClick={() => handleConfirmAction('all')}>All Instances</button>\n              <button className=\"save-btn\" onClick={() => handleConfirmAction('single')}>Just This One</button>\n              <button className=\"cancel-btn\" onClick={() => handleConfirmAction('cancel')}>Cancel</button>\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default DayDetails;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}