{"ast":null,"code":"var _jsxFileName = \"/home/tang0115/cisc490/calendar/CISC-490-Calendar/src/components/DayDetails.js\",\n  _s = $RefreshSig$();\nimport React, { useMemo, useState, useEffect } from 'react';\nimport RecurringOptionsModal from './RecurringOptionsModal';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst getLocalDateString = date => {\n  const d = new Date(date);\n  const year = d.getFullYear();\n  const month = String(d.getMonth() + 1).padStart(2, '0');\n  const day = String(d.getDate()).padStart(2, '0');\n  return `${year}-${month}-${day}`;\n};\nconst generateRecurringDates = (startDate, recurringOptions) => {\n  const dates = [];\n  const start = new Date(startDate);\n  const end = new Date(recurringOptions.endDate);\n  let currentDate = new Date(start);\n  while (currentDate <= end) {\n    if (recurringOptions.frequency === 'daily') {\n      dates.push(new Date(currentDate));\n      currentDate.setDate(currentDate.getDate() + recurringOptions.interval);\n    } else if (recurringOptions.frequency === 'weekly') {\n      if (recurringOptions.weekDays.includes(currentDate.getDay())) {\n        dates.push(new Date(currentDate));\n      }\n      currentDate.setDate(currentDate.getDate() + 1);\n      if (currentDate.getDay() === 0) {\n        currentDate.setDate(currentDate.getDate() + (recurringOptions.interval - 1) * 7);\n      }\n    } else if (recurringOptions.frequency === 'monthly') {\n      dates.push(new Date(currentDate));\n      currentDate.setMonth(currentDate.getMonth() + recurringOptions.interval);\n    } else if (recurringOptions.frequency === 'yearly') {\n      dates.push(new Date(currentDate));\n      currentDate.setFullYear(currentDate.getFullYear() + recurringOptions.interval);\n    }\n  }\n  return dates;\n};\nfunction DayDetails({\n  selectedDate,\n  setSelectedDate,\n  events,\n  setEvents\n}) {\n  _s();\n  const [newTask, setNewTask] = useState({\n    title: '',\n    description: '',\n    startTime: '',\n    endTime: '',\n    category: 'Work',\n    priority: 'Medium',\n    recurring: false\n  });\n  const [showDelete, setShowDelete] = useState(null);\n  const [recurringModalOpen, setRecurringModalOpen] = useState(false);\n  const [recurringOptions, setRecurringOptions] = useState({\n    frequency: 'daily',\n    weekDays: [],\n    endDate: '',\n    interval: 1\n  });\n  const [editModalOpen, setEditModalOpen] = useState(false);\n  const [selectedTask, setSelectedTask] = useState(null);\n  const [confirmModalOpen, setConfirmModalOpen] = useState(false);\n  const [confirmAction, setConfirmAction] = useState(null);\n  const [confirmMessage, setConfirmMessage] = useState('');\n  const [pendingTask, setPendingTask] = useState(null);\n  const [lastAction, setLastAction] = useState(null);\n  const [showUndo, setShowUndo] = useState(false);\n  const [errors, setErrors] = useState({});\n  const [showRecurringModal, setShowRecurringModal] = useState(false);\n  const [deletedTasks, setDeletedTasks] = useState([]);\n  const [showUndoNotification, setShowUndoNotification] = useState(false);\n  const categories = useMemo(() => ['Work', 'Personal', 'School'], []);\n  const priorities = ['Low', 'Medium', 'High', 'Critical'];\n  const months = useMemo(() => ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'], []);\n  const years = useMemo(() => {\n    const currentYear = new Date().getFullYear();\n    return Array.from({\n      length: 20\n    }, (_, i) => currentYear - 10 + i);\n  }, []);\n  const handleRecurringChange = checked => {\n    if (selectedTask) {\n      setSelectedTask({\n        ...selectedTask,\n        recurring: checked\n      });\n      if (checked) {\n        setRecurringModalOpen(true);\n      }\n    } else {\n      setNewTask({\n        ...newTask,\n        recurring: checked\n      });\n      if (checked) {\n        setRecurringModalOpen(true);\n      }\n    }\n  };\n  const handleRecurringOptionsSave = options => {\n    if (selectedTask) {\n      setSelectedTask({\n        ...selectedTask,\n        recurringOptions: options\n      });\n    } else {\n      setNewTask({\n        ...newTask,\n        recurringOptions: options\n      });\n    }\n  };\n  const validateTimeInputs = (startTime, endTime) => {\n    const errors = {};\n    if (!startTime) {\n      errors.startTime = 'Start time is required';\n    }\n    if (!endTime) {\n      errors.endTime = 'End time is required';\n    }\n    if (startTime && endTime) {\n      const start = new Date(`2000-01-01T${startTime}`);\n      const end = new Date(`2000-01-01T${endTime}`);\n      if (end <= start) {\n        errors.endTime = 'End time must be after start time';\n      }\n    }\n    return errors;\n  };\n  const checkForOverlappingEvents = (startTime, endTime, taskId = null) => {\n    const newStart = new Date(`2000-01-01T${startTime}`);\n    const newEnd = new Date(`2000-01-01T${endTime}`);\n    return events.some(task => {\n      if (taskId && task.taskId === taskId) return false;\n      const taskStart = new Date(`2000-01-01T${task.startTime}`);\n      const taskEnd = new Date(`2000-01-01T${task.endTime}`);\n      return newStart < taskEnd && newEnd > taskStart;\n    });\n  };\n  const handleAddTask = () => {\n    const timeErrors = validateTimeInputs(newTask.startTime, newTask.endTime);\n    if (Object.keys(timeErrors).length > 0) {\n      setErrors(timeErrors);\n      return;\n    }\n    if (checkForOverlappingEvents(newTask.startTime, newTask.endTime)) {\n      setErrors({\n        overlap: 'This event overlaps with an existing event'\n      });\n      return;\n    }\n    setErrors({});\n    const taskData = {\n      taskId: Date.now().toString(),\n      title: newTask.title,\n      description: newTask.description,\n      startTime: newTask.startTime,\n      endTime: newTask.endTime,\n      category: newTask.category,\n      priority: newTask.priority,\n      recurring: newTask.recurring,\n      recurringOptions: newTask.recurring ? newTask.recurringOptions : null,\n      metadata: {\n        createdBy: 'CurrentUser',\n        lastUpdated: new Date().toISOString()\n      },\n      date: getLocalDateString(selectedDate)\n    };\n    let tasksToAdd = [taskData];\n    if (taskData.recurring && taskData.recurringOptions) {\n      const recurringDates = generateRecurringDates(new Date(`${taskData.date}T${taskData.startTime}`), taskData.recurringOptions);\n      tasksToAdd = recurringDates.map((date, index) => ({\n        ...taskData,\n        taskId: `${taskData.taskId}-${index}`,\n        date: getLocalDateString(date),\n        startTime: date.toTimeString().slice(0, 5),\n        endTime: new Date(date.getTime() + (new Date(`1970/01/01 ${taskData.endTime}`).getTime() - new Date(`1970/01/01 ${taskData.startTime}`).getTime())).toTimeString().slice(0, 5)\n      }));\n    }\n    setLastAction({\n      type: 'add',\n      tasks: tasksToAdd,\n      previousEvents: [...events]\n    });\n    setEvents(prevEvents => [...prevEvents, ...tasksToAdd]);\n    setShowUndo(true);\n    setTimeout(() => setShowUndo(false), 5000);\n    setNewTask({\n      title: '',\n      description: '',\n      startTime: '',\n      endTime: '',\n      category: 'Work',\n      priority: 'Medium',\n      recurring: false\n    });\n  };\n  const handleUpdateTask = (taskId, updatedTask) => {\n    setEvents(prevEvents => prevEvents.map(task => task.taskId === taskId ? {\n      ...task,\n      ...updatedTask,\n      metadata: {\n        ...task.metadata,\n        lastUpdated: new Date().toISOString()\n      }\n    } : task));\n  };\n  const handleEditTask = task => {\n    setSelectedTask(task);\n    setEditModalOpen(true);\n  };\n  const handleDeleteTask = taskId => {\n    const taskToDelete = events.find(task => task.taskId === taskId);\n    if (taskToDelete) {\n      setDeletedTasks(prev => [...prev, {\n        ...taskToDelete,\n        deletedAt: new Date()\n      }]);\n      setEvents(events.filter(task => task.taskId !== taskId));\n      setShowUndoNotification(true);\n\n      // Hide undo notification after 5 seconds\n      setTimeout(() => {\n        setShowUndoNotification(false);\n      }, 5000);\n    }\n  };\n  const handleConfirmAction = action => {\n    if (confirmAction === 'edit') {\n      if (pendingTask) {\n        if (action === 'all') {\n          setSelectedTask(pendingTask);\n          setEditModalOpen(true);\n        } else if (action === 'single') {\n          setSelectedTask(pendingTask);\n          setEditModalOpen(true);\n        }\n      }\n    } else if (confirmAction === 'delete') {\n      if (pendingTask) {\n        if (action === 'all' && pendingTask.recurringOptions) {\n          // Delete all instances of the recurring event by matching the base taskId\n          const baseTaskId = pendingTask.taskId.split('-')[0];\n          setEvents(prevEvents => prevEvents.filter(task => !task.taskId.startsWith(baseTaskId)));\n        } else if (action === 'single') {\n          // Delete only this instance\n          setEvents(prevEvents => prevEvents.filter(task => task.taskId !== pendingTask.taskId));\n        }\n      }\n      setShowDelete(null);\n    }\n    setConfirmModalOpen(false);\n    setPendingTask(null);\n  };\n  const handleCancelConfirm = () => {\n    setConfirmModalOpen(false);\n    setPendingTask(null);\n  };\n  const dayTasks = useMemo(() => {\n    const filteredTasks = events.filter(task => task.date === getLocalDateString(selectedDate)).sort((a, b) => new Date(`1970/01/01 ${a.startTime}`) - new Date(`1970/01/01 ${b.startTime}`));\n    return filteredTasks;\n  }, [events, selectedDate]);\n  useEffect(() => {\n    console.log('DayDetails selectedDate:', selectedDate, 'Normalized:', getLocalDateString(selectedDate));\n    console.log('DayDetails events:', events);\n    console.log('DayDetails dayTasks:', dayTasks);\n  }, [selectedDate, events, dayTasks]);\n  const getPriorityColor = priority => {\n    switch (priority) {\n      case 'Low':\n        return '#A8CCDC';\n      case 'Medium':\n        return '#DDA853';\n      case 'High':\n        return '#164046';\n      case 'Critical':\n        return '#FF0000';\n      default:\n        return '#FFFFFF';\n    }\n  };\n  const toggleTask = taskId => {\n    const task = events.find(t => t.taskId === taskId);\n    if (task) {\n      const updatedTask = {\n        ...task,\n        completed: !task.completed,\n        metadata: {\n          ...task.metadata,\n          lastUpdated: new Date().toISOString()\n        }\n      };\n      handleUpdateTask(taskId, updatedTask);\n    }\n  };\n  const handlePreviousDay = () => {\n    const prevDate = new Date(selectedDate);\n    prevDate.setDate(prevDate.getDate() - 1);\n    setSelectedDate(prevDate);\n  };\n  const handleNextDay = () => {\n    const nextDate = new Date(selectedDate);\n    nextDate.setDate(nextDate.getDate() + 1);\n    setSelectedDate(nextDate);\n  };\n  const handleToday = () => {\n    setSelectedDate(new Date());\n  };\n  const handleDateChange = (year, month, day) => {\n    const newDate = new Date(year, month, day);\n    if (!isNaN(newDate.getTime())) {\n      setSelectedDate(newDate);\n    }\n  };\n  const handleInputChange = (field, value) => {\n    setNewTask(prev => ({\n      ...prev,\n      [field]: value\n    }));\n  };\n  const formatTime12Hour = time => {\n    const [hours, minutes] = time.split(':').map(Number);\n    const period = hours >= 12 ? 'PM' : 'AM';\n    const adjustedHours = hours % 12 || 12;\n    return `${adjustedHours}:${minutes.toString().padStart(2, '0')} ${period}`;\n  };\n  const handleSaveEdit = () => {\n    if (selectedTask) {\n      const updatedTask = {\n        ...selectedTask,\n        metadata: {\n          ...selectedTask.metadata,\n          lastUpdated: new Date().toISOString()\n        }\n      };\n      handleUpdateTask(selectedTask.taskId, updatedTask);\n      setEditModalOpen(false);\n      setSelectedTask(null);\n    }\n  };\n  const handleUndo = () => {\n    if (lastAction) {\n      setEvents(lastAction.previousEvents);\n      setLastAction(null);\n      setShowUndo(false);\n    }\n  };\n  const handleUndoDelete = () => {\n    if (deletedTasks.length > 0) {\n      const lastDeletedTask = deletedTasks[deletedTasks.length - 1];\n      setEvents(prev => [...prev, lastDeletedTask]);\n      setDeletedTasks(prev => prev.slice(0, -1));\n      setShowUndoNotification(false);\n    }\n  };\n  const isTaskOverdue = task => {\n    const now = new Date();\n    const taskDate = new Date(task.date);\n    const taskEndTime = new Date(`${task.date}T${task.endTime}`);\n\n    // Check if task date is today and end time has passed\n    if (taskDate.toDateString() === now.toDateString() && taskEndTime < now) {\n      return true;\n    }\n\n    // Check if task date is in the past\n    if (taskDate < now && taskDate.toDateString() !== now.toDateString()) {\n      return true;\n    }\n    return false;\n  };\n  const getTaskStatusClass = task => {\n    if (isTaskOverdue(task)) {\n      return 'task-overdue';\n    }\n    return '';\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"day-details\",\n    children: [showUndo && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"undo-notification\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: [\"Task \", (lastAction === null || lastAction === void 0 ? void 0 : lastAction.type) === 'add' ? 'added' : 'deleted']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 384,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleUndo,\n        children: \"Undo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 385,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 383,\n      columnNumber: 9\n    }, this), showUndoNotification && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"undo-notification\",\n      role: \"alert\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"Task deleted\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 390,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleUndoDelete,\n        \"aria-label\": \"Undo delete\",\n        className: \"undo-button\",\n        children: \"Undo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 391,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 389,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Details for \", selectedDate.toLocaleDateString('en-US', {\n        weekday: 'long',\n        month: 'long',\n        day: 'numeric'\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 400,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"date-navigation\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handlePreviousDay,\n        children: \"Previous Day\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 402,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleToday,\n        children: \"Today\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 403,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleNextDay,\n        children: \"Next Day\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 404,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"date-selector\",\n        children: [/*#__PURE__*/_jsxDEV(\"select\", {\n          value: selectedDate.getFullYear(),\n          onChange: e => handleDateChange(parseInt(e.target.value), selectedDate.getMonth(), selectedDate.getDate()),\n          children: years.map(year => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: year,\n            children: year\n          }, year, false, {\n            fileName: _jsxFileName,\n            lineNumber: 411,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 406,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          value: selectedDate.getMonth(),\n          onChange: e => handleDateChange(selectedDate.getFullYear(), parseInt(e.target.value), selectedDate.getDate()),\n          children: months.map((month, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: index,\n            children: month\n          }, month, false, {\n            fileName: _jsxFileName,\n            lineNumber: 419,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 414,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          value: selectedDate.getDate(),\n          onChange: e => handleDateChange(selectedDate.getFullYear(), selectedDate.getMonth(), parseInt(e.target.value)),\n          children: Array.from({\n            length: new Date(selectedDate.getFullYear(), selectedDate.getMonth() + 1, 0).getDate()\n          }, (_, i) => i + 1).map(day => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: day,\n            children: day\n          }, day, false, {\n            fileName: _jsxFileName,\n            lineNumber: 427,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 422,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 405,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 401,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"details-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"timeline-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Today's Timeline\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 434,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"timeline\",\n          children: dayTasks.map(task => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `timeline-item ${getTaskStatusClass(task)}`,\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"task-content\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"task-title\",\n                children: [task.title, task.recurring && /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"recurring-badge\",\n                  children: \"\\uD83D\\uDD04\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 441,\n                  columnNumber: 40\n                }, this), isTaskOverdue(task) && /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"overdue-indicator\",\n                  \"aria-label\": \"Overdue task\",\n                  children: \"\\u26A0\\uFE0F\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 443,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 439,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"task-time\",\n                children: [formatTime12Hour(task.startTime), \" - \", formatTime12Hour(task.endTime)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 448,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"task-category\",\n                children: task.category\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 451,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"task-priority\",\n                children: [\"Priority: \", task.priority]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 454,\n                columnNumber: 19\n              }, this), task.description && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"task-description\",\n                children: task.description\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 458,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 438,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"task-actions\",\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"edit-button\",\n                onClick: () => handleEditTask(task),\n                \"aria-label\": \"Edit task\",\n                children: \"Edit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 464,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"delete-button\",\n                onClick: () => handleDeleteTask(task.taskId),\n                \"aria-label\": \"Delete task\",\n                children: \"Delete\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 471,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 463,\n              columnNumber: 17\n            }, this)]\n          }, task.taskId, true, {\n            fileName: _jsxFileName,\n            lineNumber: 437,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 435,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 433,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"right-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Add Task\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 484,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"schedule-section\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"task-input-complex\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"input-row\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"Task Category:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 488,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                value: newTask.category,\n                onChange: e => handleInputChange('category', e.target.value),\n                children: categories.map(cat => /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: cat,\n                  children: cat\n                }, cat, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 491,\n                  columnNumber: 21\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 489,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 487,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"input-row\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"task-title\",\n                children: \"Task Title:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 496,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                id: \"task-title\",\n                type: \"text\",\n                value: newTask.title,\n                onChange: e => handleInputChange('title', e.target.value),\n                placeholder: \"Enter task title\",\n                \"aria-invalid\": errors.title ? 'true' : 'false',\n                \"aria-describedby\": errors.title ? 'title-error' : undefined\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 497,\n                columnNumber: 17\n              }, this), errors.title && /*#__PURE__*/_jsxDEV(\"span\", {\n                id: \"title-error\",\n                className: \"error-message\",\n                children: errors.title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 506,\n                columnNumber: 34\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 495,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"input-row\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"Task Description:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 509,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                value: newTask.description,\n                onChange: e => handleInputChange('description', e.target.value),\n                placeholder: \"Enter Task Description...\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 510,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 508,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"input-row\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"start-time\",\n                children: \"Starting Time:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 518,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                id: \"start-time\",\n                type: \"time\",\n                value: newTask.startTime,\n                onChange: e => handleInputChange('startTime', e.target.value),\n                \"aria-invalid\": errors.startTime ? 'true' : 'false',\n                \"aria-describedby\": errors.startTime ? 'start-time-error' : undefined\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 519,\n                columnNumber: 17\n              }, this), errors.startTime && /*#__PURE__*/_jsxDEV(\"span\", {\n                id: \"start-time-error\",\n                className: \"error-message\",\n                children: errors.startTime\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 527,\n                columnNumber: 38\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 517,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"input-row\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"end-time\",\n                children: \"Ending Time:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 530,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                id: \"end-time\",\n                type: \"time\",\n                value: newTask.endTime,\n                onChange: e => handleInputChange('endTime', e.target.value),\n                \"aria-invalid\": errors.endTime ? 'true' : 'false',\n                \"aria-describedby\": errors.endTime ? 'end-time-error' : undefined\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 531,\n                columnNumber: 17\n              }, this), errors.endTime && /*#__PURE__*/_jsxDEV(\"span\", {\n                id: \"end-time-error\",\n                className: \"error-message\",\n                children: errors.endTime\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 539,\n                columnNumber: 36\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 529,\n              columnNumber: 15\n            }, this), errors.overlap && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"overlap-warning-popup\",\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                children: \"Schedule Conflict\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 543,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: errors.overlap\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 544,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"close-button\",\n                onClick: () => setErrors({}),\n                children: \"Close\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 545,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 542,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"input-row\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"Priority:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 551,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                value: newTask.priority,\n                onChange: e => handleInputChange('priority', e.target.value),\n                children: priorities.map(p => /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: p,\n                  children: [p, \" Priority\"]\n                }, p, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 554,\n                  columnNumber: 21\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 552,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 550,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"input-row\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"Recurring Task:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 559,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"checkbox\",\n                checked: newTask.recurring,\n                onChange: e => handleRecurringChange(e.target.checked)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 560,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 558,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"input-row\",\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: handleAddTask,\n                children: \"Add\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 567,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 566,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 486,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 485,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 483,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 432,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(RecurringOptionsModal, {\n      isOpen: recurringModalOpen,\n      onClose: () => setRecurringModalOpen(false),\n      onSave: handleRecurringOptionsSave,\n      recurringOptions: recurringOptions,\n      setRecurringOptions: setRecurringOptions\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 574,\n      columnNumber: 7\n    }, this), editModalOpen && selectedTask && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal-overlay\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-header\",\n          children: \"Edit Task\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 586,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-row\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Title:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 588,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: selectedTask.title,\n            onChange: e => setSelectedTask({\n              ...selectedTask,\n              title: e.target.value\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 589,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 587,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-row\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Description:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 596,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: selectedTask.description,\n            onChange: e => setSelectedTask({\n              ...selectedTask,\n              description: e.target.value\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 597,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 595,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-row\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Start Time:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 604,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"time\",\n            value: selectedTask.startTime,\n            onChange: e => setSelectedTask({\n              ...selectedTask,\n              startTime: e.target.value\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 605,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 603,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-row\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"End Time:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 612,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"time\",\n            value: selectedTask.endTime,\n            onChange: e => setSelectedTask({\n              ...selectedTask,\n              endTime: e.target.value\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 613,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 611,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-row\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Category:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 620,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            value: selectedTask.category,\n            onChange: e => setSelectedTask({\n              ...selectedTask,\n              category: e.target.value\n            }),\n            children: categories.map(cat => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: cat,\n              children: cat\n            }, cat, false, {\n              fileName: _jsxFileName,\n              lineNumber: 626,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 621,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 619,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-row\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Priority:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 631,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            value: selectedTask.priority,\n            onChange: e => setSelectedTask({\n              ...selectedTask,\n              priority: e.target.value\n            }),\n            children: priorities.map(p => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: p,\n              children: p\n            }, p, false, {\n              fileName: _jsxFileName,\n              lineNumber: 637,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 632,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 630,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-row\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Recurring:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 642,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            checked: selectedTask.recurring,\n            onChange: e => handleRecurringChange(e.target.checked)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 643,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 641,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-buttons\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"save-btn\",\n            onClick: handleSaveEdit,\n            children: \"Save\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 650,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"cancel-btn\",\n            onClick: () => setEditModalOpen(false),\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 651,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 649,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 585,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 584,\n      columnNumber: 9\n    }, this), confirmModalOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal-overlay\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-header\",\n          children: \"Confirm Action\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 661,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"confirm-message\",\n          children: confirmMessage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 662,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-buttons\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"save-btn\",\n            onClick: () => handleConfirmAction('all'),\n            children: \"All Instances\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 664,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"save-btn\",\n            onClick: () => handleConfirmAction('single'),\n            children: \"Just This One\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 665,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"cancel-btn\",\n            onClick: () => handleConfirmAction('cancel'),\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 666,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 663,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 660,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 659,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 381,\n    columnNumber: 5\n  }, this);\n}\n_s(DayDetails, \"cGfQL0kX9lY6hCMGZ1RvtAQshr0=\");\n_c = DayDetails;\nexport default DayDetails;\nvar _c;\n$RefreshReg$(_c, \"DayDetails\");","map":{"version":3,"names":["React","useMemo","useState","useEffect","RecurringOptionsModal","jsxDEV","_jsxDEV","getLocalDateString","date","d","Date","year","getFullYear","month","String","getMonth","padStart","day","getDate","generateRecurringDates","startDate","recurringOptions","dates","start","end","endDate","currentDate","frequency","push","setDate","interval","weekDays","includes","getDay","setMonth","setFullYear","DayDetails","selectedDate","setSelectedDate","events","setEvents","_s","newTask","setNewTask","title","description","startTime","endTime","category","priority","recurring","showDelete","setShowDelete","recurringModalOpen","setRecurringModalOpen","setRecurringOptions","editModalOpen","setEditModalOpen","selectedTask","setSelectedTask","confirmModalOpen","setConfirmModalOpen","confirmAction","setConfirmAction","confirmMessage","setConfirmMessage","pendingTask","setPendingTask","lastAction","setLastAction","showUndo","setShowUndo","errors","setErrors","showRecurringModal","setShowRecurringModal","deletedTasks","setDeletedTasks","showUndoNotification","setShowUndoNotification","categories","priorities","months","years","currentYear","Array","from","length","_","i","handleRecurringChange","checked","handleRecurringOptionsSave","options","validateTimeInputs","checkForOverlappingEvents","taskId","newStart","newEnd","some","task","taskStart","taskEnd","handleAddTask","timeErrors","Object","keys","overlap","taskData","now","toString","metadata","createdBy","lastUpdated","toISOString","tasksToAdd","recurringDates","map","index","toTimeString","slice","getTime","type","tasks","previousEvents","prevEvents","setTimeout","handleUpdateTask","updatedTask","handleEditTask","handleDeleteTask","taskToDelete","find","prev","deletedAt","filter","handleConfirmAction","action","baseTaskId","split","startsWith","handleCancelConfirm","dayTasks","filteredTasks","sort","a","b","console","log","getPriorityColor","toggleTask","t","completed","handlePreviousDay","prevDate","handleNextDay","nextDate","handleToday","handleDateChange","newDate","isNaN","handleInputChange","field","value","formatTime12Hour","time","hours","minutes","Number","period","adjustedHours","handleSaveEdit","handleUndo","handleUndoDelete","lastDeletedTask","isTaskOverdue","taskDate","taskEndTime","toDateString","getTaskStatusClass","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","role","toLocaleDateString","weekday","onChange","e","parseInt","target","cat","htmlFor","id","placeholder","undefined","p","isOpen","onClose","onSave","_c","$RefreshReg$"],"sources":["/home/tang0115/cisc490/calendar/CISC-490-Calendar/src/components/DayDetails.js"],"sourcesContent":["import React, { useMemo, useState, useEffect } from 'react';\nimport RecurringOptionsModal from './RecurringOptionsModal';\n\nconst getLocalDateString = (date) => {\n  const d = new Date(date);\n  const year = d.getFullYear();\n  const month = String(d.getMonth() + 1).padStart(2, '0');\n  const day = String(d.getDate()).padStart(2, '0');\n  return `${year}-${month}-${day}`;\n};\n\nconst generateRecurringDates = (startDate, recurringOptions) => {\n  const dates = [];\n  const start = new Date(startDate);\n  const end = new Date(recurringOptions.endDate);\n  let currentDate = new Date(start);\n\n  while (currentDate <= end) {\n    if (recurringOptions.frequency === 'daily') {\n      dates.push(new Date(currentDate));\n      currentDate.setDate(currentDate.getDate() + recurringOptions.interval);\n    } else if (recurringOptions.frequency === 'weekly') {\n      if (recurringOptions.weekDays.includes(currentDate.getDay())) {\n        dates.push(new Date(currentDate));\n      }\n      currentDate.setDate(currentDate.getDate() + 1);\n      if (currentDate.getDay() === 0) {\n        currentDate.setDate(currentDate.getDate() + (recurringOptions.interval - 1) * 7);\n      }\n    } else if (recurringOptions.frequency === 'monthly') {\n      dates.push(new Date(currentDate));\n      currentDate.setMonth(currentDate.getMonth() + recurringOptions.interval);\n    } else if (recurringOptions.frequency === 'yearly') {\n      dates.push(new Date(currentDate));\n      currentDate.setFullYear(currentDate.getFullYear() + recurringOptions.interval);\n    }\n  }\n\n  return dates;\n};\n\nfunction DayDetails({ selectedDate, setSelectedDate, events, setEvents }) {\n  const [newTask, setNewTask] = useState({\n    title: '',\n    description: '',\n    startTime: '',\n    endTime: '',\n    category: 'Work',\n    priority: 'Medium',\n    recurring: false,\n  });\n  const [showDelete, setShowDelete] = useState(null);\n  const [recurringModalOpen, setRecurringModalOpen] = useState(false);\n  const [recurringOptions, setRecurringOptions] = useState({\n    frequency: 'daily',\n    weekDays: [],\n    endDate: '',\n    interval: 1\n  });\n  const [editModalOpen, setEditModalOpen] = useState(false);\n  const [selectedTask, setSelectedTask] = useState(null);\n  const [confirmModalOpen, setConfirmModalOpen] = useState(false);\n  const [confirmAction, setConfirmAction] = useState(null);\n  const [confirmMessage, setConfirmMessage] = useState('');\n  const [pendingTask, setPendingTask] = useState(null);\n  const [lastAction, setLastAction] = useState(null);\n  const [showUndo, setShowUndo] = useState(false);\n  const [errors, setErrors] = useState({});\n  const [showRecurringModal, setShowRecurringModal] = useState(false);\n  const [deletedTasks, setDeletedTasks] = useState([]);\n  const [showUndoNotification, setShowUndoNotification] = useState(false);\n\n  const categories = useMemo(() => ['Work', 'Personal', 'School'], []);\n  const priorities = ['Low', 'Medium', 'High', 'Critical'];\n\n  const months = useMemo(() => [\n    'January', 'February', 'March', 'April', 'May', 'June',\n    'July', 'August', 'September', 'October', 'November', 'December'\n  ], []);\n\n  const years = useMemo(() => {\n    const currentYear = new Date().getFullYear();\n    return Array.from({ length: 20 }, (_, i) => currentYear - 10 + i);\n  }, []);\n\n  const handleRecurringChange = (checked) => {\n    if (selectedTask) {\n      setSelectedTask({ ...selectedTask, recurring: checked });\n      if (checked) {\n        setRecurringModalOpen(true);\n      }\n    } else {\n      setNewTask({ ...newTask, recurring: checked });\n      if (checked) {\n        setRecurringModalOpen(true);\n      }\n    }\n  };\n\n  const handleRecurringOptionsSave = (options) => {\n    if (selectedTask) {\n      setSelectedTask({ ...selectedTask, recurringOptions: options });\n    } else {\n      setNewTask({ ...newTask, recurringOptions: options });\n    }\n  };\n\n  const validateTimeInputs = (startTime, endTime) => {\n    const errors = {};\n    if (!startTime) {\n      errors.startTime = 'Start time is required';\n    }\n    if (!endTime) {\n      errors.endTime = 'End time is required';\n    }\n    if (startTime && endTime) {\n      const start = new Date(`2000-01-01T${startTime}`);\n      const end = new Date(`2000-01-01T${endTime}`);\n      if (end <= start) {\n        errors.endTime = 'End time must be after start time';\n      }\n    }\n    return errors;\n  };\n\n  const checkForOverlappingEvents = (startTime, endTime, taskId = null) => {\n    const newStart = new Date(`2000-01-01T${startTime}`);\n    const newEnd = new Date(`2000-01-01T${endTime}`);\n    \n    return events.some(task => {\n      if (taskId && task.taskId === taskId) return false;\n      const taskStart = new Date(`2000-01-01T${task.startTime}`);\n      const taskEnd = new Date(`2000-01-01T${task.endTime}`);\n      return (newStart < taskEnd && newEnd > taskStart);\n    });\n  };\n\n  const handleAddTask = () => {\n    const timeErrors = validateTimeInputs(newTask.startTime, newTask.endTime);\n    if (Object.keys(timeErrors).length > 0) {\n      setErrors(timeErrors);\n      return;\n    }\n\n    if (checkForOverlappingEvents(newTask.startTime, newTask.endTime)) {\n      setErrors({ overlap: 'This event overlaps with an existing event' });\n      return;\n    }\n\n    setErrors({});\n    const taskData = {\n      taskId: Date.now().toString(),\n      title: newTask.title,\n      description: newTask.description,\n      startTime: newTask.startTime,\n      endTime: newTask.endTime,\n      category: newTask.category,\n      priority: newTask.priority,\n      recurring: newTask.recurring,\n      recurringOptions: newTask.recurring ? newTask.recurringOptions : null,\n      metadata: { createdBy: 'CurrentUser', lastUpdated: new Date().toISOString() },\n      date: getLocalDateString(selectedDate),\n    };\n\n    let tasksToAdd = [taskData];\n\n    if (taskData.recurring && taskData.recurringOptions) {\n      const recurringDates = generateRecurringDates(\n        new Date(`${taskData.date}T${taskData.startTime}`),\n        taskData.recurringOptions\n      );\n\n      tasksToAdd = recurringDates.map((date, index) => ({\n        ...taskData,\n        taskId: `${taskData.taskId}-${index}`,\n        date: getLocalDateString(date),\n        startTime: date.toTimeString().slice(0, 5),\n        endTime: new Date(date.getTime() + (new Date(`1970/01/01 ${taskData.endTime}`).getTime() - new Date(`1970/01/01 ${taskData.startTime}`).getTime())).toTimeString().slice(0, 5),\n      }));\n    }\n\n    setLastAction({\n      type: 'add',\n      tasks: tasksToAdd,\n      previousEvents: [...events]\n    });\n    setEvents(prevEvents => [...prevEvents, ...tasksToAdd]);\n    setShowUndo(true);\n    setTimeout(() => setShowUndo(false), 5000);\n\n    setNewTask({\n      title: '',\n      description: '',\n      startTime: '',\n      endTime: '',\n      category: 'Work',\n      priority: 'Medium',\n      recurring: false,\n    });\n  };\n\n  const handleUpdateTask = (taskId, updatedTask) => {\n    setEvents(prevEvents =>\n      prevEvents.map(task =>\n        task.taskId === taskId ? { ...task, ...updatedTask, metadata: { ...task.metadata, lastUpdated: new Date().toISOString() } } : task\n      )\n    );\n  };\n\n  const handleEditTask = (task) => {\n    setSelectedTask(task);\n    setEditModalOpen(true);\n  };\n\n  const handleDeleteTask = (taskId) => {\n    const taskToDelete = events.find(task => task.taskId === taskId);\n    if (taskToDelete) {\n      setDeletedTasks(prev => [...prev, { ...taskToDelete, deletedAt: new Date() }]);\n      setEvents(events.filter(task => task.taskId !== taskId));\n      setShowUndoNotification(true);\n      \n      // Hide undo notification after 5 seconds\n      setTimeout(() => {\n        setShowUndoNotification(false);\n      }, 5000);\n    }\n  };\n\n  const handleConfirmAction = (action) => {\n    if (confirmAction === 'edit') {\n      if (pendingTask) {\n        if (action === 'all') {\n          setSelectedTask(pendingTask);\n          setEditModalOpen(true);\n        } else if (action === 'single') {\n          setSelectedTask(pendingTask);\n          setEditModalOpen(true);\n        }\n      }\n    } else if (confirmAction === 'delete') {\n      if (pendingTask) {\n        if (action === 'all' && pendingTask.recurringOptions) {\n          // Delete all instances of the recurring event by matching the base taskId\n          const baseTaskId = pendingTask.taskId.split('-')[0];\n          setEvents(prevEvents => prevEvents.filter(task => !task.taskId.startsWith(baseTaskId)));\n        } else if (action === 'single') {\n          // Delete only this instance\n          setEvents(prevEvents => prevEvents.filter(task => task.taskId !== pendingTask.taskId));\n        }\n      }\n      setShowDelete(null);\n    }\n    setConfirmModalOpen(false);\n    setPendingTask(null);\n  };\n\n  const handleCancelConfirm = () => {\n    setConfirmModalOpen(false);\n    setPendingTask(null);\n  };\n\n  const dayTasks = useMemo(() => {\n    const filteredTasks = events.filter(task => task.date === getLocalDateString(selectedDate))\n      .sort((a, b) => new Date(`1970/01/01 ${a.startTime}`) - new Date(`1970/01/01 ${b.startTime}`));\n    return filteredTasks;\n  }, [events, selectedDate]);\n\n  useEffect(() => {\n    console.log('DayDetails selectedDate:', selectedDate, 'Normalized:', getLocalDateString(selectedDate));\n    console.log('DayDetails events:', events);\n    console.log('DayDetails dayTasks:', dayTasks);\n  }, [selectedDate, events, dayTasks]);\n\n  const getPriorityColor = (priority) => {\n    switch (priority) {\n      case 'Low': return '#A8CCDC';\n      case 'Medium': return '#DDA853';\n      case 'High': return '#164046';\n      case 'Critical': return '#FF0000';\n      default: return '#FFFFFF';\n    }\n  };\n\n  const toggleTask = (taskId) => {\n    const task = events.find(t => t.taskId === taskId);\n    if (task) {\n      const updatedTask = { ...task, completed: !task.completed, metadata: { ...task.metadata, lastUpdated: new Date().toISOString() } };\n      handleUpdateTask(taskId, updatedTask);\n    }\n  };\n\n  const handlePreviousDay = () => {\n    const prevDate = new Date(selectedDate);\n    prevDate.setDate(prevDate.getDate() - 1);\n    setSelectedDate(prevDate);\n  };\n\n  const handleNextDay = () => {\n    const nextDate = new Date(selectedDate);\n    nextDate.setDate(nextDate.getDate() + 1);\n    setSelectedDate(nextDate);\n  };\n\n  const handleToday = () => {\n    setSelectedDate(new Date());\n  };\n\n  const handleDateChange = (year, month, day) => {\n    const newDate = new Date(year, month, day);\n    if (!isNaN(newDate.getTime())) {\n      setSelectedDate(newDate);\n    }\n  };\n\n  const handleInputChange = (field, value) => {\n    setNewTask(prev => ({ ...prev, [field]: value }));\n  };\n\n  const formatTime12Hour = (time) => {\n    const [hours, minutes] = time.split(':').map(Number);\n    const period = hours >= 12 ? 'PM' : 'AM';\n    const adjustedHours = hours % 12 || 12;\n    return `${adjustedHours}:${minutes.toString().padStart(2, '0')} ${period}`;\n  };\n\n  const handleSaveEdit = () => {\n    if (selectedTask) {\n      const updatedTask = {\n        ...selectedTask,\n        metadata: { ...selectedTask.metadata, lastUpdated: new Date().toISOString() },\n      };\n      handleUpdateTask(selectedTask.taskId, updatedTask);\n      setEditModalOpen(false);\n      setSelectedTask(null);\n    }\n  };\n\n  const handleUndo = () => {\n    if (lastAction) {\n      setEvents(lastAction.previousEvents);\n      setLastAction(null);\n      setShowUndo(false);\n    }\n  };\n\n  const handleUndoDelete = () => {\n    if (deletedTasks.length > 0) {\n      const lastDeletedTask = deletedTasks[deletedTasks.length - 1];\n      setEvents(prev => [...prev, lastDeletedTask]);\n      setDeletedTasks(prev => prev.slice(0, -1));\n      setShowUndoNotification(false);\n    }\n  };\n\n  const isTaskOverdue = (task) => {\n    const now = new Date();\n    const taskDate = new Date(task.date);\n    const taskEndTime = new Date(`${task.date}T${task.endTime}`);\n    \n    // Check if task date is today and end time has passed\n    if (taskDate.toDateString() === now.toDateString() && taskEndTime < now) {\n      return true;\n    }\n    \n    // Check if task date is in the past\n    if (taskDate < now && taskDate.toDateString() !== now.toDateString()) {\n      return true;\n    }\n    \n    return false;\n  };\n\n  const getTaskStatusClass = (task) => {\n    if (isTaskOverdue(task)) {\n      return 'task-overdue';\n    }\n    return '';\n  };\n\n  return (\n    <div className=\"day-details\">\n      {showUndo && (\n        <div className=\"undo-notification\">\n          <span>Task {lastAction?.type === 'add' ? 'added' : 'deleted'}</span>\n          <button onClick={handleUndo}>Undo</button>\n        </div>\n      )}\n      {showUndoNotification && (\n        <div className=\"undo-notification\" role=\"alert\">\n          <span>Task deleted</span>\n          <button \n            onClick={handleUndoDelete}\n            aria-label=\"Undo delete\"\n            className=\"undo-button\"\n          >\n            Undo\n          </button>\n        </div>\n      )}\n      <h2>Details for {selectedDate.toLocaleDateString('en-US', { weekday: 'long', month: 'long', day: 'numeric' })}</h2>\n      <div className=\"date-navigation\">\n        <button onClick={handlePreviousDay}>Previous Day</button>\n        <button onClick={handleToday}>Today</button>\n        <button onClick={handleNextDay}>Next Day</button>\n        <div className=\"date-selector\">\n          <select\n            value={selectedDate.getFullYear()}\n            onChange={(e) => handleDateChange(parseInt(e.target.value), selectedDate.getMonth(), selectedDate.getDate())}\n          >\n            {years.map(year => (\n              <option key={year} value={year}>{year}</option>\n            ))}\n          </select>\n          <select\n            value={selectedDate.getMonth()}\n            onChange={(e) => handleDateChange(selectedDate.getFullYear(), parseInt(e.target.value), selectedDate.getDate())}\n          >\n            {months.map((month, index) => (\n              <option key={month} value={index}>{month}</option>\n            ))}\n          </select>\n          <select\n            value={selectedDate.getDate()}\n            onChange={(e) => handleDateChange(selectedDate.getFullYear(), selectedDate.getMonth(), parseInt(e.target.value))}\n          >\n            {Array.from({ length: new Date(selectedDate.getFullYear(), selectedDate.getMonth() + 1, 0).getDate() }, (_, i) => i + 1).map(day => (\n              <option key={day} value={day}>{day}</option>\n            ))}\n          </select>\n        </div>\n      </div>\n      <div className=\"details-content\">\n        <div className=\"timeline-section\">\n          <h3>Today's Timeline</h3>\n          <div className=\"timeline\">\n            {dayTasks.map((task) => (\n              <div key={task.taskId} className={`timeline-item ${getTaskStatusClass(task)}`}>\n                <div className=\"task-content\">\n                  <div className=\"task-title\">\n                    {task.title}\n                    {task.recurring && <span className=\"recurring-badge\">🔄</span>}\n                    {isTaskOverdue(task) && (\n                      <span className=\"overdue-indicator\" aria-label=\"Overdue task\">\n                        ⚠️\n                      </span>\n                    )}\n                  </div>\n                  <div className=\"task-time\">\n                    {formatTime12Hour(task.startTime)} - {formatTime12Hour(task.endTime)}\n                  </div>\n                  <div className=\"task-category\">\n                    {task.category}\n                  </div>\n                  <div className=\"task-priority\">\n                    Priority: {task.priority}\n                  </div>\n                  {task.description && (\n                    <div className=\"task-description\">\n                      {task.description}\n                    </div>\n                  )}\n                </div>\n                <div className=\"task-actions\">\n                  <button \n                    className=\"edit-button\" \n                    onClick={() => handleEditTask(task)}\n                    aria-label=\"Edit task\"\n                  >\n                    Edit\n                  </button>\n                  <button \n                    className=\"delete-button\" \n                    onClick={() => handleDeleteTask(task.taskId)}\n                    aria-label=\"Delete task\"\n                  >\n                    Delete\n                  </button>\n                </div>\n              </div>\n            ))}\n          </div>\n        </div>\n        <div className=\"right-section\">\n          <h3>Add Task</h3>\n          <div className=\"schedule-section\">\n            <div className=\"task-input-complex\">\n              <div className=\"input-row\">\n                <label>Task Category:</label>\n                <select value={newTask.category} onChange={(e) => handleInputChange('category', e.target.value)}>\n                  {categories.map(cat => (\n                    <option key={cat} value={cat}>{cat}</option>\n                  ))}\n                </select>\n              </div>\n              <div className=\"input-row\">\n                <label htmlFor=\"task-title\">Task Title:</label>\n                <input\n                  id=\"task-title\"\n                  type=\"text\"\n                  value={newTask.title}\n                  onChange={(e) => handleInputChange('title', e.target.value)}\n                  placeholder=\"Enter task title\"\n                  aria-invalid={errors.title ? 'true' : 'false'}\n                  aria-describedby={errors.title ? 'title-error' : undefined}\n                />\n                {errors.title && <span id=\"title-error\" className=\"error-message\">{errors.title}</span>}\n              </div>\n              <div className=\"input-row\">\n                <label>Task Description:</label>\n                <input\n                  type=\"text\"\n                  value={newTask.description}\n                  onChange={(e) => handleInputChange('description', e.target.value)}\n                  placeholder=\"Enter Task Description...\"\n                />\n              </div>\n              <div className=\"input-row\">\n                <label htmlFor=\"start-time\">Starting Time:</label>\n                <input\n                  id=\"start-time\"\n                  type=\"time\"\n                  value={newTask.startTime}\n                  onChange={(e) => handleInputChange('startTime', e.target.value)}\n                  aria-invalid={errors.startTime ? 'true' : 'false'}\n                  aria-describedby={errors.startTime ? 'start-time-error' : undefined}\n                />\n                {errors.startTime && <span id=\"start-time-error\" className=\"error-message\">{errors.startTime}</span>}\n              </div>\n              <div className=\"input-row\">\n                <label htmlFor=\"end-time\">Ending Time:</label>\n                <input\n                  id=\"end-time\"\n                  type=\"time\"\n                  value={newTask.endTime}\n                  onChange={(e) => handleInputChange('endTime', e.target.value)}\n                  aria-invalid={errors.endTime ? 'true' : 'false'}\n                  aria-describedby={errors.endTime ? 'end-time-error' : undefined}\n                />\n                {errors.endTime && <span id=\"end-time-error\" className=\"error-message\">{errors.endTime}</span>}\n              </div>\n              {errors.overlap && (\n                <div className=\"overlap-warning-popup\">\n                  <h3>Schedule Conflict</h3>\n                  <p>{errors.overlap}</p>\n                  <button className=\"close-button\" onClick={() => setErrors({})}>\n                    Close\n                  </button>\n                </div>\n              )}\n              <div className=\"input-row\">\n                <label>Priority:</label>\n                <select value={newTask.priority} onChange={(e) => handleInputChange('priority', e.target.value)}>\n                  {priorities.map(p => (\n                    <option key={p} value={p}>{p} Priority</option>\n                  ))}\n                </select>\n              </div>\n              <div className=\"input-row\">\n                <label>Recurring Task:</label>\n                <input\n                  type=\"checkbox\"\n                  checked={newTask.recurring}\n                  onChange={(e) => handleRecurringChange(e.target.checked)}\n                />\n              </div>\n              <div className=\"input-row\">\n                <button onClick={handleAddTask}>Add</button>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <RecurringOptionsModal\n        isOpen={recurringModalOpen}\n        onClose={() => setRecurringModalOpen(false)}\n        onSave={handleRecurringOptionsSave}\n        recurringOptions={recurringOptions}\n        setRecurringOptions={setRecurringOptions}\n      />\n\n      {/* Edit Task Modal */}\n      {editModalOpen && selectedTask && (\n        <div className=\"modal-overlay\">\n          <div className=\"modal-content\">\n            <div className=\"modal-header\">Edit Task</div>\n            <div className=\"input-row\">\n              <label>Title:</label>\n              <input\n                type=\"text\"\n                value={selectedTask.title}\n                onChange={(e) => setSelectedTask({ ...selectedTask, title: e.target.value })}\n              />\n            </div>\n            <div className=\"input-row\">\n              <label>Description:</label>\n              <input\n                type=\"text\"\n                value={selectedTask.description}\n                onChange={(e) => setSelectedTask({ ...selectedTask, description: e.target.value })}\n              />\n            </div>\n            <div className=\"input-row\">\n              <label>Start Time:</label>\n              <input\n                type=\"time\"\n                value={selectedTask.startTime}\n                onChange={(e) => setSelectedTask({ ...selectedTask, startTime: e.target.value })}\n              />\n            </div>\n            <div className=\"input-row\">\n              <label>End Time:</label>\n              <input\n                type=\"time\"\n                value={selectedTask.endTime}\n                onChange={(e) => setSelectedTask({ ...selectedTask, endTime: e.target.value })}\n              />\n            </div>\n            <div className=\"input-row\">\n              <label>Category:</label>\n              <select\n                value={selectedTask.category}\n                onChange={(e) => setSelectedTask({ ...selectedTask, category: e.target.value })}\n              >\n                {categories.map(cat => (\n                  <option key={cat} value={cat}>{cat}</option>\n                ))}\n              </select>\n            </div>\n            <div className=\"input-row\">\n              <label>Priority:</label>\n              <select\n                value={selectedTask.priority}\n                onChange={(e) => setSelectedTask({ ...selectedTask, priority: e.target.value })}\n              >\n                {priorities.map(p => (\n                  <option key={p} value={p}>{p}</option>\n                ))}\n              </select>\n            </div>\n            <div className=\"input-row\">\n              <label>Recurring:</label>\n              <input\n                type=\"checkbox\"\n                checked={selectedTask.recurring}\n                onChange={(e) => handleRecurringChange(e.target.checked)}\n              />\n            </div>\n            <div className=\"modal-buttons\">\n              <button className=\"save-btn\" onClick={handleSaveEdit}>Save</button>\n              <button className=\"cancel-btn\" onClick={() => setEditModalOpen(false)}>Cancel</button>\n            </div>\n          </div>\n        </div>\n      )}\n\n      {/* Confirmation Modal */}\n      {confirmModalOpen && (\n        <div className=\"modal-overlay\">\n          <div className=\"modal-content\">\n            <div className=\"modal-header\">Confirm Action</div>\n            <div className=\"confirm-message\">{confirmMessage}</div>\n            <div className=\"modal-buttons\">\n              <button className=\"save-btn\" onClick={() => handleConfirmAction('all')}>All Instances</button>\n              <button className=\"save-btn\" onClick={() => handleConfirmAction('single')}>Just This One</button>\n              <button className=\"cancel-btn\" onClick={() => handleConfirmAction('cancel')}>Cancel</button>\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default DayDetails;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}