{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\tangx\\\\Downloads\\\\CISC-490-Calendar\\\\CISC-490-Calendar\\\\src\\\\components\\\\DayDetails.js\",\n  _s = $RefreshSig$();\nimport React, { useMemo, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction DayDetails({\n  selectedDate,\n  setSelectedDate,\n  events,\n  setEvents\n}) {\n  _s();\n  const [newTask, setNewTask] = useState({\n    title: '',\n    description: '',\n    startTime: '',\n    endTime: '',\n    category: 'Work',\n    priority: 'Medium',\n    recurring: false\n  });\n  const [showDelete, setShowDelete] = useState(null);\n  const categories = useMemo(() => ['Work', 'Personal', 'School'], []);\n  const priorities = ['Low', 'Medium', 'High', 'Critical'];\n  const months = useMemo(() => ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'], []);\n  const years = useMemo(() => {\n    const currentYear = new Date().getFullYear();\n    return Array.from({\n      length: 20\n    }, (_, i) => currentYear - 10 + i);\n  }, []);\n  const handleAddTask = () => {\n    if (newTask.title.trim() && newTask.description.trim() && newTask.startTime && newTask.endTime) {\n      const taskData = {\n        taskId: Date.now().toString(),\n        title: newTask.title,\n        description: newTask.description,\n        startTime: newTask.startTime,\n        endTime: newTask.endTime,\n        category: newTask.category,\n        priority: newTask.priority,\n        recurring: newTask.recurring,\n        metadata: {\n          createdBy: 'CurrentUser',\n          lastUpdated: new Date().toISOString()\n        },\n        date: selectedDate.toISOString().split('T')[0]\n      };\n      setEvents(prevEvents => [...prevEvents, taskData]);\n      setNewTask({\n        title: '',\n        description: '',\n        startTime: '',\n        endTime: '',\n        category: 'Work',\n        priority: 'Medium',\n        recurring: false\n      });\n    }\n  };\n  const handleUpdateTask = (taskId, updatedTask) => {\n    setEvents(prevEvents => prevEvents.map(task => task.taskId === taskId ? {\n      ...task,\n      ...updatedTask,\n      metadata: {\n        ...task.metadata,\n        lastUpdated: new Date().toISOString()\n      }\n    } : task));\n  };\n  const handleDeleteTask = taskId => {\n    setEvents(prevEvents => prevEvents.filter(task => task.taskId !== taskId));\n    setShowDelete(null);\n  };\n  const dayTasks = useMemo(() => events.filter(task => task.date === selectedDate.toISOString().split('T')[0]).sort((a, b) => new Date(`1970/01/01 ${a.startTime}`) - new Date(`1970/01/01 ${b.startTime}`)), [events, selectedDate]);\n  const getPriorityColor = priority => {\n    switch (priority) {\n      case 'Low':\n        return '#A8CCDC';\n      case 'Medium':\n        return '#DDA853';\n      case 'High':\n        return '#164046';\n      case 'Critical':\n        return '#FF0000';\n      default:\n        return '#FFFFFF';\n    }\n  };\n  const toggleTask = taskId => {\n    const task = events.find(t => t.taskId === taskId);\n    if (task) {\n      const updatedTask = {\n        ...task,\n        completed: !task.completed,\n        metadata: {\n          ...task.metadata,\n          lastUpdated: new Date().toISOString()\n        }\n      };\n      handleUpdateTask(taskId, updatedTask);\n    }\n  };\n  const handlePreviousDay = () => {\n    const prevDate = new Date(selectedDate);\n    prevDate.setDate(prevDate.getDate() - 1);\n    setSelectedDate(prevDate);\n  };\n  const handleNextDay = () => {\n    const nextDate = new Date(selectedDate);\n    nextDate.setDate(nextDate.getDate() + 1);\n    setSelectedDate(nextDate);\n  };\n  const handleToday = () => {\n    setSelectedDate(new Date());\n  };\n  const handleDateChange = (year, month, day) => {\n    const newDate = new Date(year, month, day);\n    if (!isNaN(newDate.getTime())) {\n      setSelectedDate(newDate);\n    }\n  };\n  const handleInputChange = (field, value) => {\n    setNewTask(prev => ({\n      ...prev,\n      [field]: value\n    }));\n  };\n  const addSuggestionToTasks = suggestion => {\n    const dateMatch = suggestion.match(/for (\\d{1,2}\\/\\d{1,2}\\/\\d{4})/);\n    const timeMatch = suggestion.match(/at (\\d{1,2}:\\d{2} (?:AM|PM))/);\n    const titleMatch = suggestion.match(/(Schedule|Plan|Add) (.*) \\(/);\n    if (dateMatch && timeMatch && titleMatch) {\n      const [, dateStr] = dateMatch;\n      const [, timeStr] = timeMatch;\n      const [,, title] = titleMatch;\n      const [month, day, year] = dateStr.split('/').map(Number);\n      const [hours, minutes] = timeStr.replace(' ', '').split(':').map(Number);\n      const ampm = timeStr.includes('PM') && hours !== 12 ? hours + 12 : timeStr.includes('AM') && hours === 12 ? 0 : hours;\n      const startTime = `${String(ampm).padStart(2, '0')}:${String(minutes).padStart(2, '0')}`;\n      const endTime = `${String(ampm + 1).padStart(2, '0')}:${String(minutes).padStart(2, '0')}`;\n      const taskDate = new Date(year, month - 1, day);\n      if (taskDate.toDateString() === selectedDate.toDateString()) {\n        const taskData = {\n          taskId: Date.now().toString(),\n          title: title.trim(),\n          description: '',\n          startTime,\n          endTime,\n          category: 'Personal',\n          priority: 'Medium',\n          recurring: false,\n          metadata: {\n            createdBy: 'AI',\n            lastUpdated: new Date().toISOString()\n          },\n          date: selectedDate.toISOString().split('T')[0]\n        };\n        setEvents(prevEvents => [...prevEvents, taskData]);\n      } else {\n        alert('Suggestion date does not match the current selected date.');\n      }\n    } else {\n      alert('Could not parse suggestion. Please try another suggestion or add manually.');\n    }\n  };\n  const suggestions = useMemo(() => [`Schedule a 30-min workout for ${selectedDate.toLocaleDateString()} at 6:00 PM`, `Add a reminder for daily Twitter time on ${selectedDate.toLocaleDateString()} at 8:00 PM`], [selectedDate]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"day-details\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Details for \", selectedDate.toLocaleDateString('en-US', {\n        weekday: 'long',\n        month: 'long',\n        day: 'numeric'\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"date-navigation\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handlePreviousDay,\n        children: \"Previous Day\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleToday,\n        children: \"Today\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleNextDay,\n        children: \"Next Day\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"date-selector\",\n        children: [/*#__PURE__*/_jsxDEV(\"select\", {\n          value: selectedDate.getFullYear(),\n          onChange: e => handleDateChange(parseInt(e.target.value), selectedDate.getMonth(), selectedDate.getDate()),\n          children: years.map(year => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: year,\n            children: year\n          }, year, false, {\n            fileName: _jsxFileName,\n            lineNumber: 176,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          value: selectedDate.getMonth(),\n          onChange: e => handleDateChange(selectedDate.getFullYear(), parseInt(e.target.value), selectedDate.getDate()),\n          children: months.map((month, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: index,\n            children: month\n          }, month, false, {\n            fileName: _jsxFileName,\n            lineNumber: 184,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          value: selectedDate.getDate(),\n          onChange: e => handleDateChange(selectedDate.getFullYear(), selectedDate.getMonth(), parseInt(e.target.value)),\n          children: Array.from({\n            length: new Date(selectedDate.getFullYear(), selectedDate.getMonth() + 1, 0).getDate()\n          }, (_, i) => i + 1).map(day => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: day,\n            children: day\n          }, day, false, {\n            fileName: _jsxFileName,\n            lineNumber: 192,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"details-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"timeline-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Today\\u2019s Timeline\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"timeline\",\n          children: dayTasks.map(task => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"timeline-item\",\n            style: {\n              borderLeft: `5px solid ${getPriorityColor(task.priority)}`,\n              padding: '10px',\n              margin: '10px 0',\n              position: 'relative'\n            },\n            onMouseEnter: () => setShowDelete(task.taskId),\n            onMouseLeave: () => setShowDelete(null),\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: task.completed ? 'completed' : '',\n              children: [\"Starting Time: \", task.startTime, \" - Ending Time: \", task.endTime, \" - \", task.title, \" - \", task.description, \" - \", task.category, \" [\", task.priority, \"]\", task.recurring && /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"recurring-badge\",\n                children: \"\\uD83D\\uDD04\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 211,\n                columnNumber: 38\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"task-metadata\",\n                children: [\"Created by: \", task.metadata.createdBy, \" | Last Updated: \", new Date(task.metadata.lastUpdated).toLocaleString()]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 212,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 209,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              checked: task.completed || false,\n              onChange: () => toggleTask(task.taskId),\n              style: {\n                marginLeft: '10px'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 216,\n              columnNumber: 17\n            }, this), showDelete === task.taskId && /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"delete-button\",\n              onClick: () => handleDeleteTask(task.taskId),\n              children: \"X\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 223,\n              columnNumber: 19\n            }, this)]\n          }, task.taskId, true, {\n            fileName: _jsxFileName,\n            lineNumber: 202,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"right-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Add Task\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 235,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"schedule-section\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"task-input-complex\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"input-row\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"Task Category:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 239,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                value: newTask.category,\n                onChange: e => handleInputChange('category', e.target.value),\n                children: categories.map(cat => /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: cat,\n                  children: cat\n                }, cat, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 242,\n                  columnNumber: 21\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 240,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 238,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"input-row\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"Task Title:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 247,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                value: newTask.title,\n                onChange: e => handleInputChange('title', e.target.value),\n                placeholder: \"Enter Task Title...\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 248,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 246,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"input-row\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"Task Description:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 256,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                value: newTask.description,\n                onChange: e => handleInputChange('description', e.target.value),\n                placeholder: \"Enter Task Description...\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 257,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 255,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"input-row\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"Starting Time:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 265,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"time\",\n                value: newTask.startTime,\n                onChange: e => handleInputChange('startTime', e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 266,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 264,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"input-row\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"Ending Time:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 273,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"time\",\n                value: newTask.endTime,\n                onChange: e => handleInputChange('endTime', e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 274,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 272,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"input-row\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"Priority:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 281,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                value: newTask.priority,\n                onChange: e => handleInputChange('priority', e.target.value),\n                children: priorities.map(p => /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: p,\n                  children: [p, \" Priority\"]\n                }, p, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 284,\n                  columnNumber: 21\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 282,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 280,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"input-row\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"Recurring Task:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 289,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"checkbox\",\n                checked: newTask.recurring,\n                onChange: e => handleInputChange('recurring', e.target.checked)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 290,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 288,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"input-row\",\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: handleAddTask,\n                children: \"Add\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 293,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 292,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 237,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 236,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"ai-suggestions\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"AI-Powered Suggestions\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 298,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: suggestions.map((suggestion, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n              className: \"suggestion-item\",\n              onClick: () => addSuggestionToTasks(suggestion),\n              children: suggestion\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 301,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 299,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 297,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 164,\n    columnNumber: 5\n  }, this);\n}\n_s(DayDetails, \"DFh/gUVisLDYHnG4Qi7E5+yJ2V8=\");\n_c = DayDetails;\nexport default DayDetails;\nvar _c;\n$RefreshReg$(_c, \"DayDetails\");","map":{"version":3,"names":["React","useMemo","useState","jsxDEV","_jsxDEV","DayDetails","selectedDate","setSelectedDate","events","setEvents","_s","newTask","setNewTask","title","description","startTime","endTime","category","priority","recurring","showDelete","setShowDelete","categories","priorities","months","years","currentYear","Date","getFullYear","Array","from","length","_","i","handleAddTask","trim","taskData","taskId","now","toString","metadata","createdBy","lastUpdated","toISOString","date","split","prevEvents","handleUpdateTask","updatedTask","map","task","handleDeleteTask","filter","dayTasks","sort","a","b","getPriorityColor","toggleTask","find","t","completed","handlePreviousDay","prevDate","setDate","getDate","handleNextDay","nextDate","handleToday","handleDateChange","year","month","day","newDate","isNaN","getTime","handleInputChange","field","value","prev","addSuggestionToTasks","suggestion","dateMatch","match","timeMatch","titleMatch","dateStr","timeStr","Number","hours","minutes","replace","ampm","includes","String","padStart","taskDate","toDateString","alert","suggestions","toLocaleDateString","className","children","weekday","fileName","_jsxFileName","lineNumber","columnNumber","onClick","onChange","e","parseInt","target","getMonth","index","style","borderLeft","padding","margin","position","onMouseEnter","onMouseLeave","toLocaleString","type","checked","marginLeft","cat","placeholder","p","_c","$RefreshReg$"],"sources":["C:/Users/tangx/Downloads/CISC-490-Calendar/CISC-490-Calendar/src/components/DayDetails.js"],"sourcesContent":["import React, { useMemo, useState } from 'react';\n\nfunction DayDetails({ selectedDate, setSelectedDate, events, setEvents }) {\n  const [newTask, setNewTask] = useState({\n    title: '',\n    description: '',\n    startTime: '',\n    endTime: '',\n    category: 'Work',\n    priority: 'Medium',\n    recurring: false,\n  });\n  const [showDelete, setShowDelete] = useState(null);\n\n  const categories = useMemo(() => ['Work', 'Personal', 'School'], []);\n  const priorities = ['Low', 'Medium', 'High', 'Critical'];\n\n  const months = useMemo(() => [\n    'January', 'February', 'March', 'April', 'May', 'June',\n    'July', 'August', 'September', 'October', 'November', 'December'\n  ], []);\n\n  const years = useMemo(() => {\n    const currentYear = new Date().getFullYear();\n    return Array.from({ length: 20 }, (_, i) => currentYear - 10 + i);\n  }, []);\n\n  const handleAddTask = () => {\n    if (newTask.title.trim() && newTask.description.trim() && newTask.startTime && newTask.endTime) {\n      const taskData = {\n        taskId: Date.now().toString(),\n        title: newTask.title,\n        description: newTask.description,\n        startTime: newTask.startTime,\n        endTime: newTask.endTime,\n        category: newTask.category,\n        priority: newTask.priority,\n        recurring: newTask.recurring,\n        metadata: { createdBy: 'CurrentUser', lastUpdated: new Date().toISOString() },\n        date: selectedDate.toISOString().split('T')[0],\n      };\n      setEvents(prevEvents => [...prevEvents, taskData]);\n      setNewTask({\n        title: '',\n        description: '',\n        startTime: '',\n        endTime: '',\n        category: 'Work',\n        priority: 'Medium',\n        recurring: false,\n      });\n    }\n  };\n\n  const handleUpdateTask = (taskId, updatedTask) => {\n    setEvents(prevEvents =>\n      prevEvents.map(task =>\n        task.taskId === taskId ? { ...task, ...updatedTask, metadata: { ...task.metadata, lastUpdated: new Date().toISOString() } } : task\n      )\n    );\n  };\n\n  const handleDeleteTask = (taskId) => {\n    setEvents(prevEvents => prevEvents.filter(task => task.taskId !== taskId));\n    setShowDelete(null);\n  };\n\n  const dayTasks = useMemo(() =>\n    events.filter(task => task.date === selectedDate.toISOString().split('T')[0])\n      .sort((a, b) => new Date(`1970/01/01 ${a.startTime}`) - new Date(`1970/01/01 ${b.startTime}`)),\n    [events, selectedDate]\n  );\n\n  const getPriorityColor = (priority) => {\n    switch (priority) {\n      case 'Low': return '#A8CCDC';\n      case 'Medium': return '#DDA853';\n      case 'High': return '#164046';\n      case 'Critical': return '#FF0000';\n      default: return '#FFFFFF';\n    }\n  };\n\n  const toggleTask = (taskId) => {\n    const task = events.find(t => t.taskId === taskId);\n    if (task) {\n      const updatedTask = { ...task, completed: !task.completed, metadata: { ...task.metadata, lastUpdated: new Date().toISOString() } };\n      handleUpdateTask(taskId, updatedTask);\n    }\n  };\n\n  const handlePreviousDay = () => {\n    const prevDate = new Date(selectedDate);\n    prevDate.setDate(prevDate.getDate() - 1);\n    setSelectedDate(prevDate);\n  };\n\n  const handleNextDay = () => {\n    const nextDate = new Date(selectedDate);\n    nextDate.setDate(nextDate.getDate() + 1);\n    setSelectedDate(nextDate);\n  };\n\n  const handleToday = () => {\n    setSelectedDate(new Date());\n  };\n\n  const handleDateChange = (year, month, day) => {\n    const newDate = new Date(year, month, day);\n    if (!isNaN(newDate.getTime())) {\n      setSelectedDate(newDate);\n    }\n  };\n\n  const handleInputChange = (field, value) => {\n    setNewTask(prev => ({ ...prev, [field]: value }));\n  };\n\n  const addSuggestionToTasks = (suggestion) => {\n    const dateMatch = suggestion.match(/for (\\d{1,2}\\/\\d{1,2}\\/\\d{4})/);\n    const timeMatch = suggestion.match(/at (\\d{1,2}:\\d{2} (?:AM|PM))/);\n    const titleMatch = suggestion.match(/(Schedule|Plan|Add) (.*) \\(/);\n\n    if (dateMatch && timeMatch && titleMatch) {\n      const [, dateStr] = dateMatch;\n      const [, timeStr] = timeMatch;\n      const [, , title] = titleMatch;\n\n      const [month, day, year] = dateStr.split('/').map(Number);\n      const [hours, minutes] = timeStr.replace(' ', '').split(':').map(Number);\n      const ampm = timeStr.includes('PM') && hours !== 12 ? hours + 12 : (timeStr.includes('AM') && hours === 12 ? 0 : hours);\n      const startTime = `${String(ampm).padStart(2, '0')}:${String(minutes).padStart(2, '0')}`;\n      const endTime = `${String(ampm + 1).padStart(2, '0')}:${String(minutes).padStart(2, '0')}`;\n\n      const taskDate = new Date(year, month - 1, day);\n      if (taskDate.toDateString() === selectedDate.toDateString()) {\n        const taskData = {\n          taskId: Date.now().toString(),\n          title: title.trim(),\n          description: '',\n          startTime,\n          endTime,\n          category: 'Personal',\n          priority: 'Medium',\n          recurring: false,\n          metadata: { createdBy: 'AI', lastUpdated: new Date().toISOString() },\n          date: selectedDate.toISOString().split('T')[0],\n        };\n        setEvents(prevEvents => [...prevEvents, taskData]);\n      } else {\n        alert('Suggestion date does not match the current selected date.');\n      }\n    } else {\n      alert('Could not parse suggestion. Please try another suggestion or add manually.');\n    }\n  };\n\n  const suggestions = useMemo(() => [\n    `Schedule a 30-min workout for ${selectedDate.toLocaleDateString()} at 6:00 PM`,\n    `Add a reminder for daily Twitter time on ${selectedDate.toLocaleDateString()} at 8:00 PM`\n  ], [selectedDate]);\n\n  return (\n    <div className=\"day-details\">\n      <h2>Details for {selectedDate.toLocaleDateString('en-US', { weekday: 'long', month: 'long', day: 'numeric' })}</h2>\n      <div className=\"date-navigation\">\n        <button onClick={handlePreviousDay}>Previous Day</button>\n        <button onClick={handleToday}>Today</button>\n        <button onClick={handleNextDay}>Next Day</button>\n        <div className=\"date-selector\">\n          <select\n            value={selectedDate.getFullYear()}\n            onChange={(e) => handleDateChange(parseInt(e.target.value), selectedDate.getMonth(), selectedDate.getDate())}\n          >\n            {years.map(year => (\n              <option key={year} value={year}>{year}</option>\n            ))}\n          </select>\n          <select\n            value={selectedDate.getMonth()}\n            onChange={(e) => handleDateChange(selectedDate.getFullYear(), parseInt(e.target.value), selectedDate.getDate())}\n          >\n            {months.map((month, index) => (\n              <option key={month} value={index}>{month}</option>\n            ))}\n          </select>\n          <select\n            value={selectedDate.getDate()}\n            onChange={(e) => handleDateChange(selectedDate.getFullYear(), selectedDate.getMonth(), parseInt(e.target.value))}\n          >\n            {Array.from({ length: new Date(selectedDate.getFullYear(), selectedDate.getMonth() + 1, 0).getDate() }, (_, i) => i + 1).map(day => (\n              <option key={day} value={day}>{day}</option>\n            ))}\n          </select>\n        </div>\n      </div>\n      <div className=\"details-content\">\n        <div className=\"timeline-section\">\n          <h3>Today’s Timeline</h3>\n          <div className=\"timeline\">\n            {dayTasks.map(task => (\n              <div\n                key={task.taskId}\n                className=\"timeline-item\"\n                style={{ borderLeft: `5px solid ${getPriorityColor(task.priority)}`, padding: '10px', margin: '10px 0', position: 'relative' }}\n                onMouseEnter={() => setShowDelete(task.taskId)}\n                onMouseLeave={() => setShowDelete(null)}\n              >\n                <span className={task.completed ? 'completed' : ''}>\n                  Starting Time: {task.startTime} - Ending Time: {task.endTime} - {task.title} - {task.description} - {task.category} [{task.priority}]\n                  {task.recurring && <span className=\"recurring-badge\">🔄</span>}\n                  <div className=\"task-metadata\">\n                    Created by: {task.metadata.createdBy} | Last Updated: {new Date(task.metadata.lastUpdated).toLocaleString()}\n                  </div>\n                </span>\n                <input\n                  type=\"checkbox\"\n                  checked={task.completed || false}\n                  onChange={() => toggleTask(task.taskId)}\n                  style={{ marginLeft: '10px' }}\n                />\n                {showDelete === task.taskId && (\n                  <button\n                    className=\"delete-button\"\n                    onClick={() => handleDeleteTask(task.taskId)}\n                  >\n                    X\n                  </button>\n                )}\n              </div>\n            ))}\n          </div>\n        </div>\n        <div className=\"right-section\">\n          <h3>Add Task</h3>\n          <div className=\"schedule-section\">\n            <div className=\"task-input-complex\">\n              <div className=\"input-row\">\n                <label>Task Category:</label>\n                <select value={newTask.category} onChange={(e) => handleInputChange('category', e.target.value)}>\n                  {categories.map(cat => (\n                    <option key={cat} value={cat}>{cat}</option>\n                  ))}\n                </select>\n              </div>\n              <div className=\"input-row\">\n                <label>Task Title:</label>\n                <input\n                  type=\"text\"\n                  value={newTask.title}\n                  onChange={(e) => handleInputChange('title', e.target.value)}\n                  placeholder=\"Enter Task Title...\"\n                />\n              </div>\n              <div className=\"input-row\">\n                <label>Task Description:</label>\n                <input\n                  type=\"text\"\n                  value={newTask.description}\n                  onChange={(e) => handleInputChange('description', e.target.value)}\n                  placeholder=\"Enter Task Description...\"\n                />\n              </div>\n              <div className=\"input-row\">\n                <label>Starting Time:</label>\n                <input\n                  type=\"time\"\n                  value={newTask.startTime}\n                  onChange={(e) => handleInputChange('startTime', e.target.value)}\n                />\n              </div>\n              <div className=\"input-row\">\n                <label>Ending Time:</label>\n                <input\n                  type=\"time\"\n                  value={newTask.endTime}\n                  onChange={(e) => handleInputChange('endTime', e.target.value)}\n                />\n              </div>\n              <div className=\"input-row\">\n                <label>Priority:</label>\n                <select value={newTask.priority} onChange={(e) => handleInputChange('priority', e.target.value)}>\n                  {priorities.map(p => (\n                    <option key={p} value={p}>{p} Priority</option>\n                  ))}\n                </select>\n              </div>\n              <div className=\"input-row\">\n                <label>Recurring Task:</label>\n                <input type=\"checkbox\" checked={newTask.recurring} onChange={(e) => handleInputChange('recurring', e.target.checked)} />\n              </div>\n              <div className=\"input-row\">\n                <button onClick={handleAddTask}>Add</button>\n              </div>\n            </div>\n          </div>\n          <div className=\"ai-suggestions\">\n            <h3>AI-Powered Suggestions</h3>\n            <ul>\n              {suggestions.map((suggestion, index) => (\n                <li\n                  key={index}\n                  className=\"suggestion-item\"\n                  onClick={() => addSuggestionToTasks(suggestion)}\n                >\n                  {suggestion}\n                </li>\n              ))}\n            </ul>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default DayDetails;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}