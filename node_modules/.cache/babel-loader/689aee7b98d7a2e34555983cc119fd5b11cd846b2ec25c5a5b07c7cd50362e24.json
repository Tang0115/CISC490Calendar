{"ast":null,"code":"var _jsxFileName = \"/home/tang0115/cisc490/calendar/CISC-490-Calendar/src/components/DayDetails.js\",\n  _s = $RefreshSig$();\nimport React, { useMemo, useState, useEffect } from 'react';\nimport RecurringOptionsModal from './RecurringOptionsModal';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst getLocalDateString = date => {\n  const d = new Date(date);\n  const year = d.getFullYear();\n  const month = String(d.getMonth() + 1).padStart(2, '0');\n  const day = String(d.getDate()).padStart(2, '0');\n  return `${year}-${month}-${day}`;\n};\nconst generateRecurringDates = (startDate, recurringOptions) => {\n  const dates = [];\n  const start = new Date(startDate);\n  const end = new Date(recurringOptions.endDate);\n  let currentDate = new Date(start);\n  while (currentDate <= end) {\n    if (recurringOptions.frequency === 'daily') {\n      dates.push(new Date(currentDate));\n      currentDate.setDate(currentDate.getDate() + recurringOptions.interval);\n    } else if (recurringOptions.frequency === 'weekly') {\n      if (recurringOptions.weekDays.includes(currentDate.getDay())) {\n        dates.push(new Date(currentDate));\n      }\n      currentDate.setDate(currentDate.getDate() + 1);\n      if (currentDate.getDay() === 0) {\n        currentDate.setDate(currentDate.getDate() + (recurringOptions.interval - 1) * 7);\n      }\n    } else if (recurringOptions.frequency === 'monthly') {\n      dates.push(new Date(currentDate));\n      currentDate.setMonth(currentDate.getMonth() + recurringOptions.interval);\n    } else if (recurringOptions.frequency === 'yearly') {\n      dates.push(new Date(currentDate));\n      currentDate.setFullYear(currentDate.getFullYear() + recurringOptions.interval);\n    }\n  }\n  return dates;\n};\nfunction DayDetails({\n  selectedDate,\n  setSelectedDate,\n  events,\n  setEvents\n}) {\n  _s();\n  const [newTask, setNewTask] = useState({\n    title: '',\n    description: '',\n    startTime: '',\n    endTime: '',\n    category: 'Work',\n    priority: 'Medium',\n    recurring: false\n  });\n  const [recurringModalOpen, setRecurringModalOpen] = useState(false);\n  const [recurringOptions, setRecurringOptions] = useState({\n    frequency: 'daily',\n    weekDays: [],\n    endDate: '',\n    interval: 1\n  });\n  const [editModalOpen, setEditModalOpen] = useState(false);\n  const [selectedTask, setSelectedTask] = useState(null);\n  const [confirmModalOpen, setConfirmModalOpen] = useState(false);\n  const [confirmAction, setConfirmAction] = useState(null);\n  const [confirmMessage, setConfirmMessage] = useState('');\n  const [pendingTask, setPendingTask] = useState(null);\n  const [lastAction, setLastAction] = useState(null);\n  const [showUndo, setShowUndo] = useState(false);\n  const [errors, setErrors] = useState({});\n  const [deletedTasks, setDeletedTasks] = useState([]);\n  const [showUndoNotification, setShowUndoNotification] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n  const [errorMessage, setErrorMessage] = useState('');\n  const categories = useMemo(() => ['Work', 'Personal', 'School'], []);\n  const priorities = ['Low', 'Medium', 'High', 'Critical'];\n  const months = useMemo(() => ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'], []);\n  const years = useMemo(() => {\n    const currentYear = new Date().getFullYear();\n    return Array.from({\n      length: 20\n    }, (_, i) => currentYear - 10 + i);\n  }, []);\n  const handleRecurringChange = checked => {\n    if (selectedTask) {\n      setSelectedTask({\n        ...selectedTask,\n        recurring: checked\n      });\n      if (checked) {\n        setRecurringModalOpen(true);\n      }\n    } else {\n      setNewTask({\n        ...newTask,\n        recurring: checked\n      });\n      if (checked) {\n        setRecurringModalOpen(true);\n      }\n    }\n  };\n  const handleRecurringOptionsSave = options => {\n    if (selectedTask) {\n      setSelectedTask({\n        ...selectedTask,\n        recurringOptions: options\n      });\n    } else {\n      setNewTask({\n        ...newTask,\n        recurringOptions: options\n      });\n    }\n  };\n  const validateTimeInputs = (startTime, endTime) => {\n    const errors = {};\n    if (!startTime) {\n      errors.startTime = 'Start time is required';\n    }\n    if (!endTime) {\n      errors.endTime = 'End time is required';\n    }\n    if (startTime && endTime) {\n      const [startHour, startMinute] = startTime.split(':').map(Number);\n      const [endHour, endMinute] = endTime.split(':').map(Number);\n      const startMinutes = startHour * 60 + startMinute;\n      const endMinutes = endHour * 60 + endMinute;\n      if (endMinutes <= startMinutes) {\n        errors.endTime = 'End time must be after start time';\n      }\n    }\n    return errors;\n  };\n  const checkForOverlappingEvents = (startTime, endTime, taskId = null) => {\n    const [startHour, startMinute] = startTime.split(':').map(Number);\n    const [endHour, endMinute] = endTime.split(':').map(Number);\n    const newStartMinutes = startHour * 60 + startMinute;\n    const newEndMinutes = endHour * 60 + endMinute;\n    return events.some(task => {\n      if (taskId && task.taskId === taskId) return false;\n      const [taskStartHour, taskStartMinute] = task.startTime.split(':').map(Number);\n      const [taskEndHour, taskEndMinute] = task.endTime.split(':').map(Number);\n      const taskStartMinutes = taskStartHour * 60 + taskStartMinute;\n      const taskEndMinutes = taskEndHour * 60 + taskEndMinute;\n\n      // Handle events spanning midnight\n      const normalizedNewEnd = newEndMinutes < newStartMinutes ? newEndMinutes + 1440 : newEndMinutes;\n      const normalizedTaskEnd = taskEndMinutes < taskStartMinutes ? taskEndMinutes + 1440 : taskEndMinutes;\n      return newStartMinutes < normalizedTaskEnd && normalizedNewEnd > taskStartMinutes;\n    });\n  };\n  const handleAddTask = async () => {\n    try {\n      setIsLoading(true);\n      setErrorMessage('');\n      const timeErrors = validateTimeInputs(newTask.startTime, newTask.endTime);\n      if (Object.keys(timeErrors).length > 0) {\n        setErrors(timeErrors);\n        return;\n      }\n      if (checkForOverlappingEvents(newTask.startTime, newTask.endTime)) {\n        setErrors({\n          overlap: 'This event overlaps with an existing event'\n        });\n        return;\n      }\n      setErrors({});\n      const taskData = {\n        taskId: Date.now().toString(),\n        title: newTask.title || 'Untitled Task',\n        description: newTask.description,\n        startTime: newTask.startTime,\n        endTime: newTask.endTime,\n        category: newTask.category,\n        priority: newTask.priority,\n        recurring: newTask.recurring,\n        recurringOptions: newTask.recurring ? newTask.recurringOptions : null,\n        metadata: {\n          createdBy: 'CurrentUser',\n          lastUpdated: new Date().toISOString()\n        },\n        date: getLocalDateString(selectedDate)\n      };\n      let tasksToAdd = [taskData];\n      if (taskData.recurring && taskData.recurringOptions) {\n        const recurringDates = generateRecurringDates(new Date(`${taskData.date}T${taskData.startTime}`), taskData.recurringOptions);\n        tasksToAdd = recurringDates.map((date, index) => ({\n          ...taskData,\n          taskId: `${taskData.taskId}-${index}`,\n          date: getLocalDateString(date),\n          startTime: date.toTimeString().slice(0, 5),\n          endTime: new Date(date.getTime() + (new Date(`1970/01/01 ${taskData.endTime}`).getTime() - new Date(`1970/01/01 ${taskData.startTime}`).getTime())).toTimeString().slice(0, 5)\n        }));\n      }\n\n      // Save to localStorage with error handling\n      try {\n        const updatedEvents = [...events, ...tasksToAdd];\n        localStorage.setItem('tasks', JSON.stringify(updatedEvents));\n      } catch (e) {\n        if (e.name === 'QuotaExceededError') {\n          setErrorMessage('Storage limit exceeded. Please delete some tasks.');\n          return;\n        }\n      }\n      setLastAction({\n        type: 'add',\n        tasks: tasksToAdd,\n        previousEvents: [...events]\n      });\n      setEvents(prevEvents => [...prevEvents, ...tasksToAdd]);\n      setShowUndo(true);\n      setTimeout(() => setShowUndo(false), 5000);\n      setNewTask({\n        title: '',\n        description: '',\n        startTime: '',\n        endTime: '',\n        category: 'Work',\n        priority: 'Medium',\n        recurring: false\n      });\n    } catch (error) {\n      setErrorMessage('An error occurred while adding the task. Please try again.');\n      console.error('Error adding task:', error);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  const handleUpdateTask = (taskId, updatedTask) => {\n    setEvents(prevEvents => prevEvents.map(task => task.taskId === taskId ? {\n      ...task,\n      ...updatedTask,\n      metadata: {\n        ...task.metadata,\n        lastUpdated: new Date().toISOString()\n      }\n    } : task));\n  };\n  const handleEditTask = task => {\n    const timeErrors = validateTimeInputs(task.startTime, task.endTime);\n    if (Object.keys(timeErrors).length > 0) {\n      setErrors(timeErrors);\n      return;\n    }\n    if (checkForOverlappingEvents(task.startTime, task.endTime, task.taskId)) {\n      setErrors({\n        overlap: 'This event overlaps with an existing event'\n      });\n      return;\n    }\n    setErrors({});\n    if (task.recurring) {\n      setConfirmMessage('This is a recurring event. Would you like to edit all instances or just this one?');\n      setConfirmAction('edit');\n      setPendingTask(task);\n      setConfirmModalOpen(true);\n    } else {\n      setSelectedTask(task);\n      setEditModalOpen(true);\n    }\n  };\n  const handleDeleteTask = taskId => {\n    const task = events.find(t => t.taskId === taskId);\n    if (task.recurring) {\n      setConfirmMessage('This is a recurring event. Would you like to delete all instances or just this one?');\n      setConfirmAction('delete');\n      setPendingTask(task);\n      setConfirmModalOpen(true);\n    } else {\n      setDeletedTasks(prev => [...prev, {\n        ...task,\n        deletedAt: Date.now()\n      }]);\n      setLastAction({\n        type: 'delete',\n        taskId: taskId,\n        previousEvents: [...events]\n      });\n      setEvents(prevEvents => prevEvents.filter(task => task.taskId !== taskId));\n      setShowUndo(true);\n      setTimeout(() => setShowUndo(false), 5000);\n    }\n  };\n  const handleConfirmAction = action => {\n    if (action === 'cancel') {\n      setConfirmModalOpen(false);\n      setPendingTask(null);\n      return;\n    }\n    if (confirmAction === 'edit') {\n      if (pendingTask) {\n        if (action === 'all') {\n          setSelectedTask(pendingTask);\n          setEditModalOpen(true);\n        } else if (action === 'single') {\n          setSelectedTask(pendingTask);\n          setEditModalOpen(true);\n        }\n      }\n    } else if (confirmAction === 'delete') {\n      if (pendingTask) {\n        if (action === 'all' && pendingTask.recurringOptions) {\n          // Delete all instances of the recurring event by matching the base taskId\n          const baseTaskId = pendingTask.taskId.split('-')[0];\n          setEvents(prevEvents => prevEvents.filter(task => !task.taskId.startsWith(baseTaskId)));\n        } else if (action === 'single') {\n          // Delete only this instance\n          setEvents(prevEvents => prevEvents.filter(task => task.taskId !== pendingTask.taskId));\n        }\n      }\n    }\n    setConfirmModalOpen(false);\n    setPendingTask(null);\n  };\n  const dayTasks = useMemo(() => {\n    const filteredTasks = events.filter(task => task.date === getLocalDateString(selectedDate)).sort((a, b) => new Date(`1970/01/01 ${a.startTime}`) - new Date(`1970/01/01 ${b.startTime}`));\n    return filteredTasks;\n  }, [events, selectedDate]);\n  useEffect(() => {\n    console.log('DayDetails selectedDate:', selectedDate, 'Normalized:', getLocalDateString(selectedDate));\n    console.log('DayDetails events:', events);\n    console.log('DayDetails dayTasks:', dayTasks);\n  }, [selectedDate, events, dayTasks]);\n  const getPriorityColor = priority => {\n    switch (priority) {\n      case 'Low':\n        return '#A8CCDC';\n      case 'Medium':\n        return '#DDA853';\n      case 'High':\n        return '#164046';\n      case 'Critical':\n        return '#FF0000';\n      default:\n        return '#FFFFFF';\n    }\n  };\n  const toggleTask = taskId => {\n    const task = events.find(t => t.taskId === taskId);\n    if (task) {\n      const updatedTask = {\n        ...task,\n        completed: !task.completed,\n        metadata: {\n          ...task.metadata,\n          lastUpdated: new Date().toISOString()\n        }\n      };\n      handleUpdateTask(taskId, updatedTask);\n    }\n  };\n  const handlePreviousDay = () => {\n    const prevDate = new Date(selectedDate);\n    prevDate.setDate(prevDate.getDate() - 1);\n    setSelectedDate(prevDate);\n  };\n  const handleNextDay = () => {\n    const nextDate = new Date(selectedDate);\n    nextDate.setDate(nextDate.getDate() + 1);\n    setSelectedDate(nextDate);\n  };\n  const handleToday = () => {\n    setSelectedDate(new Date());\n  };\n  const handleDateChange = (year, month, day) => {\n    const newDate = new Date(year, month, day);\n    if (!isNaN(newDate.getTime())) {\n      setSelectedDate(newDate);\n    }\n  };\n  const handleInputChange = (field, value) => {\n    setNewTask(prev => ({\n      ...prev,\n      [field]: value\n    }));\n  };\n  const formatTime12Hour = time => {\n    const [hours, minutes] = time.split(':').map(Number);\n    const period = hours >= 12 ? 'PM' : 'AM';\n    const adjustedHours = hours % 12 || 12;\n    return `${adjustedHours}:${minutes.toString().padStart(2, '0')} ${period}`;\n  };\n  const handleSaveEdit = () => {\n    if (selectedTask.title.trim() && selectedTask.startTime && selectedTask.endTime) {\n      const updatedTask = {\n        ...selectedTask,\n        metadata: {\n          ...selectedTask.metadata,\n          lastUpdated: new Date().toISOString()\n        }\n      };\n      handleUpdateTask(selectedTask.taskId, updatedTask);\n      setEditModalOpen(false);\n      setSelectedTask(null);\n    }\n  };\n  const handleUndo = () => {\n    if (lastAction) {\n      setEvents(lastAction.previousEvents);\n      setLastAction(null);\n      setShowUndo(false);\n    }\n  };\n  const handleUndoDelete = () => {\n    const lastDeletedTask = deletedTasks[deletedTasks.length - 1];\n    if (lastDeletedTask) {\n      setEvents(prevEvents => [...prevEvents, lastDeletedTask]);\n      setDeletedTasks(prev => prev.filter(task => task.taskId !== lastDeletedTask.taskId));\n      setShowUndoNotification(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"day-details\",\n    children: [errorMessage && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error-banner\",\n      role: \"alert\",\n      children: [errorMessage, /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setErrorMessage(''),\n        \"aria-label\": \"Dismiss error\",\n        children: \"\\xD7\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 419,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 417,\n      columnNumber: 9\n    }, this), isLoading && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading-overlay\",\n      role: \"status\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loading-spinner\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 426,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"visually-hidden\",\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 427,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 425,\n      columnNumber: 9\n    }, this), showUndo && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"undo-notification\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: [\"Task \", (lastAction === null || lastAction === void 0 ? void 0 : lastAction.type) === 'add' ? 'added' : 'deleted']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 432,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleUndo,\n        children: \"Undo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 433,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 431,\n      columnNumber: 9\n    }, this), showUndoNotification && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"undo-notification\",\n      role: \"alert\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"Task deleted\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 438,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleUndoDelete,\n        children: \"Undo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 439,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 437,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Details for \", selectedDate.toLocaleDateString('en-US', {\n        weekday: 'long',\n        month: 'long',\n        day: 'numeric'\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 442,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"date-navigation\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handlePreviousDay,\n        children: \"Previous Day\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 444,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleToday,\n        children: \"Today\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 445,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleNextDay,\n        children: \"Next Day\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 446,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"date-selector\",\n        children: [/*#__PURE__*/_jsxDEV(\"select\", {\n          value: selectedDate.getFullYear(),\n          onChange: e => handleDateChange(parseInt(e.target.value), selectedDate.getMonth(), selectedDate.getDate()),\n          children: years.map(year => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: year,\n            children: year\n          }, year, false, {\n            fileName: _jsxFileName,\n            lineNumber: 453,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 448,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          value: selectedDate.getMonth(),\n          onChange: e => handleDateChange(selectedDate.getFullYear(), parseInt(e.target.value), selectedDate.getDate()),\n          children: months.map((month, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: index,\n            children: month\n          }, month, false, {\n            fileName: _jsxFileName,\n            lineNumber: 461,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 456,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          value: selectedDate.getDate(),\n          onChange: e => handleDateChange(selectedDate.getFullYear(), selectedDate.getMonth(), parseInt(e.target.value)),\n          children: Array.from({\n            length: new Date(selectedDate.getFullYear(), selectedDate.getMonth() + 1, 0).getDate()\n          }, (_, i) => i + 1).map(day => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: day,\n            children: day\n          }, day, false, {\n            fileName: _jsxFileName,\n            lineNumber: 469,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 464,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 447,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 443,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"details-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"timeline-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Today's Timeline\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 476,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"timeline\",\n          children: dayTasks.map(task => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `timeline-item ${task.completed ? 'completed' : ''}`,\n            style: {\n              borderLeft: `5px solid ${getPriorityColor(task.priority)}`\n            },\n            onClick: () => toggleTask(task.taskId),\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"task-content\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"task-title\",\n                children: [task.title, task.recurring && /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"recurring-badge\",\n                  children: \"\\uD83D\\uDD04\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 488,\n                  columnNumber: 40\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 486,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"task-time\",\n                children: [formatTime12Hour(task.startTime), \" - \", formatTime12Hour(task.endTime)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 490,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"task-category\",\n                children: task.category\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 493,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"task-priority\",\n                children: [\"Priority: \", task.priority]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 496,\n                columnNumber: 19\n              }, this), task.description && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"task-description\",\n                children: task.description\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 500,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 485,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"task-actions\",\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"edit-button\",\n                onClick: e => {\n                  e.stopPropagation();\n                  handleEditTask(task);\n                },\n                children: \"Edit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 506,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"delete-button\",\n                onClick: e => {\n                  e.stopPropagation();\n                  handleDeleteTask(task.taskId);\n                },\n                children: \"Delete\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 510,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 505,\n              columnNumber: 17\n            }, this)]\n          }, task.taskId, true, {\n            fileName: _jsxFileName,\n            lineNumber: 479,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 477,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 475,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"right-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Add Task\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 520,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"schedule-section\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"task-input-complex\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"input-row\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"Task Category:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 524,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                value: newTask.category,\n                onChange: e => handleInputChange('category', e.target.value),\n                children: categories.map(cat => /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: cat,\n                  children: cat\n                }, cat, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 527,\n                  columnNumber: 21\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 525,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 523,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"input-row\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"task-title\",\n                children: \"Task Title:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 532,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                id: \"task-title\",\n                type: \"text\",\n                value: newTask.title,\n                onChange: e => handleInputChange('title', e.target.value),\n                placeholder: \"Enter task title\",\n                \"aria-invalid\": errors.title ? 'true' : 'false',\n                \"aria-describedby\": errors.title ? 'title-error' : undefined\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 533,\n                columnNumber: 17\n              }, this), errors.title && /*#__PURE__*/_jsxDEV(\"span\", {\n                id: \"title-error\",\n                className: \"error-message\",\n                children: errors.title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 542,\n                columnNumber: 34\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 531,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"input-row\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"Task Description:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 545,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                value: newTask.description,\n                onChange: e => handleInputChange('description', e.target.value),\n                placeholder: \"Enter Task Description...\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 546,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 544,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"input-row\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"start-time\",\n                children: \"Starting Time:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 554,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                id: \"start-time\",\n                type: \"time\",\n                value: newTask.startTime,\n                onChange: e => handleInputChange('startTime', e.target.value),\n                \"aria-invalid\": errors.startTime ? 'true' : 'false',\n                \"aria-describedby\": errors.startTime ? 'start-time-error' : undefined\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 555,\n                columnNumber: 17\n              }, this), errors.startTime && /*#__PURE__*/_jsxDEV(\"span\", {\n                id: \"start-time-error\",\n                className: \"error-message\",\n                children: errors.startTime\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 563,\n                columnNumber: 38\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 553,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"input-row\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"end-time\",\n                children: \"Ending Time:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 566,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                id: \"end-time\",\n                type: \"time\",\n                value: newTask.endTime,\n                onChange: e => handleInputChange('endTime', e.target.value),\n                \"aria-invalid\": errors.endTime ? 'true' : 'false',\n                \"aria-describedby\": errors.endTime ? 'end-time-error' : undefined\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 567,\n                columnNumber: 17\n              }, this), errors.endTime && /*#__PURE__*/_jsxDEV(\"span\", {\n                id: \"end-time-error\",\n                className: \"error-message\",\n                children: errors.endTime\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 575,\n                columnNumber: 36\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 565,\n              columnNumber: 15\n            }, this), errors.overlap && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"overlap-warning-popup\",\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                children: \"Schedule Conflict\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 579,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: errors.overlap\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 580,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"close-button\",\n                onClick: () => setErrors({}),\n                children: \"Close\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 581,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 578,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"input-row\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"Priority:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 587,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                value: newTask.priority,\n                onChange: e => handleInputChange('priority', e.target.value),\n                children: priorities.map(p => /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: p,\n                  children: [p, \" Priority\"]\n                }, p, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 590,\n                  columnNumber: 21\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 588,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 586,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"input-row\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"Recurring Task:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 595,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"checkbox\",\n                checked: newTask.recurring,\n                onChange: e => handleRecurringChange(e.target.checked)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 596,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 594,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"input-row\",\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: handleAddTask,\n                children: \"Add\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 603,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 602,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 522,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 521,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 519,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 474,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(RecurringOptionsModal, {\n      isOpen: recurringModalOpen,\n      onClose: () => setRecurringModalOpen(false),\n      onSave: handleRecurringOptionsSave,\n      recurringOptions: recurringOptions,\n      setRecurringOptions: setRecurringOptions\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 610,\n      columnNumber: 7\n    }, this), editModalOpen && selectedTask && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal-overlay\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-header\",\n          children: \"Edit Task\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 622,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-row\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Title:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 624,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: selectedTask.title,\n            onChange: e => setSelectedTask({\n              ...selectedTask,\n              title: e.target.value\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 625,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 623,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-row\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Description:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 632,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: selectedTask.description,\n            onChange: e => setSelectedTask({\n              ...selectedTask,\n              description: e.target.value\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 633,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 631,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-row\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Start Time:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 640,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"time\",\n            value: selectedTask.startTime,\n            onChange: e => setSelectedTask({\n              ...selectedTask,\n              startTime: e.target.value\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 641,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 639,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-row\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"End Time:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 648,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"time\",\n            value: selectedTask.endTime,\n            onChange: e => setSelectedTask({\n              ...selectedTask,\n              endTime: e.target.value\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 649,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 647,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-row\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Category:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 656,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            value: selectedTask.category,\n            onChange: e => setSelectedTask({\n              ...selectedTask,\n              category: e.target.value\n            }),\n            children: categories.map(cat => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: cat,\n              children: cat\n            }, cat, false, {\n              fileName: _jsxFileName,\n              lineNumber: 662,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 657,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 655,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-row\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Priority:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 667,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            value: selectedTask.priority,\n            onChange: e => setSelectedTask({\n              ...selectedTask,\n              priority: e.target.value\n            }),\n            children: priorities.map(p => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: p,\n              children: p\n            }, p, false, {\n              fileName: _jsxFileName,\n              lineNumber: 673,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 668,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 666,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-row\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Recurring:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 678,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            checked: selectedTask.recurring,\n            onChange: e => handleRecurringChange(e.target.checked)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 679,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 677,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-buttons\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"save-btn\",\n            onClick: handleSaveEdit,\n            children: \"Save\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 686,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"cancel-btn\",\n            onClick: () => setEditModalOpen(false),\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 687,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 685,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 621,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 620,\n      columnNumber: 9\n    }, this), confirmModalOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal-overlay\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-header\",\n          children: \"Confirm Action\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 697,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"confirm-message\",\n          children: confirmMessage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 698,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-buttons\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"save-btn\",\n            onClick: () => handleConfirmAction('all'),\n            children: \"All Instances\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 700,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"save-btn\",\n            onClick: () => handleConfirmAction('single'),\n            children: \"Just This One\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 701,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"cancel-btn\",\n            onClick: () => handleConfirmAction('cancel'),\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 702,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 699,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 696,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 695,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 415,\n    columnNumber: 5\n  }, this);\n}\n_s(DayDetails, \"jq031O8UhNAk7CX+lg0z+FQVuFk=\");\n_c = DayDetails;\nexport default DayDetails;\nvar _c;\n$RefreshReg$(_c, \"DayDetails\");","map":{"version":3,"names":["React","useMemo","useState","useEffect","RecurringOptionsModal","jsxDEV","_jsxDEV","getLocalDateString","date","d","Date","year","getFullYear","month","String","getMonth","padStart","day","getDate","generateRecurringDates","startDate","recurringOptions","dates","start","end","endDate","currentDate","frequency","push","setDate","interval","weekDays","includes","getDay","setMonth","setFullYear","DayDetails","selectedDate","setSelectedDate","events","setEvents","_s","newTask","setNewTask","title","description","startTime","endTime","category","priority","recurring","recurringModalOpen","setRecurringModalOpen","setRecurringOptions","editModalOpen","setEditModalOpen","selectedTask","setSelectedTask","confirmModalOpen","setConfirmModalOpen","confirmAction","setConfirmAction","confirmMessage","setConfirmMessage","pendingTask","setPendingTask","lastAction","setLastAction","showUndo","setShowUndo","errors","setErrors","deletedTasks","setDeletedTasks","showUndoNotification","setShowUndoNotification","isLoading","setIsLoading","errorMessage","setErrorMessage","categories","priorities","months","years","currentYear","Array","from","length","_","i","handleRecurringChange","checked","handleRecurringOptionsSave","options","validateTimeInputs","startHour","startMinute","split","map","Number","endHour","endMinute","startMinutes","endMinutes","checkForOverlappingEvents","taskId","newStartMinutes","newEndMinutes","some","task","taskStartHour","taskStartMinute","taskEndHour","taskEndMinute","taskStartMinutes","taskEndMinutes","normalizedNewEnd","normalizedTaskEnd","handleAddTask","timeErrors","Object","keys","overlap","taskData","now","toString","metadata","createdBy","lastUpdated","toISOString","tasksToAdd","recurringDates","index","toTimeString","slice","getTime","updatedEvents","localStorage","setItem","JSON","stringify","e","name","type","tasks","previousEvents","prevEvents","setTimeout","error","console","handleUpdateTask","updatedTask","handleEditTask","handleDeleteTask","find","t","prev","deletedAt","filter","handleConfirmAction","action","baseTaskId","startsWith","dayTasks","filteredTasks","sort","a","b","log","getPriorityColor","toggleTask","completed","handlePreviousDay","prevDate","handleNextDay","nextDate","handleToday","handleDateChange","newDate","isNaN","handleInputChange","field","value","formatTime12Hour","time","hours","minutes","period","adjustedHours","handleSaveEdit","trim","handleUndo","handleUndoDelete","lastDeletedTask","className","children","role","onClick","fileName","_jsxFileName","lineNumber","columnNumber","toLocaleDateString","weekday","onChange","parseInt","target","style","borderLeft","stopPropagation","cat","htmlFor","id","placeholder","undefined","p","isOpen","onClose","onSave","_c","$RefreshReg$"],"sources":["/home/tang0115/cisc490/calendar/CISC-490-Calendar/src/components/DayDetails.js"],"sourcesContent":["import React, { useMemo, useState, useEffect } from 'react';\nimport RecurringOptionsModal from './RecurringOptionsModal';\n\nconst getLocalDateString = (date) => {\n  const d = new Date(date);\n  const year = d.getFullYear();\n  const month = String(d.getMonth() + 1).padStart(2, '0');\n  const day = String(d.getDate()).padStart(2, '0');\n  return `${year}-${month}-${day}`;\n};\n\nconst generateRecurringDates = (startDate, recurringOptions) => {\n  const dates = [];\n  const start = new Date(startDate);\n  const end = new Date(recurringOptions.endDate);\n  let currentDate = new Date(start);\n\n  while (currentDate <= end) {\n    if (recurringOptions.frequency === 'daily') {\n      dates.push(new Date(currentDate));\n      currentDate.setDate(currentDate.getDate() + recurringOptions.interval);\n    } else if (recurringOptions.frequency === 'weekly') {\n      if (recurringOptions.weekDays.includes(currentDate.getDay())) {\n        dates.push(new Date(currentDate));\n      }\n      currentDate.setDate(currentDate.getDate() + 1);\n      if (currentDate.getDay() === 0) {\n        currentDate.setDate(currentDate.getDate() + (recurringOptions.interval - 1) * 7);\n      }\n    } else if (recurringOptions.frequency === 'monthly') {\n      dates.push(new Date(currentDate));\n      currentDate.setMonth(currentDate.getMonth() + recurringOptions.interval);\n    } else if (recurringOptions.frequency === 'yearly') {\n      dates.push(new Date(currentDate));\n      currentDate.setFullYear(currentDate.getFullYear() + recurringOptions.interval);\n    }\n  }\n\n  return dates;\n};\n\nfunction DayDetails({ selectedDate, setSelectedDate, events, setEvents }) {\n  const [newTask, setNewTask] = useState({\n    title: '',\n    description: '',\n    startTime: '',\n    endTime: '',\n    category: 'Work',\n    priority: 'Medium',\n    recurring: false,\n  });\n  const [recurringModalOpen, setRecurringModalOpen] = useState(false);\n  const [recurringOptions, setRecurringOptions] = useState({\n    frequency: 'daily',\n    weekDays: [],\n    endDate: '',\n    interval: 1\n  });\n  const [editModalOpen, setEditModalOpen] = useState(false);\n  const [selectedTask, setSelectedTask] = useState(null);\n  const [confirmModalOpen, setConfirmModalOpen] = useState(false);\n  const [confirmAction, setConfirmAction] = useState(null);\n  const [confirmMessage, setConfirmMessage] = useState('');\n  const [pendingTask, setPendingTask] = useState(null);\n  const [lastAction, setLastAction] = useState(null);\n  const [showUndo, setShowUndo] = useState(false);\n  const [errors, setErrors] = useState({});\n  const [deletedTasks, setDeletedTasks] = useState([]);\n  const [showUndoNotification, setShowUndoNotification] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n  const [errorMessage, setErrorMessage] = useState('');\n\n  const categories = useMemo(() => ['Work', 'Personal', 'School'], []);\n  const priorities = ['Low', 'Medium', 'High', 'Critical'];\n\n  const months = useMemo(() => [\n    'January', 'February', 'March', 'April', 'May', 'June',\n    'July', 'August', 'September', 'October', 'November', 'December'\n  ], []);\n\n  const years = useMemo(() => {\n    const currentYear = new Date().getFullYear();\n    return Array.from({ length: 20 }, (_, i) => currentYear - 10 + i);\n  }, []);\n\n  const handleRecurringChange = (checked) => {\n    if (selectedTask) {\n      setSelectedTask({ ...selectedTask, recurring: checked });\n      if (checked) {\n        setRecurringModalOpen(true);\n      }\n    } else {\n      setNewTask({ ...newTask, recurring: checked });\n      if (checked) {\n        setRecurringModalOpen(true);\n      }\n    }\n  };\n\n  const handleRecurringOptionsSave = (options) => {\n    if (selectedTask) {\n      setSelectedTask({ ...selectedTask, recurringOptions: options });\n    } else {\n      setNewTask({ ...newTask, recurringOptions: options });\n    }\n  };\n\n  const validateTimeInputs = (startTime, endTime) => {\n    const errors = {};\n    if (!startTime) {\n      errors.startTime = 'Start time is required';\n    }\n    if (!endTime) {\n      errors.endTime = 'End time is required';\n    }\n    if (startTime && endTime) {\n      const [startHour, startMinute] = startTime.split(':').map(Number);\n      const [endHour, endMinute] = endTime.split(':').map(Number);\n      const startMinutes = startHour * 60 + startMinute;\n      const endMinutes = endHour * 60 + endMinute;\n      \n      if (endMinutes <= startMinutes) {\n        errors.endTime = 'End time must be after start time';\n      }\n    }\n    return errors;\n  };\n\n  const checkForOverlappingEvents = (startTime, endTime, taskId = null) => {\n    const [startHour, startMinute] = startTime.split(':').map(Number);\n    const [endHour, endMinute] = endTime.split(':').map(Number);\n    const newStartMinutes = startHour * 60 + startMinute;\n    const newEndMinutes = endHour * 60 + endMinute;\n    \n    return events.some(task => {\n      if (taskId && task.taskId === taskId) return false;\n      \n      const [taskStartHour, taskStartMinute] = task.startTime.split(':').map(Number);\n      const [taskEndHour, taskEndMinute] = task.endTime.split(':').map(Number);\n      const taskStartMinutes = taskStartHour * 60 + taskStartMinute;\n      const taskEndMinutes = taskEndHour * 60 + taskEndMinute;\n\n      // Handle events spanning midnight\n      const normalizedNewEnd = newEndMinutes < newStartMinutes ? newEndMinutes + 1440 : newEndMinutes;\n      const normalizedTaskEnd = taskEndMinutes < taskStartMinutes ? taskEndMinutes + 1440 : taskEndMinutes;\n\n      return (newStartMinutes < normalizedTaskEnd && normalizedNewEnd > taskStartMinutes);\n    });\n  };\n\n  const handleAddTask = async () => {\n    try {\n      setIsLoading(true);\n      setErrorMessage('');\n      \n      const timeErrors = validateTimeInputs(newTask.startTime, newTask.endTime);\n      if (Object.keys(timeErrors).length > 0) {\n        setErrors(timeErrors);\n        return;\n      }\n\n      if (checkForOverlappingEvents(newTask.startTime, newTask.endTime)) {\n        setErrors({ overlap: 'This event overlaps with an existing event' });\n        return;\n      }\n\n      setErrors({});\n      const taskData = {\n        taskId: Date.now().toString(),\n        title: newTask.title || 'Untitled Task',\n        description: newTask.description,\n        startTime: newTask.startTime,\n        endTime: newTask.endTime,\n        category: newTask.category,\n        priority: newTask.priority,\n        recurring: newTask.recurring,\n        recurringOptions: newTask.recurring ? newTask.recurringOptions : null,\n        metadata: { createdBy: 'CurrentUser', lastUpdated: new Date().toISOString() },\n        date: getLocalDateString(selectedDate),\n      };\n\n      let tasksToAdd = [taskData];\n\n      if (taskData.recurring && taskData.recurringOptions) {\n        const recurringDates = generateRecurringDates(\n          new Date(`${taskData.date}T${taskData.startTime}`),\n          taskData.recurringOptions\n        );\n\n        tasksToAdd = recurringDates.map((date, index) => ({\n          ...taskData,\n          taskId: `${taskData.taskId}-${index}`,\n          date: getLocalDateString(date),\n          startTime: date.toTimeString().slice(0, 5),\n          endTime: new Date(date.getTime() + (new Date(`1970/01/01 ${taskData.endTime}`).getTime() - new Date(`1970/01/01 ${taskData.startTime}`).getTime())).toTimeString().slice(0, 5),\n        }));\n      }\n\n      // Save to localStorage with error handling\n      try {\n        const updatedEvents = [...events, ...tasksToAdd];\n        localStorage.setItem('tasks', JSON.stringify(updatedEvents));\n      } catch (e) {\n        if (e.name === 'QuotaExceededError') {\n          setErrorMessage('Storage limit exceeded. Please delete some tasks.');\n          return;\n        }\n      }\n\n      setLastAction({\n        type: 'add',\n        tasks: tasksToAdd,\n        previousEvents: [...events]\n      });\n      setEvents(prevEvents => [...prevEvents, ...tasksToAdd]);\n      setShowUndo(true);\n      setTimeout(() => setShowUndo(false), 5000);\n\n      setNewTask({\n        title: '',\n        description: '',\n        startTime: '',\n        endTime: '',\n        category: 'Work',\n        priority: 'Medium',\n        recurring: false,\n      });\n    } catch (error) {\n      setErrorMessage('An error occurred while adding the task. Please try again.');\n      console.error('Error adding task:', error);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const handleUpdateTask = (taskId, updatedTask) => {\n    setEvents(prevEvents =>\n      prevEvents.map(task =>\n        task.taskId === taskId ? { ...task, ...updatedTask, metadata: { ...task.metadata, lastUpdated: new Date().toISOString() } } : task\n      )\n    );\n  };\n\n  const handleEditTask = (task) => {\n    const timeErrors = validateTimeInputs(task.startTime, task.endTime);\n    if (Object.keys(timeErrors).length > 0) {\n      setErrors(timeErrors);\n      return;\n    }\n\n    if (checkForOverlappingEvents(task.startTime, task.endTime, task.taskId)) {\n      setErrors({ overlap: 'This event overlaps with an existing event' });\n      return;\n    }\n\n    setErrors({});\n    if (task.recurring) {\n      setConfirmMessage('This is a recurring event. Would you like to edit all instances or just this one?');\n      setConfirmAction('edit');\n      setPendingTask(task);\n      setConfirmModalOpen(true);\n    } else {\n      setSelectedTask(task);\n      setEditModalOpen(true);\n    }\n  };\n\n  const handleDeleteTask = (taskId) => {\n    const task = events.find(t => t.taskId === taskId);\n    if (task.recurring) {\n      setConfirmMessage('This is a recurring event. Would you like to delete all instances or just this one?');\n      setConfirmAction('delete');\n      setPendingTask(task);\n      setConfirmModalOpen(true);\n    } else {\n      setDeletedTasks(prev => [...prev, { ...task, deletedAt: Date.now() }]);\n      setLastAction({\n        type: 'delete',\n        taskId: taskId,\n        previousEvents: [...events]\n      });\n      setEvents(prevEvents => prevEvents.filter(task => task.taskId !== taskId));\n      setShowUndo(true);\n      setTimeout(() => setShowUndo(false), 5000);\n    }\n  };\n\n  const handleConfirmAction = (action) => {\n    if (action === 'cancel') {\n      setConfirmModalOpen(false);\n      setPendingTask(null);\n      return;\n    }\n\n    if (confirmAction === 'edit') {\n      if (pendingTask) {\n        if (action === 'all') {\n          setSelectedTask(pendingTask);\n          setEditModalOpen(true);\n        } else if (action === 'single') {\n          setSelectedTask(pendingTask);\n          setEditModalOpen(true);\n        }\n      }\n    } else if (confirmAction === 'delete') {\n      if (pendingTask) {\n        if (action === 'all' && pendingTask.recurringOptions) {\n          // Delete all instances of the recurring event by matching the base taskId\n          const baseTaskId = pendingTask.taskId.split('-')[0];\n          setEvents(prevEvents => prevEvents.filter(task => !task.taskId.startsWith(baseTaskId)));\n        } else if (action === 'single') {\n          // Delete only this instance\n          setEvents(prevEvents => prevEvents.filter(task => task.taskId !== pendingTask.taskId));\n        }\n      }\n    }\n    setConfirmModalOpen(false);\n    setPendingTask(null);\n  };\n\n  const dayTasks = useMemo(() => {\n    const filteredTasks = events.filter(task => task.date === getLocalDateString(selectedDate))\n      .sort((a, b) => new Date(`1970/01/01 ${a.startTime}`) - new Date(`1970/01/01 ${b.startTime}`));\n    return filteredTasks;\n  }, [events, selectedDate]);\n\n  useEffect(() => {\n    console.log('DayDetails selectedDate:', selectedDate, 'Normalized:', getLocalDateString(selectedDate));\n    console.log('DayDetails events:', events);\n    console.log('DayDetails dayTasks:', dayTasks);\n  }, [selectedDate, events, dayTasks]);\n\n  const getPriorityColor = (priority) => {\n    switch (priority) {\n      case 'Low': return '#A8CCDC';\n      case 'Medium': return '#DDA853';\n      case 'High': return '#164046';\n      case 'Critical': return '#FF0000';\n      default: return '#FFFFFF';\n    }\n  };\n\n  const toggleTask = (taskId) => {\n    const task = events.find(t => t.taskId === taskId);\n    if (task) {\n      const updatedTask = { ...task, completed: !task.completed, metadata: { ...task.metadata, lastUpdated: new Date().toISOString() } };\n      handleUpdateTask(taskId, updatedTask);\n    }\n  };\n\n  const handlePreviousDay = () => {\n    const prevDate = new Date(selectedDate);\n    prevDate.setDate(prevDate.getDate() - 1);\n    setSelectedDate(prevDate);\n  };\n\n  const handleNextDay = () => {\n    const nextDate = new Date(selectedDate);\n    nextDate.setDate(nextDate.getDate() + 1);\n    setSelectedDate(nextDate);\n  };\n\n  const handleToday = () => {\n    setSelectedDate(new Date());\n  };\n\n  const handleDateChange = (year, month, day) => {\n    const newDate = new Date(year, month, day);\n    if (!isNaN(newDate.getTime())) {\n      setSelectedDate(newDate);\n    }\n  };\n\n  const handleInputChange = (field, value) => {\n    setNewTask(prev => ({ ...prev, [field]: value }));\n  };\n\n  const formatTime12Hour = (time) => {\n    const [hours, minutes] = time.split(':').map(Number);\n    const period = hours >= 12 ? 'PM' : 'AM';\n    const adjustedHours = hours % 12 || 12;\n    return `${adjustedHours}:${minutes.toString().padStart(2, '0')} ${period}`;\n  };\n\n  const handleSaveEdit = () => {\n    if (selectedTask.title.trim() && selectedTask.startTime && selectedTask.endTime) {\n      const updatedTask = {\n        ...selectedTask,\n        metadata: { ...selectedTask.metadata, lastUpdated: new Date().toISOString() },\n      };\n      handleUpdateTask(selectedTask.taskId, updatedTask);\n      setEditModalOpen(false);\n      setSelectedTask(null);\n    }\n  };\n\n  const handleUndo = () => {\n    if (lastAction) {\n      setEvents(lastAction.previousEvents);\n      setLastAction(null);\n      setShowUndo(false);\n    }\n  };\n\n  const handleUndoDelete = () => {\n    const lastDeletedTask = deletedTasks[deletedTasks.length - 1];\n    if (lastDeletedTask) {\n      setEvents(prevEvents => [...prevEvents, lastDeletedTask]);\n      setDeletedTasks(prev => prev.filter(task => task.taskId !== lastDeletedTask.taskId));\n      setShowUndoNotification(false);\n    }\n  };\n\n  return (\n    <div className=\"day-details\">\n      {errorMessage && (\n        <div className=\"error-banner\" role=\"alert\">\n          {errorMessage}\n          <button onClick={() => setErrorMessage('')} aria-label=\"Dismiss error\">\n            ×\n          </button>\n        </div>\n      )}\n      {isLoading && (\n        <div className=\"loading-overlay\" role=\"status\">\n          <div className=\"loading-spinner\"></div>\n          <span className=\"visually-hidden\">Loading...</span>\n        </div>\n      )}\n      {showUndo && (\n        <div className=\"undo-notification\">\n          <span>Task {lastAction?.type === 'add' ? 'added' : 'deleted'}</span>\n          <button onClick={handleUndo}>Undo</button>\n        </div>\n      )}\n      {showUndoNotification && (\n        <div className=\"undo-notification\" role=\"alert\">\n          <span>Task deleted</span>\n          <button onClick={handleUndoDelete}>Undo</button>\n        </div>\n      )}\n      <h2>Details for {selectedDate.toLocaleDateString('en-US', { weekday: 'long', month: 'long', day: 'numeric' })}</h2>\n      <div className=\"date-navigation\">\n        <button onClick={handlePreviousDay}>Previous Day</button>\n        <button onClick={handleToday}>Today</button>\n        <button onClick={handleNextDay}>Next Day</button>\n        <div className=\"date-selector\">\n          <select\n            value={selectedDate.getFullYear()}\n            onChange={(e) => handleDateChange(parseInt(e.target.value), selectedDate.getMonth(), selectedDate.getDate())}\n          >\n            {years.map(year => (\n              <option key={year} value={year}>{year}</option>\n            ))}\n          </select>\n          <select\n            value={selectedDate.getMonth()}\n            onChange={(e) => handleDateChange(selectedDate.getFullYear(), parseInt(e.target.value), selectedDate.getDate())}\n          >\n            {months.map((month, index) => (\n              <option key={month} value={index}>{month}</option>\n            ))}\n          </select>\n          <select\n            value={selectedDate.getDate()}\n            onChange={(e) => handleDateChange(selectedDate.getFullYear(), selectedDate.getMonth(), parseInt(e.target.value))}\n          >\n            {Array.from({ length: new Date(selectedDate.getFullYear(), selectedDate.getMonth() + 1, 0).getDate() }, (_, i) => i + 1).map(day => (\n              <option key={day} value={day}>{day}</option>\n            ))}\n          </select>\n        </div>\n      </div>\n      <div className=\"details-content\">\n        <div className=\"timeline-section\">\n          <h3>Today's Timeline</h3>\n          <div className=\"timeline\">\n            {dayTasks.map((task) => (\n              <div \n                key={task.taskId} \n                className={`timeline-item ${task.completed ? 'completed' : ''}`}\n                style={{ borderLeft: `5px solid ${getPriorityColor(task.priority)}` }}\n                onClick={() => toggleTask(task.taskId)}\n              >\n                <div className=\"task-content\">\n                  <div className=\"task-title\">\n                    {task.title}\n                    {task.recurring && <span className=\"recurring-badge\">🔄</span>}\n                  </div>\n                  <div className=\"task-time\">\n                    {formatTime12Hour(task.startTime)} - {formatTime12Hour(task.endTime)}\n                  </div>\n                  <div className=\"task-category\">\n                    {task.category}\n                  </div>\n                  <div className=\"task-priority\">\n                    Priority: {task.priority}\n                  </div>\n                  {task.description && (\n                    <div className=\"task-description\">\n                      {task.description}\n                    </div>\n                  )}\n                </div>\n                <div className=\"task-actions\">\n                  <button className=\"edit-button\" onClick={(e) => {\n                    e.stopPropagation();\n                    handleEditTask(task);\n                  }}>Edit</button>\n                  <button className=\"delete-button\" onClick={(e) => {\n                    e.stopPropagation();\n                    handleDeleteTask(task.taskId);\n                  }}>Delete</button>\n                </div>\n              </div>\n            ))}\n          </div>\n        </div>\n        <div className=\"right-section\">\n          <h3>Add Task</h3>\n          <div className=\"schedule-section\">\n            <div className=\"task-input-complex\">\n              <div className=\"input-row\">\n                <label>Task Category:</label>\n                <select value={newTask.category} onChange={(e) => handleInputChange('category', e.target.value)}>\n                  {categories.map(cat => (\n                    <option key={cat} value={cat}>{cat}</option>\n                  ))}\n                </select>\n              </div>\n              <div className=\"input-row\">\n                <label htmlFor=\"task-title\">Task Title:</label>\n                <input\n                  id=\"task-title\"\n                  type=\"text\"\n                  value={newTask.title}\n                  onChange={(e) => handleInputChange('title', e.target.value)}\n                  placeholder=\"Enter task title\"\n                  aria-invalid={errors.title ? 'true' : 'false'}\n                  aria-describedby={errors.title ? 'title-error' : undefined}\n                />\n                {errors.title && <span id=\"title-error\" className=\"error-message\">{errors.title}</span>}\n              </div>\n              <div className=\"input-row\">\n                <label>Task Description:</label>\n                <input\n                  type=\"text\"\n                  value={newTask.description}\n                  onChange={(e) => handleInputChange('description', e.target.value)}\n                  placeholder=\"Enter Task Description...\"\n                />\n              </div>\n              <div className=\"input-row\">\n                <label htmlFor=\"start-time\">Starting Time:</label>\n                <input\n                  id=\"start-time\"\n                  type=\"time\"\n                  value={newTask.startTime}\n                  onChange={(e) => handleInputChange('startTime', e.target.value)}\n                  aria-invalid={errors.startTime ? 'true' : 'false'}\n                  aria-describedby={errors.startTime ? 'start-time-error' : undefined}\n                />\n                {errors.startTime && <span id=\"start-time-error\" className=\"error-message\">{errors.startTime}</span>}\n              </div>\n              <div className=\"input-row\">\n                <label htmlFor=\"end-time\">Ending Time:</label>\n                <input\n                  id=\"end-time\"\n                  type=\"time\"\n                  value={newTask.endTime}\n                  onChange={(e) => handleInputChange('endTime', e.target.value)}\n                  aria-invalid={errors.endTime ? 'true' : 'false'}\n                  aria-describedby={errors.endTime ? 'end-time-error' : undefined}\n                />\n                {errors.endTime && <span id=\"end-time-error\" className=\"error-message\">{errors.endTime}</span>}\n              </div>\n              {errors.overlap && (\n                <div className=\"overlap-warning-popup\">\n                  <h3>Schedule Conflict</h3>\n                  <p>{errors.overlap}</p>\n                  <button className=\"close-button\" onClick={() => setErrors({})}>\n                    Close\n                  </button>\n                </div>\n              )}\n              <div className=\"input-row\">\n                <label>Priority:</label>\n                <select value={newTask.priority} onChange={(e) => handleInputChange('priority', e.target.value)}>\n                  {priorities.map(p => (\n                    <option key={p} value={p}>{p} Priority</option>\n                  ))}\n                </select>\n              </div>\n              <div className=\"input-row\">\n                <label>Recurring Task:</label>\n                <input\n                  type=\"checkbox\"\n                  checked={newTask.recurring}\n                  onChange={(e) => handleRecurringChange(e.target.checked)}\n                />\n              </div>\n              <div className=\"input-row\">\n                <button onClick={handleAddTask}>Add</button>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <RecurringOptionsModal\n        isOpen={recurringModalOpen}\n        onClose={() => setRecurringModalOpen(false)}\n        onSave={handleRecurringOptionsSave}\n        recurringOptions={recurringOptions}\n        setRecurringOptions={setRecurringOptions}\n      />\n\n      {/* Edit Task Modal */}\n      {editModalOpen && selectedTask && (\n        <div className=\"modal-overlay\">\n          <div className=\"modal-content\">\n            <div className=\"modal-header\">Edit Task</div>\n            <div className=\"input-row\">\n              <label>Title:</label>\n              <input\n                type=\"text\"\n                value={selectedTask.title}\n                onChange={(e) => setSelectedTask({ ...selectedTask, title: e.target.value })}\n              />\n            </div>\n            <div className=\"input-row\">\n              <label>Description:</label>\n              <input\n                type=\"text\"\n                value={selectedTask.description}\n                onChange={(e) => setSelectedTask({ ...selectedTask, description: e.target.value })}\n              />\n            </div>\n            <div className=\"input-row\">\n              <label>Start Time:</label>\n              <input\n                type=\"time\"\n                value={selectedTask.startTime}\n                onChange={(e) => setSelectedTask({ ...selectedTask, startTime: e.target.value })}\n              />\n            </div>\n            <div className=\"input-row\">\n              <label>End Time:</label>\n              <input\n                type=\"time\"\n                value={selectedTask.endTime}\n                onChange={(e) => setSelectedTask({ ...selectedTask, endTime: e.target.value })}\n              />\n            </div>\n            <div className=\"input-row\">\n              <label>Category:</label>\n              <select\n                value={selectedTask.category}\n                onChange={(e) => setSelectedTask({ ...selectedTask, category: e.target.value })}\n              >\n                {categories.map(cat => (\n                  <option key={cat} value={cat}>{cat}</option>\n                ))}\n              </select>\n            </div>\n            <div className=\"input-row\">\n              <label>Priority:</label>\n              <select\n                value={selectedTask.priority}\n                onChange={(e) => setSelectedTask({ ...selectedTask, priority: e.target.value })}\n              >\n                {priorities.map(p => (\n                  <option key={p} value={p}>{p}</option>\n                ))}\n              </select>\n            </div>\n            <div className=\"input-row\">\n              <label>Recurring:</label>\n              <input\n                type=\"checkbox\"\n                checked={selectedTask.recurring}\n                onChange={(e) => handleRecurringChange(e.target.checked)}\n              />\n            </div>\n            <div className=\"modal-buttons\">\n              <button className=\"save-btn\" onClick={handleSaveEdit}>Save</button>\n              <button className=\"cancel-btn\" onClick={() => setEditModalOpen(false)}>Cancel</button>\n            </div>\n          </div>\n        </div>\n      )}\n\n      {/* Confirmation Modal */}\n      {confirmModalOpen && (\n        <div className=\"modal-overlay\">\n          <div className=\"modal-content\">\n            <div className=\"modal-header\">Confirm Action</div>\n            <div className=\"confirm-message\">{confirmMessage}</div>\n            <div className=\"modal-buttons\">\n              <button className=\"save-btn\" onClick={() => handleConfirmAction('all')}>All Instances</button>\n              <button className=\"save-btn\" onClick={() => handleConfirmAction('single')}>Just This One</button>\n              <button className=\"cancel-btn\" onClick={() => handleConfirmAction('cancel')}>Cancel</button>\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default DayDetails;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}