{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\anne_\\\\Documents\\\\GitHub5\\\\CISC490Calendar\\\\src\\\\components\\\\CalendarView.js\",\n  _s = $RefreshSig$();\nimport React, { useRef, useEffect, useState, useMemo } from 'react';\nimport FullCalendar from '@fullcalendar/react';\nimport dayGridPlugin from '@fullcalendar/daygrid';\nimport timeGridPlugin from '@fullcalendar/timegrid';\nimport interactionPlugin from '@fullcalendar/interaction';\nimport RecurringOptionsModal from './RecurringOptionsModal';\n\n// Utility to get local YYYY-MM-DD\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst getLocalDateString = date => {\n  const d = new Date(date);\n  const year = d.getFullYear();\n  const month = String(d.getMonth() + 1).padStart(2, '0'); // Months are 0-based\n  const day = String(d.getDate()).padStart(2, '0');\n  return `${year}-${month}-${day}`;\n};\n\n// Utility to generate recurring event dates\nconst generateRecurringDates = (startDate, recurringOptions) => {\n  const dates = [];\n  const start = new Date(startDate);\n  const end = new Date(recurringOptions.endDate);\n  let currentDate = new Date(start);\n  while (currentDate <= end) {\n    if (recurringOptions.frequency === 'daily') {\n      dates.push(new Date(currentDate));\n      currentDate.setDate(currentDate.getDate() + recurringOptions.interval);\n    } else if (recurringOptions.frequency === 'weekly') {\n      if (recurringOptions.weekDays.includes(currentDate.getDay())) {\n        dates.push(new Date(currentDate));\n      }\n      currentDate.setDate(currentDate.getDate() + 1);\n      if (currentDate.getDay() === 0) {\n        currentDate.setDate(currentDate.getDate() + (recurringOptions.interval - 1) * 7);\n      }\n    } else if (recurringOptions.frequency === 'monthly') {\n      dates.push(new Date(currentDate));\n      currentDate.setMonth(currentDate.getMonth() + recurringOptions.interval);\n    } else if (recurringOptions.frequency === 'yearly') {\n      dates.push(new Date(currentDate));\n      currentDate.setFullYear(currentDate.getFullYear() + recurringOptions.interval);\n    }\n  }\n  return dates;\n};\nfunction CalendarView({\n  selectedDate,\n  setSelectedDate,\n  events,\n  setEvents\n}) {\n  _s();\n  const calendarRef = useRef(null);\n  const [createModalOpen, setCreateModalOpen] = useState(false);\n  const [editModalOpen, setEditModalOpen] = useState(false);\n  const [selectedEvent, setSelectedEvent] = useState(null);\n  const [recurringModalOpen, setRecurringModalOpen] = useState(false);\n  const [recurringOptions, setRecurringOptions] = useState({\n    frequency: 'daily',\n    weekDays: [],\n    endDate: '',\n    interval: 1\n  });\n  const [newEvent, setNewEvent] = useState({\n    title: '',\n    description: '',\n    startTime: '',\n    endTime: '',\n    category: 'Work',\n    priority: 'Medium',\n    recurring: false,\n    date: getLocalDateString(selectedDate)\n  });\n  const [confirmModalOpen, setConfirmModalOpen] = useState(false);\n  const [confirmAction, setConfirmAction] = useState(null);\n  const [confirmMessage, setConfirmMessage] = useState('');\n  const [pendingEvent, setPendingEvent] = useState(null);\n  const [deleteConfirmModalOpen, setDeleteConfirmModalOpen] = useState(false);\n  const [taskToDelete, setTaskToDelete] = useState(null);\n  const [lastAction, setLastAction] = useState(null);\n  const [showUndo, setShowUndo] = useState(false);\n  const [errorMessage, setErrorMessage] = useState('');\n  useEffect(() => {\n    if (calendarRef.current) {\n      const calendarApi = calendarRef.current.getApi();\n      calendarApi.gotoDate(selectedDate);\n      console.log('Calendar initialized with selectedDate:', selectedDate, 'Local date:', getLocalDateString(selectedDate));\n    }\n  }, [selectedDate]);\n  useEffect(() => {\n    console.log('CalendarView events:', events);\n  }, [events]);\n  const handleDateClick = info => {\n    const startTime = info.date.toTimeString().slice(0, 5); // e.g., \"13:00\"\n    const [hours, minutes] = startTime.split(':').map(Number);\n    const endHours = (hours + 1) % 24;\n    const endTime = `${endHours.toString().padStart(2, '0')}:${minutes.toString().padStart(2, '0')}`;\n    const clickedDate = getLocalDateString(info.date);\n    console.log('handleDateClick - Clicked date:', info.date, 'Normalized:', clickedDate);\n    setNewEvent({\n      ...newEvent,\n      date: clickedDate,\n      startTime,\n      endTime\n    });\n    setCreateModalOpen(true);\n  };\n  const handleEventClick = info => {\n    const event = events.find(e => e.taskId === info.event.id.toString());\n    if (event) {\n      console.log('Clicked event:', event);\n      setSelectedEvent(event);\n      setEditModalOpen(true);\n    } else {\n      console.error(`Event with ID ${info.event.id} not found in events array`, events);\n    }\n  };\n  const handleEventDrop = info => {\n    const updatedEvent = {\n      ...info.event.extendedProps,\n      taskId: info.event.id.toString(),\n      title: info.event.title,\n      date: getLocalDateString(info.event.start),\n      startTime: info.event.start.toTimeString().slice(0, 5),\n      endTime: info.event.end ? info.event.end.toTimeString().slice(0, 5) : info.event.start.toTimeString().slice(0, 5),\n      metadata: info.event.extendedProps.metadata || {\n        createdBy: 'CurrentUser',\n        lastUpdated: new Date().toISOString()\n      }\n    };\n    console.log('Event dropped:', updatedEvent);\n    setEvents(prevEvents => prevEvents.map(ev => ev.taskId === updatedEvent.taskId ? updatedEvent : ev));\n  };\n  const handleRecurringChange = checked => {\n    if (selectedEvent) {\n      setSelectedEvent({\n        ...selectedEvent,\n        recurring: checked\n      });\n      if (checked) {\n        setRecurringModalOpen(true);\n      }\n    } else {\n      setNewEvent({\n        ...newEvent,\n        recurring: checked\n      });\n      if (checked) {\n        setRecurringModalOpen(true);\n      }\n    }\n  };\n  const handleRecurringOptionsSave = options => {\n    if (selectedEvent) {\n      setSelectedEvent({\n        ...selectedEvent,\n        recurringOptions: options\n      });\n    } else {\n      setNewEvent({\n        ...newEvent,\n        recurringOptions: options\n      });\n    }\n  };\n  const handleCreateEvent = () => {\n    if (newEvent.title.trim() && newEvent.startTime && newEvent.endTime) {\n      const eventData = {\n        taskId: Date.now().toString(),\n        title: newEvent.title,\n        description: newEvent.description || '',\n        startTime: newEvent.startTime,\n        endTime: newEvent.endTime,\n        category: newEvent.category,\n        priority: newEvent.priority || 'Medium',\n        recurring: newEvent.recurring,\n        recurringOptions: newEvent.recurring ? newEvent.recurringOptions : null,\n        date: newEvent.date,\n        metadata: {\n          createdBy: 'CurrentUser',\n          lastUpdated: new Date().toISOString()\n        }\n      };\n      let eventsToAdd = [eventData];\n      if (eventData.recurring && eventData.recurringOptions) {\n        const recurringDates = generateRecurringDates(new Date(`${eventData.date}T${eventData.startTime}`), eventData.recurringOptions);\n        eventsToAdd = recurringDates.map((date, index) => ({\n          ...eventData,\n          taskId: `${eventData.taskId}-${index}`,\n          date: getLocalDateString(date),\n          startTime: date.toTimeString().slice(0, 5),\n          endTime: new Date(date.getTime() + (new Date(`1970/01/01 ${eventData.endTime}`).getTime() - new Date(`1970/01/01 ${eventData.startTime}`).getTime())).toTimeString().slice(0, 5)\n        }));\n      }\n      setEvents(prevEvents => [...prevEvents, ...eventsToAdd]);\n      setCreateModalOpen(false);\n      setNewEvent({\n        title: '',\n        description: '',\n        startTime: '',\n        endTime: '',\n        category: 'Work',\n        priority: 'Medium',\n        recurring: false,\n        date: getLocalDateString(selectedDate)\n      });\n    }\n  };\n  const handleEditEvent = () => {\n    if (selectedEvent.title.trim() && selectedEvent.startTime && selectedEvent.endTime) {\n      const updatedEvent = {\n        ...selectedEvent,\n        priority: selectedEvent.priority || 'Medium',\n        metadata: {\n          ...selectedEvent.metadata,\n          lastUpdated: new Date().toISOString()\n        }\n      };\n      if (updatedEvent.recurring) {\n        setConfirmMessage('This is a recurring event. Would you like to edit all instances or just this one?');\n        setConfirmAction('edit');\n        setPendingEvent(updatedEvent);\n        setConfirmModalOpen(true);\n      } else {\n        setEvents(prevEvents => prevEvents.map(ev => ev.taskId === updatedEvent.taskId ? updatedEvent : ev));\n        setEditModalOpen(false);\n      }\n    }\n  };\n  const handleDeleteEvent = () => {\n    if (selectedEvent) {\n      setTaskToDelete(selectedEvent);\n      setDeleteConfirmModalOpen(true);\n    }\n  };\n  const confirmDelete = () => {\n    if (!taskToDelete) return;\n    if (taskToDelete.recurring) {\n      setConfirmMessage('This is a recurring event. Would you like to delete all instances or just this one?');\n      setConfirmAction('delete');\n      setPendingEvent(taskToDelete);\n      setConfirmModalOpen(true);\n    } else {\n      try {\n        const updatedEvents = events.filter(e => e.taskId !== taskToDelete.taskId);\n\n        // Save to localStorage before updating state\n        localStorage.setItem('tasks', JSON.stringify(updatedEvents));\n\n        // Store the action for undo\n        setLastAction({\n          type: 'delete',\n          tasks: [taskToDelete],\n          previousEvents: [...events]\n        });\n        setEvents(updatedEvents);\n        setShowUndo(true);\n        setTimeout(() => setShowUndo(false), 5000);\n        setEditModalOpen(false);\n      } catch (error) {\n        console.error('Error deleting event:', error);\n        setErrorMessage('Failed to delete event. Please try again.');\n      }\n    }\n    setDeleteConfirmModalOpen(false);\n    setTaskToDelete(null);\n  };\n  const handleConfirmAction = action => {\n    if (action === 'cancel') {\n      setConfirmModalOpen(false);\n      setPendingEvent(null);\n      return;\n    }\n    if (confirmAction === 'edit' && pendingEvent) {\n      let eventsToUpdate = [pendingEvent];\n      if (action === 'all' && pendingEvent.recurring && pendingEvent.recurringOptions) {\n        const recurringDates = generateRecurringDates(new Date(`${pendingEvent.date}T${pendingEvent.startTime}`), pendingEvent.recurringOptions);\n        eventsToUpdate = recurringDates.map((date, index) => ({\n          ...pendingEvent,\n          taskId: `${pendingEvent.taskId}-${index}`,\n          date: getLocalDateString(date),\n          startTime: date.toTimeString().slice(0, 5),\n          endTime: new Date(date.getTime() + (new Date(`1970/01/01 ${pendingEvent.endTime}`).getTime() - new Date(`1970/01/01 ${pendingEvent.startTime}`).getTime())).toTimeString().slice(0, 5)\n        }));\n      }\n      setEvents(prevEvents => {\n        const baseTaskId = pendingEvent.taskId.split('-')[0];\n        return prevEvents.filter(ev => action === 'single' ? ev.taskId !== pendingEvent.taskId : !ev.taskId.startsWith(baseTaskId)).concat(eventsToUpdate);\n      });\n    } else if (confirmAction === 'delete' && pendingEvent) {\n      if (action === 'all') {\n        const baseTaskId = pendingEvent.taskId.split('-')[0];\n        setEvents(prevEvents => prevEvents.filter(ev => !ev.taskId.startsWith(baseTaskId)));\n      } else if (action === 'single') {\n        setEvents(prevEvents => prevEvents.filter(ev => ev.taskId !== pendingEvent.taskId));\n      }\n    }\n    setConfirmModalOpen(false);\n    setPendingEvent(null);\n    setEditModalOpen(false);\n  };\n  const handleUndo = () => {\n    if (!lastAction) return;\n    try {\n      let updatedEvents;\n      if (lastAction.type === 'delete') {\n        // Undo delete by adding back deleted tasks\n        updatedEvents = [...events, ...lastAction.tasks];\n      } else if (lastAction.type === 'edit') {\n        // Undo edit by restoring previous version of tasks\n        updatedEvents = events.map(event => {\n          const previousVersion = lastAction.previousEvents.find(e => e.taskId === event.taskId);\n          return previousVersion || event;\n        });\n      }\n\n      // Save to localStorage\n      localStorage.setItem('tasks', JSON.stringify(updatedEvents));\n      setEvents(updatedEvents);\n      setShowUndo(false);\n      setLastAction(null);\n    } catch (error) {\n      console.error('Error undoing action:', error);\n      setErrorMessage('Failed to undo last action. Please try again.');\n    }\n  };\n  const calendarEvents = useMemo(() => {\n    return events.map(event => {\n      const normalizedEvent = {\n        ...event,\n        taskId: event.taskId.toString(),\n        title: event.title || 'Untitled',\n        startTime: event.startTime || '00:00',\n        endTime: event.endTime || event.startTime || '00:00',\n        date: event.date || getLocalDateString(selectedDate),\n        priority: event.priority || 'Medium',\n        category: event.category || 'Work',\n        recurring: event.recurring || false,\n        metadata: event.metadata || {\n          createdBy: 'CurrentUser',\n          lastUpdated: new Date().toISOString()\n        }\n      };\n      return {\n        id: normalizedEvent.taskId,\n        title: normalizedEvent.title,\n        start: `${normalizedEvent.date}T${normalizedEvent.startTime}`,\n        end: `${normalizedEvent.date}T${normalizedEvent.endTime}`,\n        extendedProps: normalizedEvent\n      };\n    });\n  }, [events, selectedDate]);\n  const categories = ['Work', 'Personal', 'School'];\n  const priorities = ['Low', 'Medium', 'High', 'Critical'];\n  const eventClassNames = eventInfo => {\n    const priority = eventInfo.event.extendedProps.priority || 'Medium';\n    return [`priority-${priority.toLowerCase()}`];\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"calendar-view\",\n    children: [errorMessage && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error-banner\",\n      role: \"alert\",\n      children: [errorMessage, /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setErrorMessage(''),\n        \"aria-label\": \"Dismiss error\",\n        children: \"\\xD7\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 380,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 378,\n      columnNumber: 9\n    }, this), showUndo && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"undo-notification\",\n      role: \"alert\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"undo-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"undo-message\",\n          children: (lastAction === null || lastAction === void 0 ? void 0 : lastAction.type) === 'delete' ? /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [\"Event \\\"\", lastAction.tasks[0].title, \"\\\" deleted\"]\n          }, void 0, true) : (lastAction === null || lastAction === void 0 ? void 0 : lastAction.type) === 'edit' ? /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [\"Event \\\"\", lastAction.tasks[0].title, \"\\\" edited\"]\n          }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [\"Event \\\"\", lastAction.tasks[0].title, \"\\\" added\"]\n          }, void 0, true)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 389,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"undo-button\",\n          onClick: handleUndo,\n          children: \"Undo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 398,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 388,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"undo-timer\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 402,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 387,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(FullCalendar, {\n      ref: calendarRef,\n      plugins: [dayGridPlugin, timeGridPlugin, interactionPlugin],\n      initialView: \"timeGridWeek\",\n      headerToolbar: {\n        left: 'prev,next today',\n        center: 'title',\n        right: 'timeGridWeek,timeGridDay'\n      },\n      events: calendarEvents,\n      editable: true,\n      selectable: true,\n      eventDrop: handleEventDrop,\n      eventClick: handleEventClick,\n      dateClick: handleDateClick,\n      allDaySlot: false,\n      snapDuration: \"00:15\",\n      eventClassNames: eventClassNames,\n      height: \"100%\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 406,\n      columnNumber: 7\n    }, this), createModalOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal-overlay\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-header\",\n          children: \"Create New Event\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 431,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-row\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Title:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 433,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: newEvent.title,\n            onChange: e => setNewEvent({\n              ...newEvent,\n              title: e.target.value\n            }),\n            placeholder: \"Enter event title...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 434,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 432,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-row\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Description:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 442,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: newEvent.description,\n            onChange: e => setNewEvent({\n              ...newEvent,\n              description: e.target.value\n            }),\n            placeholder: \"Enter description...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 443,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 441,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-row\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Start Time:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 451,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"time\",\n            value: newEvent.startTime,\n            onChange: e => setNewEvent({\n              ...newEvent,\n              startTime: e.target.value\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 452,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 450,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-row\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"End Time:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 459,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"time\",\n            value: newEvent.endTime,\n            onChange: e => setNewEvent({\n              ...newEvent,\n              endTime: e.target.value\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 460,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 458,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-row\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Category:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 467,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            value: newEvent.category,\n            onChange: e => setNewEvent({\n              ...newEvent,\n              category: e.target.value\n            }),\n            children: categories.map(cat => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: cat,\n              children: cat\n            }, cat, false, {\n              fileName: _jsxFileName,\n              lineNumber: 473,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 468,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 466,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-row\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Priority:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 478,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            value: newEvent.priority,\n            onChange: e => setNewEvent({\n              ...newEvent,\n              priority: e.target.value\n            }),\n            children: priorities.map(p => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: p,\n              children: p\n            }, p, false, {\n              fileName: _jsxFileName,\n              lineNumber: 484,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 479,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 477,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-row\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Recurring:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 489,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            checked: newEvent.recurring,\n            onChange: e => handleRecurringChange(e.target.checked)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 490,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 488,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-buttons\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"save-btn\",\n            onClick: handleCreateEvent,\n            children: \"Save\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 497,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"cancel-btn\",\n            onClick: () => setCreateModalOpen(false),\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 498,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 496,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 430,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 429,\n      columnNumber: 9\n    }, this), editModalOpen && selectedEvent && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal-overlay\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-header\",\n          children: \"Edit Event\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 508,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-row\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Title:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 510,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: selectedEvent.title,\n            onChange: e => setSelectedEvent({\n              ...selectedEvent,\n              title: e.target.value\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 511,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 509,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-row\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Description:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 518,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: selectedEvent.description,\n            onChange: e => setSelectedEvent({\n              ...selectedEvent,\n              description: e.target.value\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 519,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 517,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-row\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Start Time:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 526,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"time\",\n            value: selectedEvent.startTime,\n            onChange: e => setSelectedEvent({\n              ...selectedEvent,\n              startTime: e.target.value\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 527,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 525,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-row\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"End Time:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 534,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"time\",\n            value: selectedEvent.endTime,\n            onChange: e => setSelectedEvent({\n              ...selectedEvent,\n              endTime: e.target.value\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 535,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 533,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-row\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Category:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 542,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            value: selectedEvent.category,\n            onChange: e => setSelectedEvent({\n              ...selectedEvent,\n              category: e.target.value\n            }),\n            children: categories.map(cat => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: cat,\n              children: cat\n            }, cat, false, {\n              fileName: _jsxFileName,\n              lineNumber: 548,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 543,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 541,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-row\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Priority:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 553,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            value: selectedEvent.priority,\n            onChange: e => setSelectedEvent({\n              ...selectedEvent,\n              priority: e.target.value\n            }),\n            children: priorities.map(p => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: p,\n              children: p\n            }, p, false, {\n              fileName: _jsxFileName,\n              lineNumber: 559,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 554,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 552,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-row\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Recurring:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 564,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            checked: selectedEvent.recurring,\n            onChange: e => handleRecurringChange(e.target.checked)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 565,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 563,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-buttons\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"save-btn\",\n            onClick: handleEditEvent,\n            children: \"Save\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 572,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"delete-btn\",\n            onClick: handleDeleteEvent,\n            children: \"Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 573,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"cancel-btn\",\n            onClick: () => setEditModalOpen(false),\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 574,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 571,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 507,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 506,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(RecurringOptionsModal, {\n      isOpen: recurringModalOpen,\n      onClose: () => setRecurringModalOpen(false),\n      onSave: handleRecurringOptionsSave,\n      recurringOptions: recurringOptions,\n      setRecurringOptions: setRecurringOptions\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 581,\n      columnNumber: 7\n    }, this), confirmModalOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal-overlay\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-header\",\n          children: \"Confirm Action\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 593,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"confirm-message\",\n          children: confirmMessage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 594,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-buttons\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"save-btn\",\n            onClick: () => handleConfirmAction('all'),\n            children: \"All Instances\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 596,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"save-btn\",\n            onClick: () => handleConfirmAction('single'),\n            children: \"Just This One\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 597,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"cancel-btn\",\n            onClick: () => handleConfirmAction('cancel'),\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 598,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 595,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 592,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 591,\n      columnNumber: 9\n    }, this), deleteConfirmModalOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal-overlay\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-header\",\n          children: \"Confirm Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 608,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"confirm-message\",\n          children: [\"Are you sure you want to delete \\\"\", taskToDelete === null || taskToDelete === void 0 ? void 0 : taskToDelete.title, \"\\\"?\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 611,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"warning-text\",\n            children: \"This action can be undone for the next 5 seconds.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 612,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 609,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-buttons\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"delete-btn\",\n            onClick: confirmDelete,\n            children: \"Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 615,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"cancel-btn\",\n            onClick: () => {\n              setDeleteConfirmModalOpen(false);\n              setTaskToDelete(null);\n            },\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 616,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 614,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 607,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 606,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 376,\n    columnNumber: 5\n  }, this);\n}\n_s(CalendarView, \"v8ZAK35lhExL/ZADvEEWd4tAA7A=\");\n_c = CalendarView;\nexport default CalendarView;\nvar _c;\n$RefreshReg$(_c, \"CalendarView\");","map":{"version":3,"names":["React","useRef","useEffect","useState","useMemo","FullCalendar","dayGridPlugin","timeGridPlugin","interactionPlugin","RecurringOptionsModal","jsxDEV","_jsxDEV","Fragment","_Fragment","getLocalDateString","date","d","Date","year","getFullYear","month","String","getMonth","padStart","day","getDate","generateRecurringDates","startDate","recurringOptions","dates","start","end","endDate","currentDate","frequency","push","setDate","interval","weekDays","includes","getDay","setMonth","setFullYear","CalendarView","selectedDate","setSelectedDate","events","setEvents","_s","calendarRef","createModalOpen","setCreateModalOpen","editModalOpen","setEditModalOpen","selectedEvent","setSelectedEvent","recurringModalOpen","setRecurringModalOpen","setRecurringOptions","newEvent","setNewEvent","title","description","startTime","endTime","category","priority","recurring","confirmModalOpen","setConfirmModalOpen","confirmAction","setConfirmAction","confirmMessage","setConfirmMessage","pendingEvent","setPendingEvent","deleteConfirmModalOpen","setDeleteConfirmModalOpen","taskToDelete","setTaskToDelete","lastAction","setLastAction","showUndo","setShowUndo","errorMessage","setErrorMessage","current","calendarApi","getApi","gotoDate","console","log","handleDateClick","info","toTimeString","slice","hours","minutes","split","map","Number","endHours","toString","clickedDate","handleEventClick","event","find","e","taskId","id","error","handleEventDrop","updatedEvent","extendedProps","metadata","createdBy","lastUpdated","toISOString","prevEvents","ev","handleRecurringChange","checked","handleRecurringOptionsSave","options","handleCreateEvent","trim","eventData","now","eventsToAdd","recurringDates","index","getTime","handleEditEvent","handleDeleteEvent","confirmDelete","updatedEvents","filter","localStorage","setItem","JSON","stringify","type","tasks","previousEvents","setTimeout","handleConfirmAction","action","eventsToUpdate","baseTaskId","startsWith","concat","handleUndo","previousVersion","calendarEvents","normalizedEvent","categories","priorities","eventClassNames","eventInfo","toLowerCase","className","children","role","onClick","fileName","_jsxFileName","lineNumber","columnNumber","ref","plugins","initialView","headerToolbar","left","center","right","editable","selectable","eventDrop","eventClick","dateClick","allDaySlot","snapDuration","height","value","onChange","target","placeholder","cat","p","isOpen","onClose","onSave","_c","$RefreshReg$"],"sources":["C:/Users/anne_/Documents/GitHub5/CISC490Calendar/src/components/CalendarView.js"],"sourcesContent":["import React, { useRef, useEffect, useState, useMemo } from 'react';\r\nimport FullCalendar from '@fullcalendar/react';\r\nimport dayGridPlugin from '@fullcalendar/daygrid';\r\nimport timeGridPlugin from '@fullcalendar/timegrid';\r\nimport interactionPlugin from '@fullcalendar/interaction';\r\nimport RecurringOptionsModal from './RecurringOptionsModal';\r\n\r\n// Utility to get local YYYY-MM-DD\r\nconst getLocalDateString = (date) => {\r\n  const d = new Date(date);\r\n  const year = d.getFullYear();\r\n  const month = String(d.getMonth() + 1).padStart(2, '0'); // Months are 0-based\r\n  const day = String(d.getDate()).padStart(2, '0');\r\n  return `${year}-${month}-${day}`;\r\n};\r\n\r\n// Utility to generate recurring event dates\r\nconst generateRecurringDates = (startDate, recurringOptions) => {\r\n  const dates = [];\r\n  const start = new Date(startDate);\r\n  const end = new Date(recurringOptions.endDate);\r\n  let currentDate = new Date(start);\r\n\r\n  while (currentDate <= end) {\r\n    if (recurringOptions.frequency === 'daily') {\r\n      dates.push(new Date(currentDate));\r\n      currentDate.setDate(currentDate.getDate() + recurringOptions.interval);\r\n    } else if (recurringOptions.frequency === 'weekly') {\r\n      if (recurringOptions.weekDays.includes(currentDate.getDay())) {\r\n        dates.push(new Date(currentDate));\r\n      }\r\n      currentDate.setDate(currentDate.getDate() + 1);\r\n      if (currentDate.getDay() === 0) {\r\n        currentDate.setDate(currentDate.getDate() + (recurringOptions.interval - 1) * 7);\r\n      }\r\n    } else if (recurringOptions.frequency === 'monthly') {\r\n      dates.push(new Date(currentDate));\r\n      currentDate.setMonth(currentDate.getMonth() + recurringOptions.interval);\r\n    } else if (recurringOptions.frequency === 'yearly') {\r\n      dates.push(new Date(currentDate));\r\n      currentDate.setFullYear(currentDate.getFullYear() + recurringOptions.interval);\r\n    }\r\n  }\r\n\r\n  return dates;\r\n};\r\n\r\nfunction CalendarView({ selectedDate, setSelectedDate, events, setEvents }) {\r\n  const calendarRef = useRef(null);\r\n  const [createModalOpen, setCreateModalOpen] = useState(false);\r\n  const [editModalOpen, setEditModalOpen] = useState(false);\r\n  const [selectedEvent, setSelectedEvent] = useState(null);\r\n  const [recurringModalOpen, setRecurringModalOpen] = useState(false);\r\n  const [recurringOptions, setRecurringOptions] = useState({\r\n    frequency: 'daily',\r\n    weekDays: [],\r\n    endDate: '',\r\n    interval: 1\r\n  });\r\n  const [newEvent, setNewEvent] = useState({\r\n    title: '',\r\n    description: '',\r\n    startTime: '',\r\n    endTime: '',\r\n    category: 'Work',\r\n    priority: 'Medium',\r\n    recurring: false,\r\n    date: getLocalDateString(selectedDate),\r\n  });\r\n  const [confirmModalOpen, setConfirmModalOpen] = useState(false);\r\n  const [confirmAction, setConfirmAction] = useState(null);\r\n  const [confirmMessage, setConfirmMessage] = useState('');\r\n  const [pendingEvent, setPendingEvent] = useState(null);\r\n  const [deleteConfirmModalOpen, setDeleteConfirmModalOpen] = useState(false);\r\n  const [taskToDelete, setTaskToDelete] = useState(null);\r\n  const [lastAction, setLastAction] = useState(null);\r\n  const [showUndo, setShowUndo] = useState(false);\r\n  const [errorMessage, setErrorMessage] = useState('');\r\n\r\n  useEffect(() => {\r\n    if (calendarRef.current) {\r\n      const calendarApi = calendarRef.current.getApi();\r\n      calendarApi.gotoDate(selectedDate);\r\n      console.log('Calendar initialized with selectedDate:', selectedDate, 'Local date:', getLocalDateString(selectedDate));\r\n    }\r\n  }, [selectedDate]);\r\n\r\n  useEffect(() => {\r\n    console.log('CalendarView events:', events);\r\n  }, [events]);\r\n\r\n  const handleDateClick = (info) => {\r\n    const startTime = info.date.toTimeString().slice(0, 5); // e.g., \"13:00\"\r\n    const [hours, minutes] = startTime.split(':').map(Number);\r\n    const endHours = (hours + 1) % 24;\r\n    const endTime = `${endHours.toString().padStart(2, '0')}:${minutes.toString().padStart(2, '0')}`;\r\n    const clickedDate = getLocalDateString(info.date);\r\n    console.log('handleDateClick - Clicked date:', info.date, 'Normalized:', clickedDate);\r\n    setNewEvent({\r\n      ...newEvent,\r\n      date: clickedDate,\r\n      startTime,\r\n      endTime,\r\n    });\r\n    setCreateModalOpen(true);\r\n  };\r\n\r\n  const handleEventClick = (info) => {\r\n    const event = events.find(e => e.taskId === info.event.id.toString());\r\n    if (event) {\r\n      console.log('Clicked event:', event);\r\n      setSelectedEvent(event);\r\n      setEditModalOpen(true);\r\n    } else {\r\n      console.error(`Event with ID ${info.event.id} not found in events array`, events);\r\n    }\r\n  };\r\n\r\n  const handleEventDrop = (info) => {\r\n    const updatedEvent = {\r\n      ...info.event.extendedProps,\r\n      taskId: info.event.id.toString(),\r\n      title: info.event.title,\r\n      date: getLocalDateString(info.event.start),\r\n      startTime: info.event.start.toTimeString().slice(0, 5),\r\n      endTime: info.event.end ? info.event.end.toTimeString().slice(0, 5) : info.event.start.toTimeString().slice(0, 5),\r\n      metadata: info.event.extendedProps.metadata || { createdBy: 'CurrentUser', lastUpdated: new Date().toISOString() },\r\n    };\r\n    console.log('Event dropped:', updatedEvent);\r\n    setEvents(prevEvents =>\r\n      prevEvents.map(ev => (ev.taskId === updatedEvent.taskId ? updatedEvent : ev))\r\n    );\r\n  };\r\n\r\n  const handleRecurringChange = (checked) => {\r\n    if (selectedEvent) {\r\n      setSelectedEvent({ ...selectedEvent, recurring: checked });\r\n      if (checked) {\r\n        setRecurringModalOpen(true);\r\n      }\r\n    } else {\r\n      setNewEvent({ ...newEvent, recurring: checked });\r\n      if (checked) {\r\n        setRecurringModalOpen(true);\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleRecurringOptionsSave = (options) => {\r\n    if (selectedEvent) {\r\n      setSelectedEvent({ ...selectedEvent, recurringOptions: options });\r\n    } else {\r\n      setNewEvent({ ...newEvent, recurringOptions: options });\r\n    }\r\n  };\r\n\r\n  const handleCreateEvent = () => {\r\n    if (newEvent.title.trim() && newEvent.startTime && newEvent.endTime) {\r\n      const eventData = {\r\n        taskId: Date.now().toString(),\r\n        title: newEvent.title,\r\n        description: newEvent.description || '',\r\n        startTime: newEvent.startTime,\r\n        endTime: newEvent.endTime,\r\n        category: newEvent.category,\r\n        priority: newEvent.priority || 'Medium',\r\n        recurring: newEvent.recurring,\r\n        recurringOptions: newEvent.recurring ? newEvent.recurringOptions : null,\r\n        date: newEvent.date,\r\n        metadata: { createdBy: 'CurrentUser', lastUpdated: new Date().toISOString() },\r\n      };\r\n\r\n      let eventsToAdd = [eventData];\r\n\r\n      if (eventData.recurring && eventData.recurringOptions) {\r\n        const recurringDates = generateRecurringDates(\r\n          new Date(`${eventData.date}T${eventData.startTime}`),\r\n          eventData.recurringOptions\r\n        );\r\n\r\n        eventsToAdd = recurringDates.map((date, index) => ({\r\n          ...eventData,\r\n          taskId: `${eventData.taskId}-${index}`,\r\n          date: getLocalDateString(date),\r\n          startTime: date.toTimeString().slice(0, 5),\r\n          endTime: new Date(date.getTime() + (new Date(`1970/01/01 ${eventData.endTime}`).getTime() - new Date(`1970/01/01 ${eventData.startTime}`).getTime())).toTimeString().slice(0, 5),\r\n        }));\r\n      }\r\n\r\n      setEvents(prevEvents => [...prevEvents, ...eventsToAdd]);\r\n      setCreateModalOpen(false);\r\n      setNewEvent({\r\n        title: '',\r\n        description: '',\r\n        startTime: '',\r\n        endTime: '',\r\n        category: 'Work',\r\n        priority: 'Medium',\r\n        recurring: false,\r\n        date: getLocalDateString(selectedDate),\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleEditEvent = () => {\r\n    if (selectedEvent.title.trim() && selectedEvent.startTime && selectedEvent.endTime) {\r\n      const updatedEvent = {\r\n        ...selectedEvent,\r\n        priority: selectedEvent.priority || 'Medium',\r\n        metadata: { ...selectedEvent.metadata, lastUpdated: new Date().toISOString() },\r\n      };\r\n\r\n      if (updatedEvent.recurring) {\r\n        setConfirmMessage('This is a recurring event. Would you like to edit all instances or just this one?');\r\n        setConfirmAction('edit');\r\n        setPendingEvent(updatedEvent);\r\n        setConfirmModalOpen(true);\r\n      } else {\r\n        setEvents(prevEvents =>\r\n          prevEvents.map(ev => (ev.taskId === updatedEvent.taskId ? updatedEvent : ev))\r\n        );\r\n        setEditModalOpen(false);\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleDeleteEvent = () => {\r\n    if (selectedEvent) {\r\n      setTaskToDelete(selectedEvent);\r\n      setDeleteConfirmModalOpen(true);\r\n    }\r\n  };\r\n\r\n  const confirmDelete = () => {\r\n    if (!taskToDelete) return;\r\n\r\n    if (taskToDelete.recurring) {\r\n      setConfirmMessage('This is a recurring event. Would you like to delete all instances or just this one?');\r\n      setConfirmAction('delete');\r\n      setPendingEvent(taskToDelete);\r\n      setConfirmModalOpen(true);\r\n    } else {\r\n      try {\r\n        const updatedEvents = events.filter(e => e.taskId !== taskToDelete.taskId);\r\n        \r\n        // Save to localStorage before updating state\r\n        localStorage.setItem('tasks', JSON.stringify(updatedEvents));\r\n        \r\n        // Store the action for undo\r\n        setLastAction({\r\n          type: 'delete',\r\n          tasks: [taskToDelete],\r\n          previousEvents: [...events]\r\n        });\r\n        \r\n        setEvents(updatedEvents);\r\n        setShowUndo(true);\r\n        setTimeout(() => setShowUndo(false), 5000);\r\n        setEditModalOpen(false);\r\n      } catch (error) {\r\n        console.error('Error deleting event:', error);\r\n        setErrorMessage('Failed to delete event. Please try again.');\r\n      }\r\n    }\r\n    setDeleteConfirmModalOpen(false);\r\n    setTaskToDelete(null);\r\n  };\r\n\r\n  const handleConfirmAction = (action) => {\r\n    if (action === 'cancel') {\r\n      setConfirmModalOpen(false);\r\n      setPendingEvent(null);\r\n      return;\r\n    }\r\n\r\n    if (confirmAction === 'edit' && pendingEvent) {\r\n      let eventsToUpdate = [pendingEvent];\r\n      if (action === 'all' && pendingEvent.recurring && pendingEvent.recurringOptions) {\r\n        const recurringDates = generateRecurringDates(\r\n          new Date(`${pendingEvent.date}T${pendingEvent.startTime}`),\r\n          pendingEvent.recurringOptions\r\n        );\r\n\r\n        eventsToUpdate = recurringDates.map((date, index) => ({\r\n          ...pendingEvent,\r\n          taskId: `${pendingEvent.taskId}-${index}`,\r\n          date: getLocalDateString(date),\r\n          startTime: date.toTimeString().slice(0, 5),\r\n          endTime: new Date(date.getTime() + (new Date(`1970/01/01 ${pendingEvent.endTime}`).getTime() - new Date(`1970/01/01 ${pendingEvent.startTime}`).getTime())).toTimeString().slice(0, 5),\r\n        }));\r\n      }\r\n      \r\n      setEvents(prevEvents => {\r\n        const baseTaskId = pendingEvent.taskId.split('-')[0];\r\n        return prevEvents\r\n          .filter(ev => action === 'single' ? ev.taskId !== pendingEvent.taskId : !ev.taskId.startsWith(baseTaskId))\r\n          .concat(eventsToUpdate);\r\n      });\r\n      \r\n    } else if (confirmAction === 'delete' && pendingEvent) {\r\n      if (action === 'all') {\r\n        const baseTaskId = pendingEvent.taskId.split('-')[0];\r\n        setEvents(prevEvents => prevEvents.filter(ev => !ev.taskId.startsWith(baseTaskId)));\r\n      } else if (action === 'single') {\r\n        setEvents(prevEvents => prevEvents.filter(ev => ev.taskId !== pendingEvent.taskId));\r\n      }\r\n    }\r\n    \r\n    setConfirmModalOpen(false);\r\n    setPendingEvent(null);\r\n    setEditModalOpen(false);\r\n  };\r\n\r\n  const handleUndo = () => {\r\n    if (!lastAction) return;\r\n\r\n    try {\r\n      let updatedEvents;\r\n      \r\n      if (lastAction.type === 'delete') {\r\n        // Undo delete by adding back deleted tasks\r\n        updatedEvents = [...events, ...lastAction.tasks];\r\n      } else if (lastAction.type === 'edit') {\r\n        // Undo edit by restoring previous version of tasks\r\n        updatedEvents = events.map(event => {\r\n          const previousVersion = lastAction.previousEvents.find(e => e.taskId === event.taskId);\r\n          return previousVersion || event;\r\n        });\r\n      }\r\n\r\n      // Save to localStorage\r\n      localStorage.setItem('tasks', JSON.stringify(updatedEvents));\r\n      \r\n      setEvents(updatedEvents);\r\n      setShowUndo(false);\r\n      setLastAction(null);\r\n    } catch (error) {\r\n      console.error('Error undoing action:', error);\r\n      setErrorMessage('Failed to undo last action. Please try again.');\r\n    }\r\n  };\r\n\r\n  const calendarEvents = useMemo(() => {\r\n    return events.map(event => {\r\n      const normalizedEvent = {\r\n        ...event,\r\n        taskId: event.taskId.toString(),\r\n        title: event.title || 'Untitled',\r\n        startTime: event.startTime || '00:00',\r\n        endTime: event.endTime || event.startTime || '00:00',\r\n        date: event.date || getLocalDateString(selectedDate),\r\n        priority: event.priority || 'Medium',\r\n        category: event.category || 'Work',\r\n        recurring: event.recurring || false,\r\n        metadata: event.metadata || { createdBy: 'CurrentUser', lastUpdated: new Date().toISOString() },\r\n      };\r\n      return {\r\n        id: normalizedEvent.taskId,\r\n        title: normalizedEvent.title,\r\n        start: `${normalizedEvent.date}T${normalizedEvent.startTime}`,\r\n        end: `${normalizedEvent.date}T${normalizedEvent.endTime}`,\r\n        extendedProps: normalizedEvent,\r\n      };\r\n    });\r\n  }, [events, selectedDate]);\r\n\r\n  const categories = ['Work', 'Personal', 'School'];\r\n  const priorities = ['Low', 'Medium', 'High', 'Critical'];\r\n\r\n  const eventClassNames = (eventInfo) => {\r\n    const priority = eventInfo.event.extendedProps.priority || 'Medium';\r\n    return [`priority-${priority.toLowerCase()}`];\r\n  };\r\n\r\n  return (\r\n    <div className=\"calendar-view\">\r\n      {errorMessage && (\r\n        <div className=\"error-banner\" role=\"alert\">\r\n          {errorMessage}\r\n          <button onClick={() => setErrorMessage('')} aria-label=\"Dismiss error\">\r\n            ×\r\n          </button>\r\n        </div>\r\n      )}\r\n\r\n      {showUndo && (\r\n        <div className=\"undo-notification\" role=\"alert\">\r\n          <div className=\"undo-content\">\r\n            <span className=\"undo-message\">\r\n              {lastAction?.type === 'delete' ? (\r\n                <>Event \"{lastAction.tasks[0].title}\" deleted</>\r\n              ) : lastAction?.type === 'edit' ? (\r\n                <>Event \"{lastAction.tasks[0].title}\" edited</>\r\n              ) : (\r\n                <>Event \"{lastAction.tasks[0].title}\" added</>\r\n              )}\r\n            </span>\r\n            <button className=\"undo-button\" onClick={handleUndo}>\r\n              Undo\r\n            </button>\r\n          </div>\r\n          <div className=\"undo-timer\"></div>\r\n        </div>\r\n      )}\r\n\r\n      <FullCalendar\r\n        ref={calendarRef}\r\n        plugins={[dayGridPlugin, timeGridPlugin, interactionPlugin]}\r\n        initialView=\"timeGridWeek\"\r\n        headerToolbar={{\r\n          left: 'prev,next today',\r\n          center: 'title',\r\n          right: 'timeGridWeek,timeGridDay'\r\n        }}\r\n        events={calendarEvents}\r\n        editable={true}\r\n        selectable={true}\r\n        eventDrop={handleEventDrop}\r\n        eventClick={handleEventClick}\r\n        dateClick={handleDateClick}\r\n        allDaySlot={false}\r\n        snapDuration=\"00:15\"\r\n        eventClassNames={eventClassNames}\r\n        height=\"100%\"\r\n      />\r\n\r\n      {/* Create Event Modal */}\r\n      {createModalOpen && (\r\n        <div className=\"modal-overlay\">\r\n          <div className=\"modal-content\">\r\n            <div className=\"modal-header\">Create New Event</div>\r\n            <div className=\"input-row\">\r\n              <label>Title:</label>\r\n              <input\r\n                type=\"text\"\r\n                value={newEvent.title}\r\n                onChange={(e) => setNewEvent({ ...newEvent, title: e.target.value })}\r\n                placeholder=\"Enter event title...\"\r\n              />\r\n            </div>\r\n            <div className=\"input-row\">\r\n              <label>Description:</label>\r\n              <input\r\n                type=\"text\"\r\n                value={newEvent.description}\r\n                onChange={(e) => setNewEvent({ ...newEvent, description: e.target.value })}\r\n                placeholder=\"Enter description...\"\r\n              />\r\n            </div>\r\n            <div className=\"input-row\">\r\n              <label>Start Time:</label>\r\n              <input\r\n                type=\"time\"\r\n                value={newEvent.startTime}\r\n                onChange={(e) => setNewEvent({ ...newEvent, startTime: e.target.value })}\r\n              />\r\n            </div>\r\n            <div className=\"input-row\">\r\n              <label>End Time:</label>\r\n              <input\r\n                type=\"time\"\r\n                value={newEvent.endTime}\r\n                onChange={(e) => setNewEvent({ ...newEvent, endTime: e.target.value })}\r\n              />\r\n            </div>\r\n            <div className=\"input-row\">\r\n              <label>Category:</label>\r\n              <select\r\n                value={newEvent.category}\r\n                onChange={(e) => setNewEvent({ ...newEvent, category: e.target.value })}\r\n              >\r\n                {categories.map(cat => (\r\n                  <option key={cat} value={cat}>{cat}</option>\r\n                ))}\r\n              </select>\r\n            </div>\r\n            <div className=\"input-row\">\r\n              <label>Priority:</label>\r\n              <select\r\n                value={newEvent.priority}\r\n                onChange={(e) => setNewEvent({ ...newEvent, priority: e.target.value })}\r\n              >\r\n                {priorities.map(p => (\r\n                  <option key={p} value={p}>{p}</option>\r\n                ))}\r\n              </select>\r\n            </div>\r\n            <div className=\"input-row\">\r\n              <label>Recurring:</label>\r\n              <input\r\n                type=\"checkbox\"\r\n                checked={newEvent.recurring}\r\n                onChange={(e) => handleRecurringChange(e.target.checked)}\r\n              />\r\n            </div>\r\n            <div className=\"modal-buttons\">\r\n              <button className=\"save-btn\" onClick={handleCreateEvent}>Save</button>\r\n              <button className=\"cancel-btn\" onClick={() => setCreateModalOpen(false)}>Cancel</button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {/* Edit/Delete Event Modal */}\r\n      {editModalOpen && selectedEvent && (\r\n        <div className=\"modal-overlay\">\r\n          <div className=\"modal-content\">\r\n            <div className=\"modal-header\">Edit Event</div>\r\n            <div className=\"input-row\">\r\n              <label>Title:</label>\r\n              <input\r\n                type=\"text\"\r\n                value={selectedEvent.title}\r\n                onChange={(e) => setSelectedEvent({ ...selectedEvent, title: e.target.value })}\r\n              />\r\n            </div>\r\n            <div className=\"input-row\">\r\n              <label>Description:</label>\r\n              <input\r\n                type=\"text\"\r\n                value={selectedEvent.description}\r\n                onChange={(e) => setSelectedEvent({ ...selectedEvent, description: e.target.value })}\r\n              />\r\n            </div>\r\n            <div className=\"input-row\">\r\n              <label>Start Time:</label>\r\n              <input\r\n                type=\"time\"\r\n                value={selectedEvent.startTime}\r\n                onChange={(e) => setSelectedEvent({ ...selectedEvent, startTime: e.target.value })}\r\n              />\r\n            </div>\r\n            <div className=\"input-row\">\r\n              <label>End Time:</label>\r\n              <input\r\n                type=\"time\"\r\n                value={selectedEvent.endTime}\r\n                onChange={(e) => setSelectedEvent({ ...selectedEvent, endTime: e.target.value })}\r\n              />\r\n            </div>\r\n            <div className=\"input-row\">\r\n              <label>Category:</label>\r\n              <select\r\n                value={selectedEvent.category}\r\n                onChange={(e) => setSelectedEvent({ ...selectedEvent, category: e.target.value })}\r\n              >\r\n                {categories.map(cat => (\r\n                  <option key={cat} value={cat}>{cat}</option>\r\n                ))}\r\n              </select>\r\n            </div>\r\n            <div className=\"input-row\">\r\n              <label>Priority:</label>\r\n              <select\r\n                value={selectedEvent.priority}\r\n                onChange={(e) => setSelectedEvent({ ...selectedEvent, priority: e.target.value })}\r\n              >\r\n                {priorities.map(p => (\r\n                  <option key={p} value={p}>{p}</option>\r\n                ))}\r\n              </select>\r\n            </div>\r\n            <div className=\"input-row\">\r\n              <label>Recurring:</label>\r\n              <input\r\n                type=\"checkbox\"\r\n                checked={selectedEvent.recurring}\r\n                onChange={(e) => handleRecurringChange(e.target.checked)}\r\n              />\r\n            </div>\r\n            <div className=\"modal-buttons\">\r\n              <button className=\"save-btn\" onClick={handleEditEvent}>Save</button>\r\n              <button className=\"delete-btn\" onClick={handleDeleteEvent}>Delete</button>\r\n              <button className=\"cancel-btn\" onClick={() => setEditModalOpen(false)}>Cancel</button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {/* Recurring Options Modal */}\r\n      <RecurringOptionsModal\r\n        isOpen={recurringModalOpen}\r\n        onClose={() => setRecurringModalOpen(false)}\r\n        onSave={handleRecurringOptionsSave}\r\n        recurringOptions={recurringOptions}\r\n        setRecurringOptions={setRecurringOptions}\r\n      />\r\n\r\n      {/* Confirmation Modal */}\r\n      {confirmModalOpen && (\r\n        <div className=\"modal-overlay\">\r\n          <div className=\"modal-content\">\r\n            <div className=\"modal-header\">Confirm Action</div>\r\n            <div className=\"confirm-message\">{confirmMessage}</div>\r\n            <div className=\"modal-buttons\">\r\n              <button className=\"save-btn\" onClick={() => handleConfirmAction('all')}>All Instances</button>\r\n              <button className=\"save-btn\" onClick={() => handleConfirmAction('single')}>Just This One</button>\r\n              <button className=\"cancel-btn\" onClick={() => handleConfirmAction('cancel')}>Cancel</button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {/* Delete Confirmation Modal */}\r\n      {deleteConfirmModalOpen && (\r\n        <div className=\"modal-overlay\">\r\n          <div className=\"modal-content\">\r\n            <div className=\"modal-header\">Confirm Delete</div>\r\n            <div className=\"confirm-message\">\r\n              Are you sure you want to delete \"{taskToDelete?.title}\"?\r\n              <br />\r\n              <span className=\"warning-text\">This action can be undone for the next 5 seconds.</span>\r\n            </div>\r\n            <div className=\"modal-buttons\">\r\n              <button className=\"delete-btn\" onClick={confirmDelete}>Delete</button>\r\n              <button className=\"cancel-btn\" onClick={() => {\r\n                setDeleteConfirmModalOpen(false);\r\n                setTaskToDelete(null);\r\n              }}>Cancel</button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CalendarView;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,MAAM,EAAEC,SAAS,EAAEC,QAAQ,EAAEC,OAAO,QAAQ,OAAO;AACnE,OAAOC,YAAY,MAAM,qBAAqB;AAC9C,OAAOC,aAAa,MAAM,uBAAuB;AACjD,OAAOC,cAAc,MAAM,wBAAwB;AACnD,OAAOC,iBAAiB,MAAM,2BAA2B;AACzD,OAAOC,qBAAqB,MAAM,yBAAyB;;AAE3D;AAAA,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AACA,MAAMC,kBAAkB,GAAIC,IAAI,IAAK;EACnC,MAAMC,CAAC,GAAG,IAAIC,IAAI,CAACF,IAAI,CAAC;EACxB,MAAMG,IAAI,GAAGF,CAAC,CAACG,WAAW,CAAC,CAAC;EAC5B,MAAMC,KAAK,GAAGC,MAAM,CAACL,CAAC,CAACM,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC,CAACC,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC;EACzD,MAAMC,GAAG,GAAGH,MAAM,CAACL,CAAC,CAACS,OAAO,CAAC,CAAC,CAAC,CAACF,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC;EAChD,OAAO,GAAGL,IAAI,IAAIE,KAAK,IAAII,GAAG,EAAE;AAClC,CAAC;;AAED;AACA,MAAME,sBAAsB,GAAGA,CAACC,SAAS,EAAEC,gBAAgB,KAAK;EAC9D,MAAMC,KAAK,GAAG,EAAE;EAChB,MAAMC,KAAK,GAAG,IAAIb,IAAI,CAACU,SAAS,CAAC;EACjC,MAAMI,GAAG,GAAG,IAAId,IAAI,CAACW,gBAAgB,CAACI,OAAO,CAAC;EAC9C,IAAIC,WAAW,GAAG,IAAIhB,IAAI,CAACa,KAAK,CAAC;EAEjC,OAAOG,WAAW,IAAIF,GAAG,EAAE;IACzB,IAAIH,gBAAgB,CAACM,SAAS,KAAK,OAAO,EAAE;MAC1CL,KAAK,CAACM,IAAI,CAAC,IAAIlB,IAAI,CAACgB,WAAW,CAAC,CAAC;MACjCA,WAAW,CAACG,OAAO,CAACH,WAAW,CAACR,OAAO,CAAC,CAAC,GAAGG,gBAAgB,CAACS,QAAQ,CAAC;IACxE,CAAC,MAAM,IAAIT,gBAAgB,CAACM,SAAS,KAAK,QAAQ,EAAE;MAClD,IAAIN,gBAAgB,CAACU,QAAQ,CAACC,QAAQ,CAACN,WAAW,CAACO,MAAM,CAAC,CAAC,CAAC,EAAE;QAC5DX,KAAK,CAACM,IAAI,CAAC,IAAIlB,IAAI,CAACgB,WAAW,CAAC,CAAC;MACnC;MACAA,WAAW,CAACG,OAAO,CAACH,WAAW,CAACR,OAAO,CAAC,CAAC,GAAG,CAAC,CAAC;MAC9C,IAAIQ,WAAW,CAACO,MAAM,CAAC,CAAC,KAAK,CAAC,EAAE;QAC9BP,WAAW,CAACG,OAAO,CAACH,WAAW,CAACR,OAAO,CAAC,CAAC,GAAG,CAACG,gBAAgB,CAACS,QAAQ,GAAG,CAAC,IAAI,CAAC,CAAC;MAClF;IACF,CAAC,MAAM,IAAIT,gBAAgB,CAACM,SAAS,KAAK,SAAS,EAAE;MACnDL,KAAK,CAACM,IAAI,CAAC,IAAIlB,IAAI,CAACgB,WAAW,CAAC,CAAC;MACjCA,WAAW,CAACQ,QAAQ,CAACR,WAAW,CAACX,QAAQ,CAAC,CAAC,GAAGM,gBAAgB,CAACS,QAAQ,CAAC;IAC1E,CAAC,MAAM,IAAIT,gBAAgB,CAACM,SAAS,KAAK,QAAQ,EAAE;MAClDL,KAAK,CAACM,IAAI,CAAC,IAAIlB,IAAI,CAACgB,WAAW,CAAC,CAAC;MACjCA,WAAW,CAACS,WAAW,CAACT,WAAW,CAACd,WAAW,CAAC,CAAC,GAAGS,gBAAgB,CAACS,QAAQ,CAAC;IAChF;EACF;EAEA,OAAOR,KAAK;AACd,CAAC;AAED,SAASc,YAAYA,CAAC;EAAEC,YAAY;EAAEC,eAAe;EAAEC,MAAM;EAAEC;AAAU,CAAC,EAAE;EAAAC,EAAA;EAC1E,MAAMC,WAAW,GAAGhD,MAAM,CAAC,IAAI,CAAC;EAChC,MAAM,CAACiD,eAAe,EAAEC,kBAAkB,CAAC,GAAGhD,QAAQ,CAAC,KAAK,CAAC;EAC7D,MAAM,CAACiD,aAAa,EAAEC,gBAAgB,CAAC,GAAGlD,QAAQ,CAAC,KAAK,CAAC;EACzD,MAAM,CAACmD,aAAa,EAAEC,gBAAgB,CAAC,GAAGpD,QAAQ,CAAC,IAAI,CAAC;EACxD,MAAM,CAACqD,kBAAkB,EAAEC,qBAAqB,CAAC,GAAGtD,QAAQ,CAAC,KAAK,CAAC;EACnE,MAAM,CAACyB,gBAAgB,EAAE8B,mBAAmB,CAAC,GAAGvD,QAAQ,CAAC;IACvD+B,SAAS,EAAE,OAAO;IAClBI,QAAQ,EAAE,EAAE;IACZN,OAAO,EAAE,EAAE;IACXK,QAAQ,EAAE;EACZ,CAAC,CAAC;EACF,MAAM,CAACsB,QAAQ,EAAEC,WAAW,CAAC,GAAGzD,QAAQ,CAAC;IACvC0D,KAAK,EAAE,EAAE;IACTC,WAAW,EAAE,EAAE;IACfC,SAAS,EAAE,EAAE;IACbC,OAAO,EAAE,EAAE;IACXC,QAAQ,EAAE,MAAM;IAChBC,QAAQ,EAAE,QAAQ;IAClBC,SAAS,EAAE,KAAK;IAChBpD,IAAI,EAAED,kBAAkB,CAAC8B,YAAY;EACvC,CAAC,CAAC;EACF,MAAM,CAACwB,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGlE,QAAQ,CAAC,KAAK,CAAC;EAC/D,MAAM,CAACmE,aAAa,EAAEC,gBAAgB,CAAC,GAAGpE,QAAQ,CAAC,IAAI,CAAC;EACxD,MAAM,CAACqE,cAAc,EAAEC,iBAAiB,CAAC,GAAGtE,QAAQ,CAAC,EAAE,CAAC;EACxD,MAAM,CAACuE,YAAY,EAAEC,eAAe,CAAC,GAAGxE,QAAQ,CAAC,IAAI,CAAC;EACtD,MAAM,CAACyE,sBAAsB,EAAEC,yBAAyB,CAAC,GAAG1E,QAAQ,CAAC,KAAK,CAAC;EAC3E,MAAM,CAAC2E,YAAY,EAAEC,eAAe,CAAC,GAAG5E,QAAQ,CAAC,IAAI,CAAC;EACtD,MAAM,CAAC6E,UAAU,EAAEC,aAAa,CAAC,GAAG9E,QAAQ,CAAC,IAAI,CAAC;EAClD,MAAM,CAAC+E,QAAQ,EAAEC,WAAW,CAAC,GAAGhF,QAAQ,CAAC,KAAK,CAAC;EAC/C,MAAM,CAACiF,YAAY,EAAEC,eAAe,CAAC,GAAGlF,QAAQ,CAAC,EAAE,CAAC;EAEpDD,SAAS,CAAC,MAAM;IACd,IAAI+C,WAAW,CAACqC,OAAO,EAAE;MACvB,MAAMC,WAAW,GAAGtC,WAAW,CAACqC,OAAO,CAACE,MAAM,CAAC,CAAC;MAChDD,WAAW,CAACE,QAAQ,CAAC7C,YAAY,CAAC;MAClC8C,OAAO,CAACC,GAAG,CAAC,yCAAyC,EAAE/C,YAAY,EAAE,aAAa,EAAE9B,kBAAkB,CAAC8B,YAAY,CAAC,CAAC;IACvH;EACF,CAAC,EAAE,CAACA,YAAY,CAAC,CAAC;EAElB1C,SAAS,CAAC,MAAM;IACdwF,OAAO,CAACC,GAAG,CAAC,sBAAsB,EAAE7C,MAAM,CAAC;EAC7C,CAAC,EAAE,CAACA,MAAM,CAAC,CAAC;EAEZ,MAAM8C,eAAe,GAAIC,IAAI,IAAK;IAChC,MAAM9B,SAAS,GAAG8B,IAAI,CAAC9E,IAAI,CAAC+E,YAAY,CAAC,CAAC,CAACC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;IACxD,MAAM,CAACC,KAAK,EAAEC,OAAO,CAAC,GAAGlC,SAAS,CAACmC,KAAK,CAAC,GAAG,CAAC,CAACC,GAAG,CAACC,MAAM,CAAC;IACzD,MAAMC,QAAQ,GAAG,CAACL,KAAK,GAAG,CAAC,IAAI,EAAE;IACjC,MAAMhC,OAAO,GAAG,GAAGqC,QAAQ,CAACC,QAAQ,CAAC,CAAC,CAAC/E,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC,IAAI0E,OAAO,CAACK,QAAQ,CAAC,CAAC,CAAC/E,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE;IAChG,MAAMgF,WAAW,GAAGzF,kBAAkB,CAAC+E,IAAI,CAAC9E,IAAI,CAAC;IACjD2E,OAAO,CAACC,GAAG,CAAC,iCAAiC,EAAEE,IAAI,CAAC9E,IAAI,EAAE,aAAa,EAAEwF,WAAW,CAAC;IACrF3C,WAAW,CAAC;MACV,GAAGD,QAAQ;MACX5C,IAAI,EAAEwF,WAAW;MACjBxC,SAAS;MACTC;IACF,CAAC,CAAC;IACFb,kBAAkB,CAAC,IAAI,CAAC;EAC1B,CAAC;EAED,MAAMqD,gBAAgB,GAAIX,IAAI,IAAK;IACjC,MAAMY,KAAK,GAAG3D,MAAM,CAAC4D,IAAI,CAACC,CAAC,IAAIA,CAAC,CAACC,MAAM,KAAKf,IAAI,CAACY,KAAK,CAACI,EAAE,CAACP,QAAQ,CAAC,CAAC,CAAC;IACrE,IAAIG,KAAK,EAAE;MACTf,OAAO,CAACC,GAAG,CAAC,gBAAgB,EAAEc,KAAK,CAAC;MACpClD,gBAAgB,CAACkD,KAAK,CAAC;MACvBpD,gBAAgB,CAAC,IAAI,CAAC;IACxB,CAAC,MAAM;MACLqC,OAAO,CAACoB,KAAK,CAAC,iBAAiBjB,IAAI,CAACY,KAAK,CAACI,EAAE,4BAA4B,EAAE/D,MAAM,CAAC;IACnF;EACF,CAAC;EAED,MAAMiE,eAAe,GAAIlB,IAAI,IAAK;IAChC,MAAMmB,YAAY,GAAG;MACnB,GAAGnB,IAAI,CAACY,KAAK,CAACQ,aAAa;MAC3BL,MAAM,EAAEf,IAAI,CAACY,KAAK,CAACI,EAAE,CAACP,QAAQ,CAAC,CAAC;MAChCzC,KAAK,EAAEgC,IAAI,CAACY,KAAK,CAAC5C,KAAK;MACvB9C,IAAI,EAAED,kBAAkB,CAAC+E,IAAI,CAACY,KAAK,CAAC3E,KAAK,CAAC;MAC1CiC,SAAS,EAAE8B,IAAI,CAACY,KAAK,CAAC3E,KAAK,CAACgE,YAAY,CAAC,CAAC,CAACC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC;MACtD/B,OAAO,EAAE6B,IAAI,CAACY,KAAK,CAAC1E,GAAG,GAAG8D,IAAI,CAACY,KAAK,CAAC1E,GAAG,CAAC+D,YAAY,CAAC,CAAC,CAACC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,GAAGF,IAAI,CAACY,KAAK,CAAC3E,KAAK,CAACgE,YAAY,CAAC,CAAC,CAACC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC;MACjHmB,QAAQ,EAAErB,IAAI,CAACY,KAAK,CAACQ,aAAa,CAACC,QAAQ,IAAI;QAAEC,SAAS,EAAE,aAAa;QAAEC,WAAW,EAAE,IAAInG,IAAI,CAAC,CAAC,CAACoG,WAAW,CAAC;MAAE;IACnH,CAAC;IACD3B,OAAO,CAACC,GAAG,CAAC,gBAAgB,EAAEqB,YAAY,CAAC;IAC3CjE,SAAS,CAACuE,UAAU,IAClBA,UAAU,CAACnB,GAAG,CAACoB,EAAE,IAAKA,EAAE,CAACX,MAAM,KAAKI,YAAY,CAACJ,MAAM,GAAGI,YAAY,GAAGO,EAAG,CAC9E,CAAC;EACH,CAAC;EAED,MAAMC,qBAAqB,GAAIC,OAAO,IAAK;IACzC,IAAInE,aAAa,EAAE;MACjBC,gBAAgB,CAAC;QAAE,GAAGD,aAAa;QAAEa,SAAS,EAAEsD;MAAQ,CAAC,CAAC;MAC1D,IAAIA,OAAO,EAAE;QACXhE,qBAAqB,CAAC,IAAI,CAAC;MAC7B;IACF,CAAC,MAAM;MACLG,WAAW,CAAC;QAAE,GAAGD,QAAQ;QAAEQ,SAAS,EAAEsD;MAAQ,CAAC,CAAC;MAChD,IAAIA,OAAO,EAAE;QACXhE,qBAAqB,CAAC,IAAI,CAAC;MAC7B;IACF;EACF,CAAC;EAED,MAAMiE,0BAA0B,GAAIC,OAAO,IAAK;IAC9C,IAAIrE,aAAa,EAAE;MACjBC,gBAAgB,CAAC;QAAE,GAAGD,aAAa;QAAE1B,gBAAgB,EAAE+F;MAAQ,CAAC,CAAC;IACnE,CAAC,MAAM;MACL/D,WAAW,CAAC;QAAE,GAAGD,QAAQ;QAAE/B,gBAAgB,EAAE+F;MAAQ,CAAC,CAAC;IACzD;EACF,CAAC;EAED,MAAMC,iBAAiB,GAAGA,CAAA,KAAM;IAC9B,IAAIjE,QAAQ,CAACE,KAAK,CAACgE,IAAI,CAAC,CAAC,IAAIlE,QAAQ,CAACI,SAAS,IAAIJ,QAAQ,CAACK,OAAO,EAAE;MACnE,MAAM8D,SAAS,GAAG;QAChBlB,MAAM,EAAE3F,IAAI,CAAC8G,GAAG,CAAC,CAAC,CAACzB,QAAQ,CAAC,CAAC;QAC7BzC,KAAK,EAAEF,QAAQ,CAACE,KAAK;QACrBC,WAAW,EAAEH,QAAQ,CAACG,WAAW,IAAI,EAAE;QACvCC,SAAS,EAAEJ,QAAQ,CAACI,SAAS;QAC7BC,OAAO,EAAEL,QAAQ,CAACK,OAAO;QACzBC,QAAQ,EAAEN,QAAQ,CAACM,QAAQ;QAC3BC,QAAQ,EAAEP,QAAQ,CAACO,QAAQ,IAAI,QAAQ;QACvCC,SAAS,EAAER,QAAQ,CAACQ,SAAS;QAC7BvC,gBAAgB,EAAE+B,QAAQ,CAACQ,SAAS,GAAGR,QAAQ,CAAC/B,gBAAgB,GAAG,IAAI;QACvEb,IAAI,EAAE4C,QAAQ,CAAC5C,IAAI;QACnBmG,QAAQ,EAAE;UAAEC,SAAS,EAAE,aAAa;UAAEC,WAAW,EAAE,IAAInG,IAAI,CAAC,CAAC,CAACoG,WAAW,CAAC;QAAE;MAC9E,CAAC;MAED,IAAIW,WAAW,GAAG,CAACF,SAAS,CAAC;MAE7B,IAAIA,SAAS,CAAC3D,SAAS,IAAI2D,SAAS,CAAClG,gBAAgB,EAAE;QACrD,MAAMqG,cAAc,GAAGvG,sBAAsB,CAC3C,IAAIT,IAAI,CAAC,GAAG6G,SAAS,CAAC/G,IAAI,IAAI+G,SAAS,CAAC/D,SAAS,EAAE,CAAC,EACpD+D,SAAS,CAAClG,gBACZ,CAAC;QAEDoG,WAAW,GAAGC,cAAc,CAAC9B,GAAG,CAAC,CAACpF,IAAI,EAAEmH,KAAK,MAAM;UACjD,GAAGJ,SAAS;UACZlB,MAAM,EAAE,GAAGkB,SAAS,CAAClB,MAAM,IAAIsB,KAAK,EAAE;UACtCnH,IAAI,EAAED,kBAAkB,CAACC,IAAI,CAAC;UAC9BgD,SAAS,EAAEhD,IAAI,CAAC+E,YAAY,CAAC,CAAC,CAACC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC;UAC1C/B,OAAO,EAAE,IAAI/C,IAAI,CAACF,IAAI,CAACoH,OAAO,CAAC,CAAC,IAAI,IAAIlH,IAAI,CAAC,cAAc6G,SAAS,CAAC9D,OAAO,EAAE,CAAC,CAACmE,OAAO,CAAC,CAAC,GAAG,IAAIlH,IAAI,CAAC,cAAc6G,SAAS,CAAC/D,SAAS,EAAE,CAAC,CAACoE,OAAO,CAAC,CAAC,CAAC,CAAC,CAACrC,YAAY,CAAC,CAAC,CAACC,KAAK,CAAC,CAAC,EAAE,CAAC;QACjL,CAAC,CAAC,CAAC;MACL;MAEAhD,SAAS,CAACuE,UAAU,IAAI,CAAC,GAAGA,UAAU,EAAE,GAAGU,WAAW,CAAC,CAAC;MACxD7E,kBAAkB,CAAC,KAAK,CAAC;MACzBS,WAAW,CAAC;QACVC,KAAK,EAAE,EAAE;QACTC,WAAW,EAAE,EAAE;QACfC,SAAS,EAAE,EAAE;QACbC,OAAO,EAAE,EAAE;QACXC,QAAQ,EAAE,MAAM;QAChBC,QAAQ,EAAE,QAAQ;QAClBC,SAAS,EAAE,KAAK;QAChBpD,IAAI,EAAED,kBAAkB,CAAC8B,YAAY;MACvC,CAAC,CAAC;IACJ;EACF,CAAC;EAED,MAAMwF,eAAe,GAAGA,CAAA,KAAM;IAC5B,IAAI9E,aAAa,CAACO,KAAK,CAACgE,IAAI,CAAC,CAAC,IAAIvE,aAAa,CAACS,SAAS,IAAIT,aAAa,CAACU,OAAO,EAAE;MAClF,MAAMgD,YAAY,GAAG;QACnB,GAAG1D,aAAa;QAChBY,QAAQ,EAAEZ,aAAa,CAACY,QAAQ,IAAI,QAAQ;QAC5CgD,QAAQ,EAAE;UAAE,GAAG5D,aAAa,CAAC4D,QAAQ;UAAEE,WAAW,EAAE,IAAInG,IAAI,CAAC,CAAC,CAACoG,WAAW,CAAC;QAAE;MAC/E,CAAC;MAED,IAAIL,YAAY,CAAC7C,SAAS,EAAE;QAC1BM,iBAAiB,CAAC,mFAAmF,CAAC;QACtGF,gBAAgB,CAAC,MAAM,CAAC;QACxBI,eAAe,CAACqC,YAAY,CAAC;QAC7B3C,mBAAmB,CAAC,IAAI,CAAC;MAC3B,CAAC,MAAM;QACLtB,SAAS,CAACuE,UAAU,IAClBA,UAAU,CAACnB,GAAG,CAACoB,EAAE,IAAKA,EAAE,CAACX,MAAM,KAAKI,YAAY,CAACJ,MAAM,GAAGI,YAAY,GAAGO,EAAG,CAC9E,CAAC;QACDlE,gBAAgB,CAAC,KAAK,CAAC;MACzB;IACF;EACF,CAAC;EAED,MAAMgF,iBAAiB,GAAGA,CAAA,KAAM;IAC9B,IAAI/E,aAAa,EAAE;MACjByB,eAAe,CAACzB,aAAa,CAAC;MAC9BuB,yBAAyB,CAAC,IAAI,CAAC;IACjC;EACF,CAAC;EAED,MAAMyD,aAAa,GAAGA,CAAA,KAAM;IAC1B,IAAI,CAACxD,YAAY,EAAE;IAEnB,IAAIA,YAAY,CAACX,SAAS,EAAE;MAC1BM,iBAAiB,CAAC,qFAAqF,CAAC;MACxGF,gBAAgB,CAAC,QAAQ,CAAC;MAC1BI,eAAe,CAACG,YAAY,CAAC;MAC7BT,mBAAmB,CAAC,IAAI,CAAC;IAC3B,CAAC,MAAM;MACL,IAAI;QACF,MAAMkE,aAAa,GAAGzF,MAAM,CAAC0F,MAAM,CAAC7B,CAAC,IAAIA,CAAC,CAACC,MAAM,KAAK9B,YAAY,CAAC8B,MAAM,CAAC;;QAE1E;QACA6B,YAAY,CAACC,OAAO,CAAC,OAAO,EAAEC,IAAI,CAACC,SAAS,CAACL,aAAa,CAAC,CAAC;;QAE5D;QACAtD,aAAa,CAAC;UACZ4D,IAAI,EAAE,QAAQ;UACdC,KAAK,EAAE,CAAChE,YAAY,CAAC;UACrBiE,cAAc,EAAE,CAAC,GAAGjG,MAAM;QAC5B,CAAC,CAAC;QAEFC,SAAS,CAACwF,aAAa,CAAC;QACxBpD,WAAW,CAAC,IAAI,CAAC;QACjB6D,UAAU,CAAC,MAAM7D,WAAW,CAAC,KAAK,CAAC,EAAE,IAAI,CAAC;QAC1C9B,gBAAgB,CAAC,KAAK,CAAC;MACzB,CAAC,CAAC,OAAOyD,KAAK,EAAE;QACdpB,OAAO,CAACoB,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;QAC7CzB,eAAe,CAAC,2CAA2C,CAAC;MAC9D;IACF;IACAR,yBAAyB,CAAC,KAAK,CAAC;IAChCE,eAAe,CAAC,IAAI,CAAC;EACvB,CAAC;EAED,MAAMkE,mBAAmB,GAAIC,MAAM,IAAK;IACtC,IAAIA,MAAM,KAAK,QAAQ,EAAE;MACvB7E,mBAAmB,CAAC,KAAK,CAAC;MAC1BM,eAAe,CAAC,IAAI,CAAC;MACrB;IACF;IAEA,IAAIL,aAAa,KAAK,MAAM,IAAII,YAAY,EAAE;MAC5C,IAAIyE,cAAc,GAAG,CAACzE,YAAY,CAAC;MACnC,IAAIwE,MAAM,KAAK,KAAK,IAAIxE,YAAY,CAACP,SAAS,IAAIO,YAAY,CAAC9C,gBAAgB,EAAE;QAC/E,MAAMqG,cAAc,GAAGvG,sBAAsB,CAC3C,IAAIT,IAAI,CAAC,GAAGyD,YAAY,CAAC3D,IAAI,IAAI2D,YAAY,CAACX,SAAS,EAAE,CAAC,EAC1DW,YAAY,CAAC9C,gBACf,CAAC;QAEDuH,cAAc,GAAGlB,cAAc,CAAC9B,GAAG,CAAC,CAACpF,IAAI,EAAEmH,KAAK,MAAM;UACpD,GAAGxD,YAAY;UACfkC,MAAM,EAAE,GAAGlC,YAAY,CAACkC,MAAM,IAAIsB,KAAK,EAAE;UACzCnH,IAAI,EAAED,kBAAkB,CAACC,IAAI,CAAC;UAC9BgD,SAAS,EAAEhD,IAAI,CAAC+E,YAAY,CAAC,CAAC,CAACC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC;UAC1C/B,OAAO,EAAE,IAAI/C,IAAI,CAACF,IAAI,CAACoH,OAAO,CAAC,CAAC,IAAI,IAAIlH,IAAI,CAAC,cAAcyD,YAAY,CAACV,OAAO,EAAE,CAAC,CAACmE,OAAO,CAAC,CAAC,GAAG,IAAIlH,IAAI,CAAC,cAAcyD,YAAY,CAACX,SAAS,EAAE,CAAC,CAACoE,OAAO,CAAC,CAAC,CAAC,CAAC,CAACrC,YAAY,CAAC,CAAC,CAACC,KAAK,CAAC,CAAC,EAAE,CAAC;QACvL,CAAC,CAAC,CAAC;MACL;MAEAhD,SAAS,CAACuE,UAAU,IAAI;QACtB,MAAM8B,UAAU,GAAG1E,YAAY,CAACkC,MAAM,CAACV,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;QACpD,OAAOoB,UAAU,CACdkB,MAAM,CAACjB,EAAE,IAAI2B,MAAM,KAAK,QAAQ,GAAG3B,EAAE,CAACX,MAAM,KAAKlC,YAAY,CAACkC,MAAM,GAAG,CAACW,EAAE,CAACX,MAAM,CAACyC,UAAU,CAACD,UAAU,CAAC,CAAC,CACzGE,MAAM,CAACH,cAAc,CAAC;MAC3B,CAAC,CAAC;IAEJ,CAAC,MAAM,IAAI7E,aAAa,KAAK,QAAQ,IAAII,YAAY,EAAE;MACrD,IAAIwE,MAAM,KAAK,KAAK,EAAE;QACpB,MAAME,UAAU,GAAG1E,YAAY,CAACkC,MAAM,CAACV,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;QACpDnD,SAAS,CAACuE,UAAU,IAAIA,UAAU,CAACkB,MAAM,CAACjB,EAAE,IAAI,CAACA,EAAE,CAACX,MAAM,CAACyC,UAAU,CAACD,UAAU,CAAC,CAAC,CAAC;MACrF,CAAC,MAAM,IAAIF,MAAM,KAAK,QAAQ,EAAE;QAC9BnG,SAAS,CAACuE,UAAU,IAAIA,UAAU,CAACkB,MAAM,CAACjB,EAAE,IAAIA,EAAE,CAACX,MAAM,KAAKlC,YAAY,CAACkC,MAAM,CAAC,CAAC;MACrF;IACF;IAEAvC,mBAAmB,CAAC,KAAK,CAAC;IAC1BM,eAAe,CAAC,IAAI,CAAC;IACrBtB,gBAAgB,CAAC,KAAK,CAAC;EACzB,CAAC;EAED,MAAMkG,UAAU,GAAGA,CAAA,KAAM;IACvB,IAAI,CAACvE,UAAU,EAAE;IAEjB,IAAI;MACF,IAAIuD,aAAa;MAEjB,IAAIvD,UAAU,CAAC6D,IAAI,KAAK,QAAQ,EAAE;QAChC;QACAN,aAAa,GAAG,CAAC,GAAGzF,MAAM,EAAE,GAAGkC,UAAU,CAAC8D,KAAK,CAAC;MAClD,CAAC,MAAM,IAAI9D,UAAU,CAAC6D,IAAI,KAAK,MAAM,EAAE;QACrC;QACAN,aAAa,GAAGzF,MAAM,CAACqD,GAAG,CAACM,KAAK,IAAI;UAClC,MAAM+C,eAAe,GAAGxE,UAAU,CAAC+D,cAAc,CAACrC,IAAI,CAACC,CAAC,IAAIA,CAAC,CAACC,MAAM,KAAKH,KAAK,CAACG,MAAM,CAAC;UACtF,OAAO4C,eAAe,IAAI/C,KAAK;QACjC,CAAC,CAAC;MACJ;;MAEA;MACAgC,YAAY,CAACC,OAAO,CAAC,OAAO,EAAEC,IAAI,CAACC,SAAS,CAACL,aAAa,CAAC,CAAC;MAE5DxF,SAAS,CAACwF,aAAa,CAAC;MACxBpD,WAAW,CAAC,KAAK,CAAC;MAClBF,aAAa,CAAC,IAAI,CAAC;IACrB,CAAC,CAAC,OAAO6B,KAAK,EAAE;MACdpB,OAAO,CAACoB,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;MAC7CzB,eAAe,CAAC,+CAA+C,CAAC;IAClE;EACF,CAAC;EAED,MAAMoE,cAAc,GAAGrJ,OAAO,CAAC,MAAM;IACnC,OAAO0C,MAAM,CAACqD,GAAG,CAACM,KAAK,IAAI;MACzB,MAAMiD,eAAe,GAAG;QACtB,GAAGjD,KAAK;QACRG,MAAM,EAAEH,KAAK,CAACG,MAAM,CAACN,QAAQ,CAAC,CAAC;QAC/BzC,KAAK,EAAE4C,KAAK,CAAC5C,KAAK,IAAI,UAAU;QAChCE,SAAS,EAAE0C,KAAK,CAAC1C,SAAS,IAAI,OAAO;QACrCC,OAAO,EAAEyC,KAAK,CAACzC,OAAO,IAAIyC,KAAK,CAAC1C,SAAS,IAAI,OAAO;QACpDhD,IAAI,EAAE0F,KAAK,CAAC1F,IAAI,IAAID,kBAAkB,CAAC8B,YAAY,CAAC;QACpDsB,QAAQ,EAAEuC,KAAK,CAACvC,QAAQ,IAAI,QAAQ;QACpCD,QAAQ,EAAEwC,KAAK,CAACxC,QAAQ,IAAI,MAAM;QAClCE,SAAS,EAAEsC,KAAK,CAACtC,SAAS,IAAI,KAAK;QACnC+C,QAAQ,EAAET,KAAK,CAACS,QAAQ,IAAI;UAAEC,SAAS,EAAE,aAAa;UAAEC,WAAW,EAAE,IAAInG,IAAI,CAAC,CAAC,CAACoG,WAAW,CAAC;QAAE;MAChG,CAAC;MACD,OAAO;QACLR,EAAE,EAAE6C,eAAe,CAAC9C,MAAM;QAC1B/C,KAAK,EAAE6F,eAAe,CAAC7F,KAAK;QAC5B/B,KAAK,EAAE,GAAG4H,eAAe,CAAC3I,IAAI,IAAI2I,eAAe,CAAC3F,SAAS,EAAE;QAC7DhC,GAAG,EAAE,GAAG2H,eAAe,CAAC3I,IAAI,IAAI2I,eAAe,CAAC1F,OAAO,EAAE;QACzDiD,aAAa,EAAEyC;MACjB,CAAC;IACH,CAAC,CAAC;EACJ,CAAC,EAAE,CAAC5G,MAAM,EAAEF,YAAY,CAAC,CAAC;EAE1B,MAAM+G,UAAU,GAAG,CAAC,MAAM,EAAE,UAAU,EAAE,QAAQ,CAAC;EACjD,MAAMC,UAAU,GAAG,CAAC,KAAK,EAAE,QAAQ,EAAE,MAAM,EAAE,UAAU,CAAC;EAExD,MAAMC,eAAe,GAAIC,SAAS,IAAK;IACrC,MAAM5F,QAAQ,GAAG4F,SAAS,CAACrD,KAAK,CAACQ,aAAa,CAAC/C,QAAQ,IAAI,QAAQ;IACnE,OAAO,CAAC,YAAYA,QAAQ,CAAC6F,WAAW,CAAC,CAAC,EAAE,CAAC;EAC/C,CAAC;EAED,oBACEpJ,OAAA;IAAKqJ,SAAS,EAAC,eAAe;IAAAC,QAAA,GAC3B7E,YAAY,iBACXzE,OAAA;MAAKqJ,SAAS,EAAC,cAAc;MAACE,IAAI,EAAC,OAAO;MAAAD,QAAA,GACvC7E,YAAY,eACbzE,OAAA;QAAQwJ,OAAO,EAAEA,CAAA,KAAM9E,eAAe,CAAC,EAAE,CAAE;QAAC,cAAW,eAAe;QAAA4E,QAAA,EAAC;MAEvE;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CACN,EAEArF,QAAQ,iBACPvE,OAAA;MAAKqJ,SAAS,EAAC,mBAAmB;MAACE,IAAI,EAAC,OAAO;MAAAD,QAAA,gBAC7CtJ,OAAA;QAAKqJ,SAAS,EAAC,cAAc;QAAAC,QAAA,gBAC3BtJ,OAAA;UAAMqJ,SAAS,EAAC,cAAc;UAAAC,QAAA,EAC3B,CAAAjF,UAAU,aAAVA,UAAU,uBAAVA,UAAU,CAAE6D,IAAI,MAAK,QAAQ,gBAC5BlI,OAAA,CAAAE,SAAA;YAAAoJ,QAAA,GAAE,UAAO,EAACjF,UAAU,CAAC8D,KAAK,CAAC,CAAC,CAAC,CAACjF,KAAK,EAAC,YAAS;UAAA,eAAE,CAAC,GAC9C,CAAAmB,UAAU,aAAVA,UAAU,uBAAVA,UAAU,CAAE6D,IAAI,MAAK,MAAM,gBAC7BlI,OAAA,CAAAE,SAAA;YAAAoJ,QAAA,GAAE,UAAO,EAACjF,UAAU,CAAC8D,KAAK,CAAC,CAAC,CAAC,CAACjF,KAAK,EAAC,WAAQ;UAAA,eAAE,CAAC,gBAE/ClD,OAAA,CAAAE,SAAA;YAAAoJ,QAAA,GAAE,UAAO,EAACjF,UAAU,CAAC8D,KAAK,CAAC,CAAC,CAAC,CAACjF,KAAK,EAAC,UAAO;UAAA,eAAE;QAC9C;UAAAuG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACG,CAAC,eACP5J,OAAA;UAAQqJ,SAAS,EAAC,aAAa;UAACG,OAAO,EAAEZ,UAAW;UAAAU,QAAA,EAAC;QAErD;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACN,CAAC,eACN5J,OAAA;QAAKqJ,SAAS,EAAC;MAAY;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC/B,CACN,eAED5J,OAAA,CAACN,YAAY;MACXmK,GAAG,EAAEvH,WAAY;MACjBwH,OAAO,EAAE,CAACnK,aAAa,EAAEC,cAAc,EAAEC,iBAAiB,CAAE;MAC5DkK,WAAW,EAAC,cAAc;MAC1BC,aAAa,EAAE;QACbC,IAAI,EAAE,iBAAiB;QACvBC,MAAM,EAAE,OAAO;QACfC,KAAK,EAAE;MACT,CAAE;MACFhI,MAAM,EAAE2G,cAAe;MACvBsB,QAAQ,EAAE,IAAK;MACfC,UAAU,EAAE,IAAK;MACjBC,SAAS,EAAElE,eAAgB;MAC3BmE,UAAU,EAAE1E,gBAAiB;MAC7B2E,SAAS,EAAEvF,eAAgB;MAC3BwF,UAAU,EAAE,KAAM;MAClBC,YAAY,EAAC,OAAO;MACpBxB,eAAe,EAAEA,eAAgB;MACjCyB,MAAM,EAAC;IAAM;MAAAlB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACd,CAAC,EAGDrH,eAAe,iBACdvC,OAAA;MAAKqJ,SAAS,EAAC,eAAe;MAAAC,QAAA,eAC5BtJ,OAAA;QAAKqJ,SAAS,EAAC,eAAe;QAAAC,QAAA,gBAC5BtJ,OAAA;UAAKqJ,SAAS,EAAC,cAAc;UAAAC,QAAA,EAAC;QAAgB;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eACpD5J,OAAA;UAAKqJ,SAAS,EAAC,WAAW;UAAAC,QAAA,gBACxBtJ,OAAA;YAAAsJ,QAAA,EAAO;UAAM;YAAAG,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC,eACrB5J,OAAA;YACEkI,IAAI,EAAC,MAAM;YACX0C,KAAK,EAAE5H,QAAQ,CAACE,KAAM;YACtB2H,QAAQ,EAAG7E,CAAC,IAAK/C,WAAW,CAAC;cAAE,GAAGD,QAAQ;cAAEE,KAAK,EAAE8C,CAAC,CAAC8E,MAAM,CAACF;YAAM,CAAC,CAAE;YACrEG,WAAW,EAAC;UAAsB;YAAAtB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACnC,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACC,CAAC,eACN5J,OAAA;UAAKqJ,SAAS,EAAC,WAAW;UAAAC,QAAA,gBACxBtJ,OAAA;YAAAsJ,QAAA,EAAO;UAAY;YAAAG,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC,eAC3B5J,OAAA;YACEkI,IAAI,EAAC,MAAM;YACX0C,KAAK,EAAE5H,QAAQ,CAACG,WAAY;YAC5B0H,QAAQ,EAAG7E,CAAC,IAAK/C,WAAW,CAAC;cAAE,GAAGD,QAAQ;cAAEG,WAAW,EAAE6C,CAAC,CAAC8E,MAAM,CAACF;YAAM,CAAC,CAAE;YAC3EG,WAAW,EAAC;UAAsB;YAAAtB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACnC,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACC,CAAC,eACN5J,OAAA;UAAKqJ,SAAS,EAAC,WAAW;UAAAC,QAAA,gBACxBtJ,OAAA;YAAAsJ,QAAA,EAAO;UAAW;YAAAG,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC,eAC1B5J,OAAA;YACEkI,IAAI,EAAC,MAAM;YACX0C,KAAK,EAAE5H,QAAQ,CAACI,SAAU;YAC1ByH,QAAQ,EAAG7E,CAAC,IAAK/C,WAAW,CAAC;cAAE,GAAGD,QAAQ;cAAEI,SAAS,EAAE4C,CAAC,CAAC8E,MAAM,CAACF;YAAM,CAAC;UAAE;YAAAnB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC1E,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACC,CAAC,eACN5J,OAAA;UAAKqJ,SAAS,EAAC,WAAW;UAAAC,QAAA,gBACxBtJ,OAAA;YAAAsJ,QAAA,EAAO;UAAS;YAAAG,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC,eACxB5J,OAAA;YACEkI,IAAI,EAAC,MAAM;YACX0C,KAAK,EAAE5H,QAAQ,CAACK,OAAQ;YACxBwH,QAAQ,EAAG7E,CAAC,IAAK/C,WAAW,CAAC;cAAE,GAAGD,QAAQ;cAAEK,OAAO,EAAE2C,CAAC,CAAC8E,MAAM,CAACF;YAAM,CAAC;UAAE;YAAAnB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACxE,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACC,CAAC,eACN5J,OAAA;UAAKqJ,SAAS,EAAC,WAAW;UAAAC,QAAA,gBACxBtJ,OAAA;YAAAsJ,QAAA,EAAO;UAAS;YAAAG,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC,eACxB5J,OAAA;YACE4K,KAAK,EAAE5H,QAAQ,CAACM,QAAS;YACzBuH,QAAQ,EAAG7E,CAAC,IAAK/C,WAAW,CAAC;cAAE,GAAGD,QAAQ;cAAEM,QAAQ,EAAE0C,CAAC,CAAC8E,MAAM,CAACF;YAAM,CAAC,CAAE;YAAAtB,QAAA,EAEvEN,UAAU,CAACxD,GAAG,CAACwF,GAAG,iBACjBhL,OAAA;cAAkB4K,KAAK,EAAEI,GAAI;cAAA1B,QAAA,EAAE0B;YAAG,GAArBA,GAAG;cAAAvB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAA2B,CAC5C;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACI,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACN,CAAC,eACN5J,OAAA;UAAKqJ,SAAS,EAAC,WAAW;UAAAC,QAAA,gBACxBtJ,OAAA;YAAAsJ,QAAA,EAAO;UAAS;YAAAG,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC,eACxB5J,OAAA;YACE4K,KAAK,EAAE5H,QAAQ,CAACO,QAAS;YACzBsH,QAAQ,EAAG7E,CAAC,IAAK/C,WAAW,CAAC;cAAE,GAAGD,QAAQ;cAAEO,QAAQ,EAAEyC,CAAC,CAAC8E,MAAM,CAACF;YAAM,CAAC,CAAE;YAAAtB,QAAA,EAEvEL,UAAU,CAACzD,GAAG,CAACyF,CAAC,iBACfjL,OAAA;cAAgB4K,KAAK,EAAEK,CAAE;cAAA3B,QAAA,EAAE2B;YAAC,GAAfA,CAAC;cAAAxB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAuB,CACtC;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACI,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACN,CAAC,eACN5J,OAAA;UAAKqJ,SAAS,EAAC,WAAW;UAAAC,QAAA,gBACxBtJ,OAAA;YAAAsJ,QAAA,EAAO;UAAU;YAAAG,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC,eACzB5J,OAAA;YACEkI,IAAI,EAAC,UAAU;YACfpB,OAAO,EAAE9D,QAAQ,CAACQ,SAAU;YAC5BqH,QAAQ,EAAG7E,CAAC,IAAKa,qBAAqB,CAACb,CAAC,CAAC8E,MAAM,CAAChE,OAAO;UAAE;YAAA2C,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC1D,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACC,CAAC,eACN5J,OAAA;UAAKqJ,SAAS,EAAC,eAAe;UAAAC,QAAA,gBAC5BtJ,OAAA;YAAQqJ,SAAS,EAAC,UAAU;YAACG,OAAO,EAAEvC,iBAAkB;YAAAqC,QAAA,EAAC;UAAI;YAAAG,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,eACtE5J,OAAA;YAAQqJ,SAAS,EAAC,YAAY;YAACG,OAAO,EAAEA,CAAA,KAAMhH,kBAAkB,CAAC,KAAK,CAAE;YAAA8G,QAAA,EAAC;UAAM;YAAAG,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACrF,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CACN,EAGAnH,aAAa,IAAIE,aAAa,iBAC7B3C,OAAA;MAAKqJ,SAAS,EAAC,eAAe;MAAAC,QAAA,eAC5BtJ,OAAA;QAAKqJ,SAAS,EAAC,eAAe;QAAAC,QAAA,gBAC5BtJ,OAAA;UAAKqJ,SAAS,EAAC,cAAc;UAAAC,QAAA,EAAC;QAAU;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eAC9C5J,OAAA;UAAKqJ,SAAS,EAAC,WAAW;UAAAC,QAAA,gBACxBtJ,OAAA;YAAAsJ,QAAA,EAAO;UAAM;YAAAG,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC,eACrB5J,OAAA;YACEkI,IAAI,EAAC,MAAM;YACX0C,KAAK,EAAEjI,aAAa,CAACO,KAAM;YAC3B2H,QAAQ,EAAG7E,CAAC,IAAKpD,gBAAgB,CAAC;cAAE,GAAGD,aAAa;cAAEO,KAAK,EAAE8C,CAAC,CAAC8E,MAAM,CAACF;YAAM,CAAC;UAAE;YAAAnB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAChF,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACC,CAAC,eACN5J,OAAA;UAAKqJ,SAAS,EAAC,WAAW;UAAAC,QAAA,gBACxBtJ,OAAA;YAAAsJ,QAAA,EAAO;UAAY;YAAAG,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC,eAC3B5J,OAAA;YACEkI,IAAI,EAAC,MAAM;YACX0C,KAAK,EAAEjI,aAAa,CAACQ,WAAY;YACjC0H,QAAQ,EAAG7E,CAAC,IAAKpD,gBAAgB,CAAC;cAAE,GAAGD,aAAa;cAAEQ,WAAW,EAAE6C,CAAC,CAAC8E,MAAM,CAACF;YAAM,CAAC;UAAE;YAAAnB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACtF,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACC,CAAC,eACN5J,OAAA;UAAKqJ,SAAS,EAAC,WAAW;UAAAC,QAAA,gBACxBtJ,OAAA;YAAAsJ,QAAA,EAAO;UAAW;YAAAG,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC,eAC1B5J,OAAA;YACEkI,IAAI,EAAC,MAAM;YACX0C,KAAK,EAAEjI,aAAa,CAACS,SAAU;YAC/ByH,QAAQ,EAAG7E,CAAC,IAAKpD,gBAAgB,CAAC;cAAE,GAAGD,aAAa;cAAES,SAAS,EAAE4C,CAAC,CAAC8E,MAAM,CAACF;YAAM,CAAC;UAAE;YAAAnB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACpF,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACC,CAAC,eACN5J,OAAA;UAAKqJ,SAAS,EAAC,WAAW;UAAAC,QAAA,gBACxBtJ,OAAA;YAAAsJ,QAAA,EAAO;UAAS;YAAAG,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC,eACxB5J,OAAA;YACEkI,IAAI,EAAC,MAAM;YACX0C,KAAK,EAAEjI,aAAa,CAACU,OAAQ;YAC7BwH,QAAQ,EAAG7E,CAAC,IAAKpD,gBAAgB,CAAC;cAAE,GAAGD,aAAa;cAAEU,OAAO,EAAE2C,CAAC,CAAC8E,MAAM,CAACF;YAAM,CAAC;UAAE;YAAAnB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAClF,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACC,CAAC,eACN5J,OAAA;UAAKqJ,SAAS,EAAC,WAAW;UAAAC,QAAA,gBACxBtJ,OAAA;YAAAsJ,QAAA,EAAO;UAAS;YAAAG,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC,eACxB5J,OAAA;YACE4K,KAAK,EAAEjI,aAAa,CAACW,QAAS;YAC9BuH,QAAQ,EAAG7E,CAAC,IAAKpD,gBAAgB,CAAC;cAAE,GAAGD,aAAa;cAAEW,QAAQ,EAAE0C,CAAC,CAAC8E,MAAM,CAACF;YAAM,CAAC,CAAE;YAAAtB,QAAA,EAEjFN,UAAU,CAACxD,GAAG,CAACwF,GAAG,iBACjBhL,OAAA;cAAkB4K,KAAK,EAAEI,GAAI;cAAA1B,QAAA,EAAE0B;YAAG,GAArBA,GAAG;cAAAvB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAA2B,CAC5C;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACI,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACN,CAAC,eACN5J,OAAA;UAAKqJ,SAAS,EAAC,WAAW;UAAAC,QAAA,gBACxBtJ,OAAA;YAAAsJ,QAAA,EAAO;UAAS;YAAAG,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC,eACxB5J,OAAA;YACE4K,KAAK,EAAEjI,aAAa,CAACY,QAAS;YAC9BsH,QAAQ,EAAG7E,CAAC,IAAKpD,gBAAgB,CAAC;cAAE,GAAGD,aAAa;cAAEY,QAAQ,EAAEyC,CAAC,CAAC8E,MAAM,CAACF;YAAM,CAAC,CAAE;YAAAtB,QAAA,EAEjFL,UAAU,CAACzD,GAAG,CAACyF,CAAC,iBACfjL,OAAA;cAAgB4K,KAAK,EAAEK,CAAE;cAAA3B,QAAA,EAAE2B;YAAC,GAAfA,CAAC;cAAAxB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAuB,CACtC;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACI,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACN,CAAC,eACN5J,OAAA;UAAKqJ,SAAS,EAAC,WAAW;UAAAC,QAAA,gBACxBtJ,OAAA;YAAAsJ,QAAA,EAAO;UAAU;YAAAG,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC,eACzB5J,OAAA;YACEkI,IAAI,EAAC,UAAU;YACfpB,OAAO,EAAEnE,aAAa,CAACa,SAAU;YACjCqH,QAAQ,EAAG7E,CAAC,IAAKa,qBAAqB,CAACb,CAAC,CAAC8E,MAAM,CAAChE,OAAO;UAAE;YAAA2C,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC1D,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACC,CAAC,eACN5J,OAAA;UAAKqJ,SAAS,EAAC,eAAe;UAAAC,QAAA,gBAC5BtJ,OAAA;YAAQqJ,SAAS,EAAC,UAAU;YAACG,OAAO,EAAE/B,eAAgB;YAAA6B,QAAA,EAAC;UAAI;YAAAG,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,eACpE5J,OAAA;YAAQqJ,SAAS,EAAC,YAAY;YAACG,OAAO,EAAE9B,iBAAkB;YAAA4B,QAAA,EAAC;UAAM;YAAAG,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,eAC1E5J,OAAA;YAAQqJ,SAAS,EAAC,YAAY;YAACG,OAAO,EAAEA,CAAA,KAAM9G,gBAAgB,CAAC,KAAK,CAAE;YAAA4G,QAAA,EAAC;UAAM;YAAAG,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACnF,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CACN,eAGD5J,OAAA,CAACF,qBAAqB;MACpBoL,MAAM,EAAErI,kBAAmB;MAC3BsI,OAAO,EAAEA,CAAA,KAAMrI,qBAAqB,CAAC,KAAK,CAAE;MAC5CsI,MAAM,EAAErE,0BAA2B;MACnC9F,gBAAgB,EAAEA,gBAAiB;MACnC8B,mBAAmB,EAAEA;IAAoB;MAAA0G,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC1C,CAAC,EAGDnG,gBAAgB,iBACfzD,OAAA;MAAKqJ,SAAS,EAAC,eAAe;MAAAC,QAAA,eAC5BtJ,OAAA;QAAKqJ,SAAS,EAAC,eAAe;QAAAC,QAAA,gBAC5BtJ,OAAA;UAAKqJ,SAAS,EAAC,cAAc;UAAAC,QAAA,EAAC;QAAc;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eAClD5J,OAAA;UAAKqJ,SAAS,EAAC,iBAAiB;UAAAC,QAAA,EAAEzF;QAAc;UAAA4F,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC,eACvD5J,OAAA;UAAKqJ,SAAS,EAAC,eAAe;UAAAC,QAAA,gBAC5BtJ,OAAA;YAAQqJ,SAAS,EAAC,UAAU;YAACG,OAAO,EAAEA,CAAA,KAAMlB,mBAAmB,CAAC,KAAK,CAAE;YAAAgB,QAAA,EAAC;UAAa;YAAAG,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,eAC9F5J,OAAA;YAAQqJ,SAAS,EAAC,UAAU;YAACG,OAAO,EAAEA,CAAA,KAAMlB,mBAAmB,CAAC,QAAQ,CAAE;YAAAgB,QAAA,EAAC;UAAa;YAAAG,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,eACjG5J,OAAA;YAAQqJ,SAAS,EAAC,YAAY;YAACG,OAAO,EAAEA,CAAA,KAAMlB,mBAAmB,CAAC,QAAQ,CAAE;YAAAgB,QAAA,EAAC;UAAM;YAAAG,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACzF,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CACN,EAGA3F,sBAAsB,iBACrBjE,OAAA;MAAKqJ,SAAS,EAAC,eAAe;MAAAC,QAAA,eAC5BtJ,OAAA;QAAKqJ,SAAS,EAAC,eAAe;QAAAC,QAAA,gBAC5BtJ,OAAA;UAAKqJ,SAAS,EAAC,cAAc;UAAAC,QAAA,EAAC;QAAc;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eAClD5J,OAAA;UAAKqJ,SAAS,EAAC,iBAAiB;UAAAC,QAAA,GAAC,oCACE,EAACnF,YAAY,aAAZA,YAAY,uBAAZA,YAAY,CAAEjB,KAAK,EAAC,KACtD,eAAAlD,OAAA;YAAAyJ,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,eACN5J,OAAA;YAAMqJ,SAAS,EAAC,cAAc;YAAAC,QAAA,EAAC;UAAiD;YAAAG,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACpF,CAAC,eACN5J,OAAA;UAAKqJ,SAAS,EAAC,eAAe;UAAAC,QAAA,gBAC5BtJ,OAAA;YAAQqJ,SAAS,EAAC,YAAY;YAACG,OAAO,EAAE7B,aAAc;YAAA2B,QAAA,EAAC;UAAM;YAAAG,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,eACtE5J,OAAA;YAAQqJ,SAAS,EAAC,YAAY;YAACG,OAAO,EAAEA,CAAA,KAAM;cAC5CtF,yBAAyB,CAAC,KAAK,CAAC;cAChCE,eAAe,CAAC,IAAI,CAAC;YACvB,CAAE;YAAAkF,QAAA,EAAC;UAAM;YAAAG,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACf,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CACN;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV;AAACvH,EAAA,CAlkBQL,YAAY;AAAAqJ,EAAA,GAAZrJ,YAAY;AAokBrB,eAAeA,YAAY;AAAC,IAAAqJ,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}